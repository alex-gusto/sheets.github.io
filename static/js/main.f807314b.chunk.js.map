{"version":3,"sources":["components/TreeGridComponent/config lazy /^/.*$/ groupOptions: {} namespace object","components/NavBar.js","helpers/deep-clone.js","components/TreeGridComponent/utils/global-helpers.js","components/TreeGridComponent/TreeGridComponent.js","components/TreeGridComponent/utils/merge-layouts.js","views/TimeTracker/static-layout.js","views/TimeTracker/create-head.js","views/TimeTracker/TimeTrackerGrid/utils/get-prev-event.js","helpers/pick-number.js","components/TreeGridComponent/validator/ChangesHolder.js","components/TreeGridComponent/validator/BaseValidator.js","views/TimeTracker/TimeTrackerGrid/TimeTrackerGrid.js","views/TimeTracker/create-left-columns.js","views/TimeTracker/create-columns.js","components/TreeGridComponent/utils/center-header.js","views/TimeTracker/create-foot.js","views/TimeTracker/create-solid.js","views/TimeTracker/create-rows-def.js","db/dataService.js","views/TreeGridGantt/create-col-name.js","views/TreeGridGantt/static-layout.js","views/TreeGridGantt/create-head.js","views/TreeGridGantt/create-body.js","views/TreeGridGantt/DataListManager.js","views/TreeGridGantt/RunColEditor.js","views/TreeGridGantt/TreeGridGantt.jsx","views/TreeGridGantt/create-layout.js","views/TreeGridGantt/create-solid.js","views/TreeGridGantt/create-cols.js","views/TreeGridGantt/create-left-cols.js","views/TreeGridGantt/create-right-cols.js","views/TimeTracker/TimeTracker.js","views/Companies/static-layout.js","views/Companies/constants.js","views/Companies/create-columns.js","views/Companies/create-head.js","views/Companies/create-foot.js","views/Companies/create-layout.js","views/Companies/create-left-columns.js","views/Companies/Companies.jsx","views/HighchartGant/HighchartGant.jsx","views/TreeGridGanttV2/static-layout.js","views/TreeGridGanttV2/create-body.js","views/TreeGridGanttV2/DataListManager.js","views/TreeGridGanttV2/TreeGridGantt.jsx","views/TreeGridGanttV2/create-layout.js","views/TreeGridGanttV2/create-solid.js","views/TreeGridGanttV2/create-left-cols.js","views/TreeGridGanttV2/create-cols.js","App.js","index.js","components/TreeGridComponent/config/default-layout.js"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","all","slice","keys","Object","module","exports","NavBar","className","to","Component","obj","JSON","parse","stringify","isEmpty","v","isNotEmpty","isNumber","isNaN","window","TreeGrid","Grids","OnCustomAjax","G","IO","data","func","Url","res","default","catch","err","OnDataChanged","GetChanges","defaultProps","onDataChanged","noop","nestedKey","body","Def","DefEmpty","DefParent","Validator","TreeGridComponent","$el","createRef","grid","gridBody","prepareBody","props","dataManager","Worker","subscribeGridEvents","Changes","validChanges","errors","validate","hasErrors","length","Result","AcceptChanges","addEventListener","onDataManagerMessage","removeEventListener","postMessage","changes","Array","isArray","event","console","error","debug","this","initGrid","terminate","Dispose","layout","Data","merge","Debug","Layout","Upload","Format","Flags","Type","Body","current","Helpers","helpers","arr","traverse","item","Items","ref","style","height","width","args","mergeWith","defaultLayout","objValue","srcValue","concat","Cfg","ShowDeleted","AutoSort","DateStrings","ReloadChanged","MainCol","NoVScroll","Sorting","AutoUpdate","StandardFilter","SaveExpanded","PersistentCfg","Filtered","RoundNumbers","RoundNumbersDigits","Size","Undo","RowIndex","SearchLap","FilterLap","Validate","Sync","SyncId","ExportType","Toolbar","Cells30Manipulate","R","Expanded","DefCols","C","CanFilter","Root","AcceptDef","CDef","Panel","Copy","Delete","Select","Move","MenuPrint","Attribute","HideUnused","getPrevEvent","row","_row","GetPrev","Name","pickNumber","find","n","ChangesHolder","_changes","key","message","change","getChange","messages","getMessages","push","getErrorKey","addError","values","reduce","acc","entries","forEach","value","m","BaseValidator","invalidChanges","rules","GetRowById","fn","rule","cb","forEachRule","call","getChanges","TimeTrackerGrid","createLayout","getEventStart","get","eventRow","OperationStartDate","getEventEnd","start","duration","getEventDuration","hours","isUndefined","getPlannedDepth","plannedDepth","getActualDepth","actualDepth","hasActual","getBehindHours","delta","actualHours","isAux","DerrickType","dynamicLayout","MinWidth","CaseSensitive","RelWidth","Cols","CanEmpty","EditFormat","Visible","CanHide","CanPrint","CanExport","Formula","CanEdit","OnChange","ClassFormula","createColumns","Head","mainHeader","Pos","name","_start","_end","config","centerHeader","createHead","Foot","Color","CanDelete","Calculated","hoursFormula","_startFormula","_endFormula","Solid","Cells","OperationStartDateRecalc","Space","Tag","OperationStartDateLabel","OperationStartDateWidth","OperationStartDateFormat","OperationStartDateType","OperationStartDateOnChange","createSolid","commonGroupDef","nameCanEdit","codeCanEdit","Well","Class","Phase","Event","CalcOrder","join","createRowsDef","mergeLayouts","staticLayout","calculatePhases","phases","prevItem","calculate","parent","newItem","k","end","collectItemsOnLevel","deepArr","level","collector","_level","it","DataService","getFromLS","instance","saveToLS","localStorage","setItem","getItem","Phases","getStartTime","PhasesAux","getPhases","PHASE_LEVEL","EVENT_LEVEL","getPhasesAux","Companies","Costs","totalDuration","sum","s","days","date","moment","format","WELL_LEVEL","createColName","prefix","col","index","FastGantt","GanttStyle","Zoom","GanttUnits","GanttWidth","GanttDragUnits","GanttChartRound","GanttHeader1","GanttHeader2","GanttHeader3","Cells05","ZoomType","ZoomWidth","events","dataService","getOnlyEventsAux","Spanned","upHeader","Kind","i","colName","createColNames","assign","CLASSES","createMainBars","mainBarEvents","getOnlyEvents","runBarEventsForAux","Id","Start","Duration","Text","log","title","DataListManager","dataClone","deepClone","flatArrById","list","nextParent","hasChildren","next","prev","indexWithinParent","set","Map","nextId","prevId","_getParentArr","splice","_updateIndexWithinParent","has","isTotally","hasItem","delete","parentId","moveItem","_getFutureIndex","convertedItem","convertItemKeys","_setChildToParent","removeItem","convertedData","test","convertValue","Symbol","cols","CanSort","getPopupGridBody","cellValue","Function","RunColEditor","createPopupLayout","AddOnClick","Cancel","CancelButton","CancelOnClick","Ok","OkButton","OkOnClick","gridId","onStartEdit","GetValue","ShowPopupGrid","onSave","HasChanges","EndEdit","Row","ParentDialog","mainGrid","ParentGrid","box","GetGanttRunBox","SetGanttRunBox","TreeGridGant","TGAddEvent","runEditor","useRef","useMemo","LeftCols","Width","Button","OnClick","RightCols","GanttZoom","GanttDataUnits","GanttCount","GanttRunSave","GanttRun","GanttRunAdjust","createBody","ganttRunKey","newData","gridID","StartUpdate","State","SetValue","Date","EndUpdate","handleRunEditorSave","handleRunColStartEdit","TGSetEvent","keysMap","TimeTracker","setState","save","handleOperationStartDateChange","handleDerrickTypeChange","state","prepareState","ganttGrid","GANTT","mapper","boxKey","End","wells","defs","reCalc","addRowDefinitions","Recalc","TreeGridGantt","Dragging","HideZero","PrintPageOrientation","PrintPageSize","ColPaging","Alternate","Comment","CanCopy","CanSelect","CanDrag","Cells20Data","Cells60Cfg","MenuExport","COLS","day","flat","daysHeader","nameAlign","companiesHeader","commentRow","nameVertAlign","nameRowSpan","replaceAll","toUpperCase","comments","from","rowIndex","random","loremIpsum","toComment","fromComment","getDays","createFoot","useState","getCompanies","setBody","require","Highcharts","HighchartGant","today","setUTCHours","setUTCMinutes","setUTCSeconds","setUTCMilliseconds","getTime","prevEvent","collectEvents","ac","y","text","xAxis","currentDateIndicator","yAxis","categories","plotOptions","series","dragDrop","draggableX","dragMinY","dragMaxY","dragPrecisionX","dataLabels","enabled","allowPointSelect","point","drag","options","containerProps","highcharts","constructorType","GANTTGanttClass","startFormula","endFormula","settings","descendants","ancestors","create","Range","GanttStart","GanttEnd","GanttHtml","GanttTip","GanttAncestors","GanttTask","GanttMarkIncorrectDependencies","GanttMarkDisabledDependencies","GanttCorrectDependencies","GanttDragDependenciesBetween","GanttAssignDependencies","dialog","inputEl","useEffect","oldData","dir","XY","keyPrefix","X","Y","toString","substr","getElementsByTagName","buttonEl","ShowDialog","getElementsByClassName","Close","ShowCalendar","HeadClose","TimeFormat","OnSave","d","updateItem","Sample","path","exact","root","document","getElementById","ReactDOM","render","StrictMode","FocusRect","SelectingCells","SelectingFocus","CopyCols","PasteFocused","Actions","OnCtrlDragRow","OnDragRow","OnDel","Cells70Styles","PanelCopyMenu","Lang","GroupSeparator","GMT"],"mappings":"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","file":"static/js/main.f807314b.chunk.js","sourcesContent":["var map = {\n\t\"./Defaults\": [\n\t\t82,\n\t\t0\n\t],\n\t\"./Defaults.js\": [\n\t\t82,\n\t\t0\n\t],\n\t\"./Text\": [\n\t\t83,\n\t\t1\n\t],\n\t\"./Text.js\": [\n\t\t83,\n\t\t1\n\t],\n\t\"./default-layout\": [\n\t\t34\n\t],\n\t\"./default-layout.js\": [\n\t\t34\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 157;\nmodule.exports = webpackAsyncContext;","import React, { Component } from 'react';\r\nimport './NavBar.css'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass NavBar extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"navigationBar\">\r\n        <h3>Navigation</h3>\r\n        <nav className=\"navigationBarList\">\r\n          <Link to=\"/\" className=\"navItem\">Time tracker</Link>\r\n          <Link to=\"/companies\" className=\"navItem\">Companies</Link>\r\n          <Link to=\"/highcharts-gant\" className=\"navItem\">Highcharts Gantt</Link>\r\n          <Link to=\"/tree-grid-gant\" className=\"navItem\">TreeGrid gantt</Link>\r\n          <Link to=\"/tree-grid-gant-v2\" className=\"navItem\">TreeGrid gantt v2</Link>\r\n          {/*<Link to=\"/wijmo-grid\" className=\"navItem\">Wijmo Grid</Link>*/}\r\n          {/*<Link to=\"/tree-grid\" className=\"navItem\">Tree Grid</Link>*/}\r\n        </nav>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default NavBar\r\n","export default (obj) => JSON.parse(JSON.stringify(obj))\r\n","export default {\r\n    isEmpty: v => v === '',\r\n    isNotEmpty: v => v !== '',\r\n    isNumber: v => typeof v === 'number' && !isNaN(v)\r\n}\r\n","/**\r\n * TreeGrid component\r\n * http://www.treegrid.com/TreeGrid5_6/Doc/TreeGridFAQ.htm\r\n *\r\n */\r\nimport React, { Component, createRef } from 'react'\r\nimport noop from 'lodash/noop'\r\nimport PropTypes from 'prop-types'\r\nimport merge from 'lodash/merge'\r\nimport helpers from './utils/global-helpers'\r\n\r\nconst { TreeGrid, Grids } = window\r\n\r\nGrids.OnCustomAjax = (G, IO, data, func) => {\r\n  if (IO.Url) {\r\n    import(`./config/${IO.Url}`)\r\n      .then(({ default: res }) => func(0, res))\r\n      .catch(err => err)\r\n  } else {\r\n    G.OnDataChanged(G, JSON.parse(G.GetChanges()), func) // TODO: data doesn't match with changes list\r\n  }\r\n  \r\n  return true\r\n}\r\n\r\nconst propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  \r\n  // events\r\n  onDataChanged: PropTypes.func,\r\n  \r\n  // data\r\n  body: PropTypes.arrayOf(PropTypes.object),\r\n  layout: PropTypes.shape({\r\n    Cfg: PropTypes.objectOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number]))\r\n  }).isRequired,\r\n  nestedKey: PropTypes.string,\r\n  \r\n  // rows defaults http://www.treegrid.com/Doc/RowDefaults.htm\r\n  Def: PropTypes.string,\r\n  DefEmpty: PropTypes.string,\r\n  DefParent: PropTypes.string,\r\n  Validator: PropTypes.func\r\n}\r\n\r\nconst defaultProps = {\r\n  onDataChanged: noop,\r\n  nestedKey: 'Items',\r\n  body: [],\r\n  Def: 'R',\r\n  DefEmpty: 'R',\r\n  DefParent: 'R',\r\n  Validator: null\r\n}\r\n\r\nclass TreeGridComponent extends Component {\r\n  static propTypes = propTypes\r\n  \r\n  static defaultProps = defaultProps\r\n  \r\n  $el = createRef()\r\n  \r\n  grid = null\r\n  \r\n  // eslint-disable-next-line react/destructuring-assignment\r\n  gridBody = this.prepareBody(this.props.body)\r\n  \r\n  dataManager = new Worker('/sheets.github.io/ManageData.worker.js')\r\n  \r\n  componentDidMount() {\r\n    this.initGrid()\r\n    this.subscribeGridEvents()\r\n  }\r\n  \r\n  componentWillUnmount() {\r\n    this.dataManager.terminate()\r\n    \r\n    if (!this.grid) return\r\n    this.grid.Dispose()\r\n  }\r\n  \r\n  subscribeGridEvents = () => {\r\n    this.grid.OnDataChanged = (G, { Changes }, func) => {\r\n      const { body, nestedKey, Validator } = this.props\r\n      let validChanges = []\r\n      let errors = []\r\n      \r\n      if (Validator) {\r\n        const validator = new Validator(G)\r\n        ;[validChanges, errors] = validator.validate(Changes)\r\n      }\r\n      \r\n      const hasErrors = errors.length\r\n      func(0, {\r\n        IO: {\r\n          Result: hasErrors ? -1 : 0\r\n        },\r\n        Changes: hasErrors ? errors : validChanges\r\n      })\r\n      \r\n      if (hasErrors) return\r\n      G.AcceptChanges()\r\n      \r\n      const onDataManagerMessage = (...args) => {\r\n        this.onDataManagerMessage(...args)\r\n        \r\n        this.dataManager.removeEventListener('message', onDataManagerMessage)\r\n      }\r\n      \r\n      this.dataManager.addEventListener('message', onDataManagerMessage)\r\n      this.dataManager.postMessage(['update', { changes: Changes, data: body, nestedKey }])\r\n    }\r\n  }\r\n  \r\n  onDataManagerMessage = e => {\r\n    if (!Array.isArray(e.data)) return\r\n    \r\n    const { onDataChanged } = this.props\r\n    const [event, data] = e.data\r\n    \r\n    switch (event) {\r\n      case 'updated':\r\n        onDataChanged(data.data)\r\n        break\r\n      case 'error':\r\n        // eslint-disable-next-line no-console\r\n        console.error('Worker error: ', data.data)\r\n        break\r\n      default:\r\n        // eslint-disable-next-line no-console\r\n        console.debug('Worker: event not found!')\r\n    }\r\n  }\r\n  \r\n  initGrid() {\r\n    const { layout, id } = this.props\r\n    const Data = merge({}, layout)\r\n    \r\n    this.grid = TreeGrid(\r\n      {\r\n        Debug: process.env.NODE_ENV !== 'production' ? 'Problem' : 0,\r\n        id,\r\n        Layout: {\r\n          Data\r\n        },\r\n        Upload: {\r\n          Format: 'JSON',\r\n          Flags: 'Spanned',\r\n          Type: 'Changes,Span,Gantt'\r\n        },\r\n        Data: {\r\n          Data: {\r\n            Body: [this.gridBody]\r\n          }\r\n        }\r\n      },\r\n      \r\n      // root element\r\n      this.$el.current,\r\n      \r\n      // inject to Grid\r\n      {\r\n        Component: this,\r\n        Helpers: helpers\r\n      }\r\n    )\r\n  }\r\n  \r\n  /**\r\n   * Data  format http://www.treegrid.com/Doc/DataFormats.htm#JSONFormat\r\n   * @param arr\r\n   * @returns {{}[]}\r\n   */\r\n  prepareBody(arr) {\r\n    const { nestedKey, Def, DefParent, DefEmpty } = this.props\r\n    \r\n    function traverse(item) {\r\n      if (item[nestedKey] && item[nestedKey].length) {\r\n        item.Def = item.Def || DefParent\r\n        item.Items = item[nestedKey].map(traverse)\r\n      } else {\r\n        item.Def = item.Def || Def\r\n      }\r\n      \r\n      item.DefParent = item.DefParent || DefParent\r\n      item.DefEmpty = item.DefEmpty || DefEmpty\r\n      \r\n      return item\r\n    }\r\n    \r\n    return arr.map(traverse)\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div\r\n        ref={this.$el}\r\n        style={{\r\n          height: '100%',\r\n          width: '100%'\r\n        }}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport default TreeGridComponent\r\n","import mergeWith from 'lodash/mergeWith'\r\nimport defaultLayout from '../config/default-layout'\r\n\r\nexport default function (...args) {\r\n    return mergeWith(\r\n        {},\r\n        defaultLayout,\r\n        ...args,\r\n        function (objValue, srcValue) {\r\n            if (Array.isArray(objValue)) {\r\n                return srcValue.concat(objValue)\r\n            }\r\n        }\r\n    )\r\n}\r\n","export default {\r\n    Cfg: {\r\n        ShowDeleted: \"0\",\r\n        AutoSort: \"0\",\r\n        DateStrings: '1',\r\n        ReloadChanged: '3',\r\n        MainCol: 'name',\r\n        NoVScroll: 1,\r\n        Sorting: 0,\r\n        AutoUpdate: 1,\r\n        StandardFilter: 3,\r\n        SaveExpanded: 1,\r\n        PersistentCfg: 2,\r\n        Filtered: 0,\r\n        RoundNumbers: 1,\r\n        RoundNumbersDigits: 2,\r\n        Size: 'Small',\r\n        Undo: 32,\r\n        RowIndex: \"Pos\",\r\n        SearchLap: 1,\r\n        FilterLap: 1,\r\n        Validate: 'Changed,Messages',\r\n        Sync: 'Horz,Vert',\r\n        SyncId: 'TimeTracker',\r\n        // CfgId: 'Costs',\r\n        ExportType: 'Expanded,Outline,Indent,ForceBorder,TextType,Strings,FixedRows,Size'\r\n    },\r\n    Toolbar: {\r\n        Cells30Manipulate: \"Undo,Redo,Add,AddChild,Calc,Outdent,Indent,ExpandAll,CollapseAll\"\r\n    },\r\n    Def: {\r\n        R: {\r\n            Expanded: 1\r\n        }\r\n    },\r\n    DefCols: {\r\n        C: {\r\n            CanFilter: 0\r\n        }\r\n    },\r\n    Root: {\r\n        AcceptDef: 'Well',\r\n        CDef: 'Well'\r\n    },\r\n    Panel: {\r\n        Copy: 1,\r\n        Delete: 1,\r\n        Select: 1,\r\n        Move: 1\r\n    },\r\n    MenuPrint: {\r\n        Items: 'ColsCaption,Cols,SpaceCaption,RowsCaption,Foot,OptionsCaption,Options,SizeCaption,Size',\r\n        Attribute: 'CanPrint',\r\n        HideUnused: '1'\r\n    }\r\n}\r\n","import centerHeader from '../../components/TreeGridComponent/utils/center-header'\r\n\r\nexport default () => {\r\n    const mainHeader = {\r\n        Pos: 'Pos',\r\n        name: \"Name\",\r\n        code: \"Code\",\r\n        hours: 'Hours',\r\n        _start: 'Start',\r\n        _end: 'End'\r\n    }\r\n\r\n    // set align for header' key\r\n    // http://www.treegrid.com/Doc/ColBasics.htm#HeaderCellvalue\r\n    Object.keys(mainHeader).forEach((key) => centerHeader(key, mainHeader))\r\n\r\n    mainHeader.id = 'Header'\r\n\r\n    return [\r\n        mainHeader\r\n    ]\r\n}\r\n","export default function getPrevEvent(grid, row) {\r\n    const _row = grid.GetPrev(row)\r\n\r\n    if (!_row) return\r\n\r\n    if (_row.Def.Name !== 'Event') {\r\n        return getPrevEvent(grid, _row)\r\n    }\r\n\r\n    return _row\r\n}\r\n","import isNumber from 'lodash/isNumber'\r\nimport isNaN from 'lodash/isNaN'\r\n\r\nexport default function pickNumber(...args) {\r\n    return args.find(n => isNumber(n) && !isNaN(n));\r\n};\r\n","class ChangesHolder {\n  _changes = {}\n\n  static getErrorKey(key) {\n    return `${key}Error`\n  }\n\n  static getMessages(change, key) {\n    return change[ChangesHolder.getErrorKey(key)] || []\n  }\n\n  getChange(id) {\n    const row = this._changes[id]\n    if (!row) {\n      this._changes[id] = { id }\n    }\n\n    return this._changes[id]\n  }\n\n  addError(id, key, message) {\n    const change = this.getChange(id)\n\n    const messages = ChangesHolder.getMessages(change, key)\n    messages.push(message)\n\n    change[ChangesHolder.getErrorKey(key)] = messages\n  }\n\n  removeError(id, key) {\n    this.addError(id, key, '')\n  }\n\n  getChanges() {\n    return Object.values(this._changes).reduce((acc, errors) => {\n      const change = {}\n\n      Object.entries(errors).forEach(([key, value]) => {\n        if (Array.isArray(value)) {\n          change[key] = value.find(m => m) || ''\n        } else {\n          change[key] = value\n        }\n      })\n\n      return [...acc, change]\n    }, [])\n  }\n}\n\nexport default ChangesHolder\n","import ChangesHolder from './ChangesHolder'\n\nclass BaseValidator {\n  validChanges = null\n\n  invalidChanges = null\n\n  rules = {}\n\n  constructor(grid) {\n    if (!grid) {\n      throw new Error('TreeGrid validator: Set related grid!')\n    }\n\n    this.grid = grid\n  }\n\n  _getRow(id) {\n    return this.grid.GetRowById(id)\n  }\n\n  forEachRule(fn) {\n    Object.entries(this.rules).forEach(([rule, cb]) => fn(rule, cb))\n  }\n\n  validate(changes) {\n    this.validChanges = new ChangesHolder()\n    this.invalidChanges = new ChangesHolder()\n\n    changes.forEach(change => {\n      this.forEachRule((key, fn) => {\n        if (key in change) {\n          fn.call(this, change)\n        }\n      })\n    })\n\n    return [this.validChanges.getChanges(), this.invalidChanges.getChanges()]\n  }\n}\n\nexport default BaseValidator\n","import React, { Component } from 'react';\r\nimport TreeGridComponent from '../../../components/TreeGridComponent'\r\n\r\n\r\n// Layout\r\nimport mergeLayouts from '../../../components/TreeGridComponent/utils/merge-layouts'\r\nimport staticLayout from '../static-layout'\r\nimport createColumns from '../create-columns'\r\nimport createLeftColumns from '../create-left-columns'\r\nimport createHead from '../create-head'\r\nimport createFoot from '../create-foot'\r\nimport createSolid from '../create-solid'\r\nimport createRowsDef from '../create-rows-def'\r\n\r\n// Utils\r\nimport getPrevEvent from './utils/get-prev-event'\r\nimport pickNumber from '../../../helpers/pick-number'\r\nimport isUndefined from 'lodash/isUndefined'\r\nimport Validator from '../../../components/TreeGridComponent/validator'\r\n\r\nclass TimeTrackerGrid extends Component {\r\n  layout = this.createLayout()\r\n  \r\n  createLayout() {\r\n    const { OperationStartDate, isAux, DerrickType } = this.props\r\n    const dynamicLayout = {}\r\n    \r\n    dynamicLayout.LeftCols = createLeftColumns()\r\n    \r\n    dynamicLayout.Cols = createColumns({ isAux })\r\n    \r\n    dynamicLayout.Head = createHead()\r\n    \r\n    dynamicLayout.Foot = createFoot()\r\n    \r\n    dynamicLayout.Solid = createSolid({ OperationStartDate, isAux, DerrickType })\r\n    \r\n    dynamicLayout.Def = createRowsDef()\r\n    \r\n    return mergeLayouts(staticLayout, dynamicLayout)\r\n  }\r\n  \r\n  getEventStart = (grid, row, get) => {\r\n    const eventRow = getPrevEvent(grid, row)\r\n    \r\n    if (eventRow) {\r\n      return get(eventRow, '_end')\r\n    }\r\n    \r\n    return this.props.OperationStartDate\r\n  }\r\n  \r\n  getEventEnd = (start, duration) => {\r\n    if (start && typeof duration === 'number') {\r\n      return start + duration\r\n    }\r\n    \r\n    return ''\r\n  }\r\n  \r\n  getEventDuration = (...args) => {\r\n    const hours = pickNumber(...args)\r\n    \r\n    if (isUndefined(hours)) return ''\r\n    \r\n    return 60 * 60 * 1000 * hours // to milliseconds\r\n  }\r\n  \r\n  getPlannedDepth = (grid, row, get, plannedDepth) => {\r\n    if (grid.Helpers.isNotEmpty(plannedDepth)) return plannedDepth\r\n    \r\n    const eventRow = getPrevEvent(grid, row)\r\n    if (eventRow) {\r\n      return get(eventRow, '_plannedDepth')\r\n    }\r\n    \r\n    return 0\r\n  }\r\n  \r\n  getActualDepth = (grid, row, get, actualDepth) => {\r\n    if (grid.Helpers.isNotEmpty(actualDepth)) return actualDepth\r\n    \r\n    if (!this.hasActual(grid, row)) return ''\r\n    \r\n    const eventRow = getPrevEvent(grid, row)\r\n    if (eventRow) {\r\n      return get(eventRow, '_actualDepth')\r\n    }\r\n    \r\n    return 0\r\n  }\r\n  \r\n  getBehindHours = (grid, row, get, delta) => {\r\n    if (!this.hasActual(grid, row)) return ''\r\n    \r\n    const eventRow = getPrevEvent(grid, row)\r\n    const prevDelta = eventRow ? get(eventRow, 'behindHours') : 0\r\n    \r\n    return prevDelta + delta\r\n  }\r\n  \r\n  hasActual = (grid, row) => {\r\n    return grid.Helpers.isNotEmpty(row.actualHours)\r\n  }\r\n  \r\n  render() {\r\n    return <TreeGridComponent\r\n      layout={this.layout}\r\n      nestedKey={TimeTrackerGrid.nestedKey}\r\n      getBehindHours={this.getBehindHours}\r\n      getActualDepth={this.getActualDepth}\r\n      getPlannedDepth={this.getPlannedDepth}\r\n      getEventEnd={this.getEventEnd}\r\n      getEventStart={this.getEventStart}\r\n      getEventDuration={this.getEventDuration}\r\n      Validator={Validator}\r\n      {...this.props}\r\n    />\r\n  }\r\n}\r\n\r\nexport default TimeTrackerGrid\r\n","export default () => {\r\n    return [\r\n        {\r\n            Name: 'code',\r\n            CanFilter: 1,\r\n            MinWidth: 60,\r\n            CaseSensitive: 0\r\n        },\r\n        {\r\n            Name: 'name',\r\n            RelWidth: 1,\r\n            MinWidth: 250,\r\n            CanFilter: 1,\r\n            CaseSensitive: 0\r\n        }\r\n    ]\r\n}\r\n","export default ({ isAux }) => {\r\n    const cols = [\r\n        {\r\n            Name: 'hours',\r\n            MinWidth: 80,\r\n            CanEmpty: 1,\r\n            Format: ',0.00',\r\n            EditFormat: '',\r\n            Type: 'Float'\r\n        },\r\n        {\r\n            Name: '_eventDuration',\r\n            Type: 'Float',\r\n            Visible: 0,\r\n            CanHide: 0,\r\n            CanPrint: 0,\r\n            CanExport: 0,\r\n            Formula: 'Grid.Component.props.getEventDuration(hours)'\r\n        },\r\n        {\r\n            Name: 'start',\r\n            Visible: 0,\r\n            CanHide: 0,\r\n            CanPrint: 0,\r\n            CanExport: 0\r\n        },\r\n        {\r\n            Name: '_start',\r\n            Format: 'yyyy-M-d H:mm',\r\n            Type: 'Date',\r\n            CanEdit: 1,\r\n            OnChange: `Grid.SetValue(Row, \"start\", Value, 1)`,\r\n            ClassFormula: 'Grid.Helpers.isEmpty(start) && \"TSClassReadOnly\"',\r\n            Formula: 'start ? start : Grid.Component.props.getEventStart(Grid, Row, Get)',\r\n            MinWidth: 120\r\n        },\r\n        {\r\n            Name: '_end',\r\n            Format: 'yyyy-M-d H:mm',\r\n            Type: 'Date',\r\n            MinWidth: 120,\r\n            Formula: 'Grid.Component.props.getEventEnd(_start, _eventDuration)'\r\n        }\r\n    ]\r\n\r\n    return cols\r\n}\r\n","export default function centerHeader(key, config) {\r\n    config[`${key}Align`] = 'Center'\r\n}\r\n","export default () => {\r\n    const total = {\r\n        id: 'Total',\r\n        Color: '#D0E6F5',\r\n        CanDelete: 0,\r\n        CanEdit: 0,\r\n        Calculated: 1,\r\n        code: \"SUM\",\r\n\r\n        // calculations\r\n        hoursFormula: 'sum()',\r\n        _startFormula: '',\r\n        _endFormula: 'Grid.GetLast() ? Get(Grid.GetLast(), \"_end\") : \"\"'\r\n    }\r\n\r\n    return [total]\r\n}\r\n","export default ({ OperationStartDate, DerrickType, isAux }) => {\r\n    const topBar = {\r\n        id: 'topBar',\r\n        Space: -1,\r\n        Tag: 'timeGridTopBar',\r\n        Cells: 'OperationStartDate',\r\n\r\n        // OperationStartDate cell settings\r\n        OperationStartDate,\r\n        OperationStartDateLabel: 'Start operation: ',\r\n        OperationStartDateWidth: 120,\r\n        OperationStartDateFormat: 'yyyy-M-d H:mm',\r\n        OperationStartDateType: 'Date',\r\n        OperationStartDateRecalc: 256,\r\n        OperationStartDateOnChange: 'Grid.Component.props.handleOperationStartDateChange(Grid,Value)',\r\n\r\n        // DerrickType,\r\n        // DerrickTypeType: 'Bool',\r\n        // DerrickTypeLabel: 'Aux derrick: ',\r\n        // DerrickTypeOnChange: 'Grid.Component.props.handleDerrickTypeChange(Grid,Value)',\r\n    }\r\n\r\n    const topBarAux = {\r\n        id: 'topBarAux',\r\n        Visible: 0,\r\n        Cells: 'OperationStartDate',\r\n        OperationStartDate,\r\n        OperationStartDateRecalc: 256\r\n    }\r\n\r\n    return isAux ? [topBarAux] : [topBar]\r\n}\r\n","export default () => {\r\n    const commonGroupDef = {\r\n        CanEdit: 0,\r\n        Calculated: 1,\r\n\r\n        nameCanEdit: 1,\r\n        codeCanEdit: 1,\r\n\r\n        // calculations\r\n        hoursFormula: 'sum()',\r\n        _startFormula: 'Row.firstChild ? Get(Row.firstChild, \"_start\") : \"\"',\r\n        _endFormula: 'Row.lastChild ? Get(Row.lastChild, \"_end\") : \"\"',\r\n    }\r\n\r\n    const Well = {\r\n        CDef: 'Phase',\r\n        AcceptDef: 'Phase',\r\n\r\n        Class: 'time-grid-well',\r\n        Color: '#d7d7d7',\r\n\r\n        ...commonGroupDef\r\n    }\r\n\r\n    const Phase = {\r\n        CDef: 'Event',\r\n        AcceptDef: 'Event',\r\n\r\n        Class: 'time-grid-phase',\r\n        Color: '#f0f0f0',\r\n\r\n        ...commonGroupDef\r\n    }\r\n\r\n    const eventCalcOrder = [\r\n        'nameClass',\r\n        '_tftHours',\r\n        '_plannedDepth',\r\n        '_plannedDepthClass',\r\n        '_actualDepth',\r\n        '_actualDepthClass',\r\n        '_eventDuration',\r\n        '_start',\r\n        '_startClass',\r\n        '_end'\r\n    ]\r\n\r\n    const Event = {\r\n        AcceptDef: '',\r\n\r\n        CalcOrder: eventCalcOrder.join()\r\n    }\r\n\r\n    return { Well, Phase, Event }\r\n}\r\n","import data from './data.json';\r\nimport moment from 'moment'\r\n\r\nconst STORAGE_KEY = 'data'\r\n\r\nfunction calculatePhases(phases, start) {\r\n  let prevItem = null\r\n  \r\n  const calculate = (item, parent) => {\r\n    const newItem = {\r\n      name: item.name,\r\n      id: item.id,\r\n      hours: item.hours\r\n    }\r\n    \r\n    if (item.Items) {\r\n      newItem.Items = item.Items.map(k => calculate(k, newItem))\r\n    } else {\r\n      newItem.start = item.start ? item.start : prevItem ? prevItem.end : start\r\n      newItem.end = newItem.start + (item.hours * 60 * 60 * 1000)\r\n      prevItem = newItem\r\n    }\r\n    \r\n    if (!parent) return newItem\r\n    \r\n    if (!parent.start) {\r\n      parent.start = newItem.start\r\n    }\r\n    parent.end = newItem.end || parent.end\r\n    \r\n    return newItem\r\n  }\r\n  \r\n  return phases.map(item => calculate(item))\r\n}\r\n\r\n\r\nconst collectItemsOnLevel = (deepArr, level = 0) => {\r\n  const collector = (acc, item, _level) => {\r\n    if (level === _level) {\r\n      acc.push(item)\r\n      \r\n      return acc\r\n    }\r\n    \r\n    if (_level < level && item.Items) {\r\n      item.Items.forEach(it => collector(acc, it, _level + 1))\r\n    }\r\n    \r\n    return acc\r\n  }\r\n  \r\n  \r\n  return deepArr.reduce((acc, item) => collector(acc, item, 0), [])\r\n}\r\n\r\nclass DataService {\r\n  static WELL_LEVEL = 0\r\n  static PHASE_LEVEL = 1\r\n  static EVENT_LEVEL = 2\r\n  \r\n  data = this.getFromLS() || data\r\n  \r\n  constructor() {\r\n    if (DataService.instance) {\r\n      return DataService.instance\r\n    }\r\n    \r\n    window.DataService = this\r\n    \r\n    DataService.instance = this\r\n  }\r\n  \r\n  save(key, data) {\r\n    if (!key) {\r\n      throw new Error('No key at save method')\r\n    }\r\n    \r\n    this.data[key] = data\r\n    \r\n    this.saveToLS()\r\n  }\r\n  \r\n  saveToLS() {\r\n    localStorage.setItem(STORAGE_KEY, JSON.stringify(this.data))\r\n  }\r\n  \r\n  getFromLS() {\r\n    try {\r\n      return JSON.parse(localStorage.getItem(STORAGE_KEY))\r\n    } catch (e) {\r\n      return null\r\n    }\r\n  }\r\n  \r\n  getStartTime() {\r\n    return this.data.OperationStartDate\r\n  }\r\n  \r\n  getPhases() {\r\n    return calculatePhases(this.data.Phases, this.getStartTime())\r\n  }\r\n  \r\n  getPhasesAux() {\r\n    return calculatePhases(this.data.PhasesAux, this.getStartTime())\r\n  }\r\n  \r\n  getOnlyPhases() {\r\n    return collectItemsOnLevel(this.getPhases(), DataService.PHASE_LEVEL)\r\n  }\r\n  \r\n  getOnlyEvents() {\r\n    return collectItemsOnLevel(this.getPhases(), DataService.EVENT_LEVEL)\r\n  }\r\n  \r\n  getOnlyEventsAux() {\r\n    return collectItemsOnLevel(this.getPhasesAux(), DataService.EVENT_LEVEL)\r\n  }\r\n  \r\n  getCompanies() {\r\n    return this.data.Companies\r\n  }\r\n  \r\n  getCosts() {\r\n    return this.data.Costs\r\n  }\r\n  \r\n  getDays() {\r\n    const sum = (arr) => arr.reduce((s, item) => {\r\n      if (item.Items) {\r\n        return s + sum(item.Items)\r\n      }\r\n      \r\n      return s + (item.hours || 0)\r\n    }, 0)\r\n    \r\n    let totalDuration = sum(this.data.Phases)\r\n    const start = this.getStartTime()\r\n    const days = []\r\n    \r\n    while (totalDuration > 0) {\r\n      const date = moment(start + totalDuration * 60 * 60 * 1000)\r\n      days.push(date.format('YYYY_MM_DD'))\r\n      totalDuration -= 24\r\n    }\r\n    \r\n    return days\r\n  }\r\n}\r\n\r\nexport default new DataService()\r\n","const createColName = (id, prefix = '') => `${prefix}_${id}`\n\nexport const GANTT_COL_NAME = 'G'\n\nexport default {\n  nameColName: (item) => createColName(item.id, 'name'),\n  startColName: (item) => createColName(item.id, 'start'),\n  endColName: (item) => createColName(item.id, 'end'),\n  getColNameWithIndex: (col, index) => `${GANTT_COL_NAME}${col}${index || ''}`\n}\n","export default {\n  Cfg: {\n    AutoUpdate: 1,\n    Undo: 32,\n    NoVScroll: 1,\n    FastGantt: 1,\n    GanttStyle: 'Standard'\n  },\n  Zoom: [\n    {\n      Name: \"months\",\n      GanttUnits: \"d\",\n      GanttWidth: \"50\", // 1 day equal 50px\n      GanttDragUnits: 'h',\n      GanttChartRound: \"d\",\n      GanttHeader1: \"M#MMMM yyyy\"\n    },\n    {\n      Name: \"days\",\n      GanttUnits: \"h\",\n      GanttWidth: \"8\", // 1 hour equal 8px\n      GanttDragUnits: 'm',\n      GanttChartRound: \"d\",\n      GanttHeader1: \"d#dddd dddddd MMMM yyyy\",\n      GanttHeader2: \"h6#HH\"\n    },\n    {\n      Name: \"hours\",\n      GanttUnits: \"h\",\n      GanttWidth: \"25\", // 1 hour equal 25px\n      GanttDragUnits: 'm',\n      GanttChartRound: \"h\",\n      GanttHeader1: \"d#dddd dddddd MMMM yyyy\",\n      GanttHeader2: \"h#HH\"\n    },\n    {\n      Name: \"minutes\",\n      GanttUnits: \"m\",\n      GanttWidth: \"2\", // 1 minute equal 2px\n      GanttDragUnits: 's',\n      GanttChartRound: \"h\",\n      GanttHeader1: \"d#dddd dddddd MMMM yyyy\",\n      GanttHeader2: \"h#HH\",\n      GanttHeader3: \"m15#mm\"\n    }\n  ],\n  Toolbar: {\n    Visible: 0,\n    Cells05: \"Zoom\",\n    ZoomType: \"SelectGanttZoom\",\n    ZoomWidth: \"90\"\n  }\n}\n","import dataService from '../../db/dataService'\nimport createColNames from './create-col-name'\n\nexport default () => {\n  const events = dataService.getOnlyEventsAux()\n  const mainHeader = {\n    id: 'Header',\n    Spanned: 1\n  }\n  \n  const upHeader = {\n    Kind: 'Header'\n  }\n  \n  events.forEach((event, i) => {\n    const colName = createColNames.startColName(event)\n    Object.assign(mainHeader, {\n      [colName]: event.name,\n      [`${colName}Span`]: 2\n    })\n    \n    Object.assign(upHeader, {\n      [createColNames.startColName(event)]: 'Start',\n      [createColNames.endColName(event)]: 'End'\n    })\n  })\n  \n  return [mainHeader, upHeader]\n}\n","import dataService from '../../db/dataService'\nimport createColNames from './create-col-name'\nimport moment from 'moment'\n\nconst CLASSES = ['Aqua', 'Blue', 'Fuchsia', 'Gray', 'Green', 'Lime', 'Maroon', 'Navy', 'Olive', 'Orange', 'Purple', 'Red', 'Silver', 'Teal', 'White', 'Yellow']\n\nconst createMainBars = (arr) => {\n  return arr.reduce((acc, item, i) => {\n    acc[createColNames.getColNameWithIndex('GanttHtml', i)] = item.name\n    acc[createColNames.getColNameWithIndex('GanttClass', i)] = CLASSES[i]\n    acc[createColNames.getColNameWithIndex('GanttStart', i)] = item.start\n    acc[createColNames.getColNameWithIndex('GanttEnd', i)] = item.end\n    \n    return acc\n  }, {})\n}\n\nconst createRunBars = (arr) => {\n  return arr.map((event, i) => {\n    return {\n      Id: event.id,\n      Start: event.start, // moment(event.start).format('MM/DD/YYYY HH:mm:ss'),\n      // End: moment(event.end).format('MM/DD/YYYY HH:mm:ss'),\n      Duration: event.hours,\n      Class: CLASSES[i],\n      Text: event.name\n    }\n  })\n}\n\nexport default () => {\n  const mainBarEvents = createMainBars(dataService.getOnlyEvents())\n  const mainBarEventsForAux = createMainBars(dataService.getOnlyEventsAux())\n  const runBarEventsForAux = createRunBars(dataService.getOnlyEventsAux())\n  \n  console.log(runBarEventsForAux)\n  return [\n    // {\n    //   id: '64029a29010',\n    //   name: 'Main phases',\n    //   CanEdit: 0,\n    //   events: 'phasesMain'\n    // },\n    {\n      id: '24029a29010',\n      title: 'Main events',\n      CanEdit: 0,\n      ...mainBarEvents\n    },\n    // {\n    //   id: '63029a29010',\n    //   title: 'Aux events',\n    //   ...mainBarEventsForAux\n    // },\n    // {\n    //   id: '54029a29010'\n    // },\n    {\n      id: 'TimeTrackerAux',\n      title: 'Aux events',\n      events: runBarEventsForAux\n    }\n  ]\n}\n","import merge from 'lodash/merge'\r\nimport set from 'lodash/set'\r\nimport deepClone from '../../helpers/deep-clone'\r\n\r\nconst convertValue = value => {\r\n  if (value === '') return value\r\n  \r\n  if (value === '0') return 0\r\n  \r\n  return +value || value\r\n}\r\n\r\nclass DataListManager {\r\n  // symbol vars for ignoring JSON.stringify\r\n  static parent = Symbol('parent')\r\n  \r\n  static next = Symbol('next')\r\n  \r\n  static prev = Symbol('prev')\r\n  \r\n  static indexWithinParent = Symbol('indexWithinParent')\r\n  \r\n  #list\r\n  \r\n  #data\r\n  \r\n  nestedKey = ''\r\n  \r\n  constructor(data, nestedKey) {\r\n    const dataClone = deepClone(data)\r\n    this.nestedKey = nestedKey\r\n    \r\n    // TODO: fix flatting for more than one well. Now it works just for two levels\r\n    // nextParent is defined wrong.\r\n    function flatArrById(arr, list, parent = null, nextParent = null) {\r\n      let i = 0\r\n      while (i < arr.length) {\r\n        const item = arr[i++]\r\n        const hasChildren = nestedKey && item[nestedKey] && item[nestedKey].length > 0\r\n        \r\n        if (hasChildren) {\r\n          // eslint-disable-next-line prefer-destructuring\r\n          item[DataListManager.next] = item[nestedKey][0] // get first child\r\n        } else {\r\n          item[DataListManager.next] = arr[i] ? arr[i] : nextParent // get sibling item or next parent\r\n        }\r\n        \r\n        item[DataListManager.parent] = parent\r\n        item[DataListManager.prev] = arr[i - 2] ? arr[i - 2] : parent\r\n        item[DataListManager.indexWithinParent] = i - 1\r\n        list.set(item.id, item)\r\n        \r\n        if (hasChildren) {\r\n          flatArrById(item[nestedKey], list, item, arr[i])\r\n        }\r\n      }\r\n      \r\n      return list\r\n    }\r\n    \r\n    this.#data = dataClone\r\n    this.#list = flatArrById(dataClone, new Map())\r\n  }\r\n  \r\n  get data() {\r\n    return deepClone(this.#data)\r\n  }\r\n  \r\n  /**\r\n   * Get future index for inserting item. choose between nextIndex or prevIndex\r\n   * @param nextId - uid\r\n   * @param prevId - uid\r\n   * @returns {number}\r\n   * @private\r\n   */\r\n  _getFutureIndex(nextId, prevId) {\r\n    const next = this.getItem(nextId)\r\n    const prev = this.getItem(prevId)\r\n    \r\n    if (next) {\r\n      return next[DataListManager.indexWithinParent]\r\n    }\r\n    \r\n    if (prev) {\r\n      return prev[DataListManager.indexWithinParent] + 1\r\n    }\r\n    \r\n    return 0\r\n  }\r\n  \r\n  /**\r\n   * Returns parent's array for child item\r\n   * @param parent\r\n   * @returns {Array}\r\n   * @private\r\n   */\r\n  _getParentArr(parent) {\r\n    if (parent) {\r\n      parent[this.nestedKey] = parent[this.nestedKey] || []\r\n      return parent[this.nestedKey]\r\n    }\r\n    \r\n    return this.#data\r\n  }\r\n  \r\n  /**\r\n   * Add child to array and update their index\r\n   * @param parent\r\n   * @param index\r\n   * @param item\r\n   * @private\r\n   */\r\n  _setChildToParent(parent, index, item) {\r\n    const arr = this._getParentArr(parent)\r\n    \r\n    arr.splice(index, 0, item)\r\n    this._updateIndexWithinParent(arr)\r\n  }\r\n  \r\n  _updateIndexWithinParent(arr) {\r\n    let i = 0\r\n    while (i < arr.length) {\r\n      const item = this.#list.get(arr[i++].id)\r\n      item[DataListManager.indexWithinParent] = i - 1\r\n    }\r\n  }\r\n  \r\n  getItem(id) {\r\n    return this.#list.get(id)\r\n  }\r\n  \r\n  hasItem(id) {\r\n    return this.#list.has(id)\r\n  }\r\n  \r\n  /**\r\n   * Remove item from parent or from parent & list\r\n   * @param id\r\n   * @param isTotally{Boolean}\r\n   */\r\n  removeItem(id, isTotally = true) {\r\n    if (!this.hasItem(id)) {\r\n      return\r\n    }\r\n    \r\n    const item = this.getItem(id)\r\n    const parent = item[DataListManager.parent]\r\n    const index = item[DataListManager.indexWithinParent]\r\n    \r\n    // remove item from list\r\n    if (isTotally) this.#list.delete(id)\r\n    \r\n    const arr = this._getParentArr(parent)\r\n    \r\n    arr.splice(index, 1)\r\n    this._updateIndexWithinParent(arr)\r\n  }\r\n  \r\n  addItem(id, parentId, nextId, prevId, item) {\r\n    if (this.hasItem(id)) {\r\n      this.moveItem(id, parentId, nextId, prevId)\r\n      return\r\n    }\r\n    \r\n    const parent = this.getItem(parentId)\r\n    const index = this._getFutureIndex(nextId, prevId)\r\n    const convertedItem = DataListManager.convertItemKeys(item)\r\n    // update list\r\n    this.#list.set(id, convertedItem)\r\n    \r\n    // set parent\r\n    convertedItem[DataListManager.parent] = parent\r\n    \r\n    this._setChildToParent(parent, index, convertedItem)\r\n  }\r\n  \r\n  moveItem(id, parentId, nextId, prevId) {\r\n    const item = this.getItem(id)\r\n    const parent = this.getItem(parentId)\r\n    const index = this._getFutureIndex(nextId, prevId)\r\n    \r\n    // remove item from old parent\r\n    this.removeItem(id, false)\r\n    \r\n    // change parent\r\n    item[DataListManager.parent] = parent\r\n    \r\n    this._setChildToParent(parent, index, item)\r\n  }\r\n  \r\n  updateItem(id, data) {\r\n    if (!this.hasItem(id)) {\r\n      return\r\n    }\r\n    \r\n    const item = this.getItem(id)\r\n    const convertedData = DataListManager.convertItemKeys(data)\r\n    merge(item, convertedData)\r\n  }\r\n  \r\n  static convertItemKeys(item) {\r\n    // TODO: change after model structure concern\r\n    return Object.entries(item).reduce((acc, [key, value]) => {\r\n      if (/^_|^f_|^[A-Z]_|Click|Error/.test(key) && !/Span$/.test(key)) return acc // ignore temp keys\r\n      \r\n      value = convertValue(value) // TODO: replace to TReeGrid config. convert to number.\r\n      \r\n      set(acc, key, value)\r\n      return acc\r\n    }, {})\r\n  }\r\n}\r\n\r\nexport { DataListManager, DataListManager as default }\r\n","import { GANTT_COL_NAME } from './create-col-name'\n\nconst cols = [\n  {\n    Name: 'Text',\n    CanSort: 0\n  },\n  {\n    Name: 'Start',\n    Type: 'Date',\n    MinWidth: 80,\n    CanSort: 0\n  },\n  {\n    Name: 'Duration',\n    Type: 'Float',\n    MinWidth: 80,\n    CanSort: 0\n  },\n  {\n    Name: 'End',\n    Type: 'Date',\n    MinWidth: 80,\n    CanSort: 0,\n    Formula: 'Start + Duration * 1000 * 60 * 60'\n  }\n]\n\nfunction getPopupGridBody(cellValue) {\n  return Function(`return ${cellValue}`)()\n}\n\nclass RunColEditor {\n  constructor({ id, colName = 'events' } = {}) {\n    this.gridId = id\n    this.colName = colName\n  }\n  \n  createPopupLayout = cellValue => {\n    const body = getPopupGridBody(cellValue)\n    console.log(body)\n    return {\n      Toolbar: {\n        Cells: 'Cancel,Ok',\n        \n        AddOnClick: 'AddRowEnd',\n        \n        Cancel: 'Cancel',\n        CancelButton: 'Button',\n        CancelOnClick: 'Grid.ParentDialog.Close(); return 1;',\n        \n        Ok: 'Save',\n        OkButton: 'Button',\n        OkOnClick: `Grids[\"${this.gridId}\"].Component.props.handleRunEditorSave(Grid); Grid.ParentDialog.Close(); return 1;`\n      },\n      Cols: cols,\n      Body: [body]\n    }\n  }\n  \n  onStartEdit = (grid, row, col) => {\n    const cellValue = grid.GetValue(row, this.colName)\n    return grid.ShowPopupGrid(row, col, this.createPopupLayout(cellValue))\n  }\n  \n  onSave = grid => {\n    if (!grid.HasChanges()) return\n    grid.EndEdit(1) // Finishes editing if any http://www.treegrid.com/Doc/CellEdit.htm?Mark=EndEdit#EndEdit\n    \n    const { Row } = grid.ParentDialog\n    const mainGrid = grid.ParentGrid\n    const changes = JSON.parse(grid.GetChanges()).Changes\n    changes.forEach(row => {\n      const box = mainGrid.GetGanttRunBox(Row, GANTT_COL_NAME, row.id)\n      console.log(box, row)\n      console.log(mainGrid.SetGanttRunBox(Object.assign(box, row)))\n    })\n  }\n}\n\nexport default RunColEditor\n","import React, { useEffect, useRef, useMemo } from 'react'\nimport TreeGridComponent from '../../components/TreeGridComponent'\nimport createLayout from './create-layout'\nimport createBody from './create-body'\nimport dataService from '../../db/dataService'\nimport DataListManager from './DataListManager'\nimport last from 'lodash/last'\nimport RunColEditor from './RunColEditor'\n\nconst GRID_ID = 'GANTT'\n\nconst { TGAddEvent } = window\n\nconst TreeGridGant = () => {\n  const runEditor = useRef(new RunColEditor({ id: 'GANTT' }))\n  const layout = useMemo(() => createLayout(), [])\n  const body = useMemo(() => createBody(), [])\n  let dialog = null\n  let inputEl = null\n  \n  const handleRunColStartEdit = (...args) => runEditor.current.onStartEdit(...args)\n  const handleRunEditorSave = (...args) => runEditor.current.onSave(...args)\n  // useEffect(() => {\n  //   TGAddEvent('OnDragGanttRun', GRID_ID, (grid, row, col, index, start, newData, oldData, change, dir, XY, keyPrefix, X, Y) => {\n  //     const date = new Date(newData).toString().substr(0, 21)\n  //     if (dialog) {\n  //       inputEl = dialog.Tag.getElementsByTagName(\"input\")[0]\n  //       inputEl.value = date\n  //       return\n  //     }\n  //\n  //     dialog = window.ShowDialog(\n  //       {\n  //         Body: `<div style=\"display: flex; align-items: center;\">\n  //           <input type=\"text\" style=\"width: 140px\" value=\"${date}\">\n  //           <button class=\"TSDateRight date\" style=\"background-color: transparent;border: 0;width: 20px;height: 20px;padding: 0;cursor: pointer;\"></button>\n  //           <button class=\"close\" style=\"background-color: transparent;border: 0;width: 20px;height: 20px;padding: 0;cursor: pointer;\">x</button>\n  //         </div>`\n  //       },\n  //       {\n  //         X, Y: Y + 12\n  //       }\n  //     )\n  //\n  //     const buttonEl = dialog.Tag.getElementsByClassName(\"date\")[0]\n  //     const closeButtonEl = dialog.Tag.getElementsByClassName(\"close\")[0]\n  //\n  //     closeButtonEl.addEventListener(\"click\", () => {\n  //       dialog.Close();\n  //       dialog = null\n  //     })\n  //\n  //     buttonEl.addEventListener(\"click\", () => {\n  //       window.ShowCalendar(\n  //         {\n  //           Date: newData,\n  //           HeadClose: 1,\n  //           TimeFormat: 'HH:mm',\n  //           OnSave(d) {\n  //             inputEl.value = new Date(d).toString().substr(0, 21)\n  //           }\n  //         },\n  //         {\n  //           X, Y\n  //         }\n  //       )\n  //     })\n  //   })\n  //\n  //   TGAddEvent('OnEndDragGanttRun', GRID_ID, (grid, row, col, index, start, newData) => {\n  //     // dialog.Close()\n  //     // dialog = null\n  //   })\n  // }, [])\n  \n  const onDataChanged = (newData) => {\n    // const dataManager = new DataListManager(dataService.data.PhasesAux, 'Items')\n    \n    newData.forEach(row => {\n      let { events, CanEdit, id: gridID } = row\n      \n      const grid = window.Grids[gridID]\n      if (!grid) return\n      \n      grid.StartUpdate()\n      \n      if (CanEdit === 0) return\n      \n      if (typeof events === 'string') {\n        events = Function(`return ${events}`)()\n      }\n      events.forEach(({ Id, Start, Duration, Text, State }) => {\n        if (!State) return\n        \n        const _row = grid.GetRowById(Id)\n        \n        grid.SetValue(_row, 'start', +new Date(Start))\n        grid.SetValue(_row, 'hours', +Duration)\n        grid.SetValue(_row, 'name', Text)\n        \n        // dataManager.updateItem(Id, {\n        //   start: +new Date(Start),\n        //   hours: Duration,\n        //   name: Text\n        // })\n      })\n      \n      grid.EndUpdate()\n    })\n    \n    // dataService.save('PhasesAux', dataManager.data)\n  }\n  \n  return <TreeGridComponent id={GRID_ID} ganttRunKey={'events'} layout={layout} body={body}\n                            onDataChanged={onDataChanged} handleRunEditorSave={handleRunEditorSave}\n                            handleRunColStartEdit={handleRunColStartEdit}/>\n}\n\nexport default TreeGridGant\n","import createCols from './create-cols'\nimport createLeftCols from './create-left-cols'\nimport createRightCols from './create-right-cols'\nimport mergeLayouts from '../../components/TreeGridComponent/utils/merge-layouts'\nimport staticLayout from './static-layout'\nimport createSolid from './create-solid'\nimport dataService from '../../db/dataService'\nimport createHead from './create-head'\n\nexport default () => {\n  const dynamicLayout = {\n    Head: createHead(),\n    Cols: createCols(),\n    LeftCols: createLeftCols(),\n    RightCols: createRightCols(dataService.getStartTime()),\n    Solid: createSolid(dataService.getStartTime())\n  }\n  \n  return mergeLayouts(staticLayout, dynamicLayout)\n}\n","export default (OperationStartDate) => {\r\n  const topBar = {\r\n    id: 'topBar',\r\n    Space: -1,\r\n    Cells: 'OperationStartDate',\r\n    \r\n    // OperationStartDate cell settings\r\n    OperationStartDate,\r\n    OperationStartDateLabel: 'Start operation: ',\r\n    OperationStartDateWidth: 120,\r\n    OperationStartDateFormat: 'yyyy-M-d H:mm',\r\n    OperationStartDateType: 'Date',\r\n    OperationStartDateRecalc: 256,\r\n    OperationStartDateOnChange: 'Grid.Component.props.handleOperationStartDateChange(Grid,Value)'\r\n  }\r\n  \r\n  return [topBar]\r\n}\r\n","import dataService from '../../db/dataService'\nimport createColNames from './create-col-name'\n\nexport default () => {\n  const cols = []\n  \n  // dataService.getOnlyEvents().forEach((event,i) => {\n  //   cols.push({\n  //       Name: createColNames.getColNameWithIndex('GanttStart', i),\n  //       Format: 'yyyy-M-d H:mm',\n  //       Type: 'Date',\n  //       Width: 80\n  //     },\n  //     {\n  //       Name: createColNames.getColNameWithIndex('GanttEnd', i),\n  //       Format: 'yyyy-M-d H:mm',\n  //       Type: 'Date',\n  //       Width: 80\n  //     })\n  // })\n  \n  return cols\n}\n","export default () => {\n  return [\n    {\n      Name: 'title',\n      Visible: 0\n    },\n    {\n      Name: 'events',\n      Width: 80,\n      Visible: 0,\n      Button: 'Enum',\n      OnClick: 'Focus,Grid.Component.props.handleRunColStartEdit(Grid,Row, Col)'\n    }\n  ]\n}\n","import dataService from '../../db/dataService'\nimport { GANTT_COL_NAME } from './create-col-name'\n\nexport default (start) => {\n  const ganttCol = {\n    Name: GANTT_COL_NAME,\n    Type: 'Gantt',\n    GanttZoom: 'days',\n    GanttDataUnits: 'h',\n    \n    // Main settings\n    GanttCount: 10,\n    \n    // Run settings\n    GanttRunSave: 2,\n    GanttRun: 'events',\n    GanttRunAdjust: 'Shrink'\n  }\n  \n  return [\n    ganttCol\n  ]\n}\n","import React, { Component } from 'react'\r\nimport deepClone from '../../helpers/deep-clone'\r\nimport TimeTrackerGrid from './TimeTrackerGrid'\r\nimport dataService from '../../db/dataService'\r\nimport TreeGridGantt from '../TreeGridGantt'\r\n\r\nconst { TGSetEvent } = window\r\n\r\nconst convertValue = value => {\r\n  if (value === '') return value\r\n  \r\n  if (value === '0') return 0\r\n  \r\n  return +value || value\r\n}\r\n\r\nconst keysMap = {\r\n  start: ['Start', (v) => v],\r\n  hours: ['Duration', (v) => v * 60 * 60 * 1000],\r\n  name: ['Text', (v) => v]\r\n}\r\n\r\nclass TimeTracker extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    \r\n    this.state = {\r\n      DerrickType: 1,\r\n      Phases: this.prepareState(dataService.data.Phases),\r\n      PhasesAux: this.prepareState(dataService.data.PhasesAux),\r\n      OperationStartDate: dataService.getStartTime()\r\n    }\r\n    \r\n    TGSetEvent('OnSave', 'TimeTrackerAux', (grid) => {\r\n      const { Changes } = JSON.parse(grid.GetChanges())\r\n      const ganttGrid = window.Grids.GANTT\r\n      const row = ganttGrid.GetRowById('TimeTrackerAux')\r\n      \r\n      Changes.forEach(change => {\r\n        const box = ganttGrid.GetGanttRunBox(row, 'G', change.id)\r\n        \r\n        Object.entries(change).forEach(([key, value]) => {\r\n          const mapper = keysMap[key]\r\n          if (!mapper) return\r\n          const [boxKey, fn] = mapper\r\n          \r\n          box[boxKey] = fn(value)\r\n        })\r\n        box.End = null\r\n        console.log(ganttGrid.SetGanttRunBox(box, 'Resize'))\r\n      })\r\n    })\r\n  }\r\n  \r\n  prepareState(data) {\r\n    const wells = deepClone(data)\r\n    const defs = ['Well', 'Phase', 'Event']\r\n    const reCalc = [3, 3, 256]\r\n    \r\n    function addRowDefinitions(row, level = 0) {\r\n      row.Def = defs[level]\r\n      row.Recalc = reCalc[level]\r\n      \r\n      if (row.Items) {\r\n        row.Items.forEach(row => addRowDefinitions(row, level + 1))\r\n      }\r\n    }\r\n    \r\n    wells.forEach(row => addRowDefinitions(row, 0))\r\n    return wells\r\n  }\r\n  \r\n  onDataChanged = (newData, key) => {\r\n    this.setState(\r\n      { [key]: newData },\r\n      () => {\r\n        dataService.save(key, newData)\r\n      }\r\n    )\r\n  }\r\n  \r\n  handleOperationStartDateChange = (grid, value) => {\r\n    this.setState({ OperationStartDate: value })\r\n  }\r\n  \r\n  handleDerrickTypeChange = (grid, value) => {\r\n    this.setState({ DerrickType: value })\r\n  }\r\n  \r\n  render() {\r\n    const { DerrickType, Phases, PhasesAux, OperationStartDate } = this.state\r\n    \r\n    return (\r\n      <div className=\"time-grid-view\">\r\n        <TreeGridGantt/>\r\n        \r\n        <div id=\"timeGridTopBar\" className=\"time-grid-view__top-bar\"/>\r\n        \r\n        <div className=\"time-grid-view__grids\">\r\n          <TimeTrackerGrid\r\n            id=\"TimeTrackerMain\"\r\n            body={Phases}\r\n            DerrickType={DerrickType}\r\n            OperationStartDate={OperationStartDate}\r\n            handleDerrickTypeChange={this.handleDerrickTypeChange}\r\n            handleOperationStartDateChange={this.handleOperationStartDateChange}\r\n            onDataChanged={(data) => this.onDataChanged(data, 'Phases')}\r\n          />\r\n          \r\n          {DerrickType ? <TimeTrackerGrid\r\n            id=\"TimeTrackerAux\"\r\n            isAux={true}\r\n            body={PhasesAux}\r\n            DerrickType={DerrickType}\r\n            OperationStartDate={OperationStartDate}\r\n            onDataChanged={(data) => this.onDataChanged(data, 'PhasesAux')}\r\n          /> : ''}\r\n        </div>\r\n      \r\n      \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TimeTracker\r\n","export default {\n  Cfg: {\n    Dragging: 1,\n    HideZero: 1,\n    Size: 'Small',\n    ShowDeleted: 0,\n    AutoSort: 0,\n    RowIndex: 'Pos',\n    Filtered: 0,\n    RoundNumbers: 1,\n    RoundNumbersDigits: 2,\n    ExportType: 'Expanded,Outline,Indent,ForceBorder,TextType,Strings,FixedRows,Size',\n    PrintPageOrientation: 1,\n    PrintPageSize: 7,\n    Undo: 32,\n    ColPaging: 2,\n    NoVScroll: 1,\n    Alternate: 2,\n    AutoUpdate: 1\n  },\n  Def: {\n    Comment: {\n      CanEdit: 0,\n      CanCopy: 0,\n      CanDelete: 0,\n      CanSelect: 0,\n      CanDrag: 0\n    }\n  },\n  Toolbar: {\n    Cells30Manipulate: 'Undo,Redo',\n    Cells20Data: 'Print,ExportPDF,Export,Columns',\n    Cells60Cfg: 'Help'\n  },\n  Panel: {\n    Select: 1,\n    Copy: 1,\n    Delete: 1,\n    Move: 1\n  },\n  MenuExport: {\n    Items: 'ColsCaption,Cols,RowsCaption,OptionsCaption,Options',\n    Attribute: 'CanExport',\n    HideUnused: 1\n  },\n  MenuPrint: {\n    Items: 'ColsCaption,Cols,SpaceCaption,RowsCaption,OptionsCaption,Options,SizeCaption,Size',\n    Attribute: 'CanPrint',\n    HideUnused: '1'\n  }\n}\n","export const COLS = ['in', 'out', 'onboard']\n","import { COLS } from './constants'\n\nexport default (days) => {\n  \n  return [\n    {\n      Name: 'prior'\n    },\n    ...days.map(day => COLS.map(col => ({ Name: `${day}_${col}`, Width: 60 }))).flat()\n  ]\n}\n","import random from 'lodash/random';\nimport { loremIpsum } from 'lorem-ipsum'\nimport { COLS } from './constants'\n\nexport default (days) => {\n  const daysHeader = {\n    Kind: 'Header',\n    Spanned: 1,\n    \n    name: 'Name',\n    nameAlign: 'Center'\n  }\n  \n  const companiesHeader = {\n    Kind: 'Header'\n  }\n  \n  const commentRow = {\n    Def: 'Comment',\n    Spanned: 1,\n    name: 'Comments',\n    nameAlign: 'Center',\n    nameVertAlign: 'middle',\n    nameRowSpan: 10\n  }\n  \n  days.forEach(day => {\n    const colName = `${day}_in`\n    \n    Object.assign(daysHeader, {\n      [colName]: day.replaceAll('_', '-'),\n      [`${colName}Span`]: 3,\n      [`${colName}Align`]: 'Center'\n    })\n    \n    COLS.forEach(col => Object.assign(companiesHeader, {\n      [`${day}_${col}`]: col.toUpperCase(),\n      [`${day}_${col}Align`]: 'Center'\n    }))\n    \n    Object.assign(commentRow, {\n      [`${colName}Span`]: 3\n    })\n  })\n  \n  const comments = Array.from({ length: 10 }).map(() => ({ ...commentRow }))\n  \n  days.forEach(day => {\n    const rowIndex = random(0, 9)\n    const row = comments[rowIndex]\n    \n    row[`${day}_in`] = loremIpsum()\n  })\n  \n  return [daysHeader, ...comments, daysHeader, { ...companiesHeader, id: 'Header' }]\n}\n","export default days => {\n  const toComment = { Pos: 'To', Spanned: 1 }\n  const fromComment = { Pos: 'From', Spanned: 1 }\n  \n  days.forEach(day => {\n    const colName = `${day}_in`\n    \n    Object.assign(toComment, {\n      [`${colName}Span`]: 3\n    })\n  \n    Object.assign(fromComment, {\n      [`${colName}Span`]: 3\n    })\n  })\n  \n  return [toComment, fromComment]\n}\n","import mergeLayouts from '../../components/TreeGridComponent/utils/merge-layouts'\nimport staticLayout from './static-layout'\nimport createColumns from './create-columns'\nimport createHead from './create-head'\nimport createFoot from './create-foot'\nimport dataService from '../../db/dataService'\nimport createLeftColumns from './create-left-columns'\n\nexport default () => {\n  const days = dataService.getDays()\n  \n  const dynamicLayout = {\n    Foot: createFoot(days),\n    Head: createHead(days),\n    LeftCols: createLeftColumns(),\n    Cols: createColumns(days)\n  }\n  \n  return mergeLayouts(staticLayout, dynamicLayout)\n}\n","export default () => {\n  return [\n    {\n      Name: 'name',\n      Spanned: 1\n    }\n  ]\n}\n","import React, { useMemo, useState } from 'react'\nimport createLayout from './create-layout'\nimport TreeGridComponent from '../../components/TreeGridComponent'\nimport dataService from '../../db/dataService'\n\nconst GRID_ID = 'Companies'\n\nconst Companies = () => {\n  const [body, setBody] = useState(dataService.getCompanies())\n  const layout = useMemo(createLayout, [])\n  \n  const onDataChanged = (newData) => {\n    setBody(newData)\n    dataService.save('Companies', newData)\n  }\n  \n  return <TreeGridComponent id={GRID_ID} layout={layout} onDataChanged={onDataChanged}\n                            body={body}/>\n}\n\nexport default Companies\n","import React, { useState } from 'react'\nimport Highcharts from 'highcharts'\nimport HighchartsReact from 'highcharts-react-official'\nimport dataService from '../../db/dataService'\n\nrequire('highcharts/modules/gantt')(Highcharts)\nrequire('highcharts/modules/draggable-points')(Highcharts)\n\nconst HighchartGant = () => {\n  var today = new Date(),\n    day = 1000 * 60 * 60 * 24;\n\n// Set to 00:00:00:000 today\n  today.setUTCHours(0);\n  today.setUTCMinutes(0);\n  today.setUTCSeconds(0);\n  today.setUTCMilliseconds(0);\n  today = today.getTime();\n  \n  let prevEvent = null\n  const start = dataService.getStartTime()\n  const collectEvents = (acc, item) => {\n    if (item.Items) {\n      item.Items.reduce((ac, item) => collectEvents(ac, item), acc)\n    } else {\n      item.end = (item.start || start) + (item.hours * 60 * 60 * 1000)\n      item.start = prevEvent ? prevEvent.end : start\n      item.y = 0\n      prevEvent = item\n      acc.push(item)\n    }\n    \n    return acc\n  }\n  \n  const events = dataService.getPhases().reduce((acc, item) => collectEvents(acc, item), [])\n  console.log(events)\n  \n  const [options] = useState({\n    title: {\n      text: 'Intraday jobs Scheduling'\n    },\n    xAxis: {\n      currentDateIndicator: true\n    },\n    \n    yAxis: {\n      categories: ['Main', 'Aux']\n    },\n    \n    plotOptions: {\n      series: {\n        dragDrop: {\n          draggableX: true,\n          dragMinY: 0,\n          dragMaxY: 2,\n          dragPrecisionX: 1000 * 60\n        },\n        dataLabels: {\n          enabled: true,\n          format: '{point.name}'\n        },\n        allowPointSelect: true,\n        point: {\n          events: {\n            drag(e) {\n              console.log(e)\n            }\n          }\n        }\n      }\n    },\n    \n    series: [{\n      name: 'Init M1, Import FIRT market data',\n      data: events\n    }]\n  })\n  \n  return (\n    <HighchartsReact\n      containerProps={{ style: { height: '100%' } }}\n      highcharts={Highcharts}\n      constructorType='ganttChart'\n      options={options}\n    />\n  )\n}\n\nexport default HighchartGant\n","export default {\n  Cfg: {\n    AutoUpdate: 1,\n    MainCol: 'name',\n    Size: 'Small',\n    GanttStyle: 'Standard'\n  },\n  Def: {\n    Well: {\n      GANTTGanttClass: 'Blue',\n      Calculated: 1,\n      startFormula: 'ganttstart()',\n      endFormula: 'ganttend()'\n    },\n    Phase: {\n      GANTTGanttClass: 'Aqua',\n      Calculated: 1,\n      startFormula: 'ganttstart()',\n      endFormula: 'ganttend()'\n    },\n    R: {\n      DefEmpty: 'R',\n      DefParent: 'Sum'\n    }\n  },\n  Zoom: [\n    {\n      Name: \"months\",\n      GanttUnits: \"d\",\n      GanttWidth: \"50\", // 1 day equal 50px\n      GanttDragUnits: 'h',\n      GanttChartRound: \"d\",\n      GanttHeader1: \"M#MMMM yyyy\"\n    },\n    {\n      Name: \"days\",\n      GanttUnits: \"h\",\n      GanttWidth: \"8\", // 1 hour equal 8px\n      GanttDragUnits: 'm',\n      GanttChartRound: \"d\",\n      GanttHeader1: \"d#dddd dddddd MMMM yyyy\",\n      GanttHeader2: \"h6#HH\"\n    },\n    {\n      Name: \"hours\",\n      GanttUnits: \"h\",\n      GanttWidth: \"25\", // 1 hour equal 25px\n      GanttDragUnits: 'm',\n      GanttChartRound: \"h\",\n      GanttHeader1: \"d#dddd dddddd MMMM yyyy\",\n      GanttHeader2: \"h#HH\"\n    },\n    {\n      Name: \"minutes\",\n      GanttUnits: \"m\",\n      GanttWidth: \"2\", // 1 minute equal 2px\n      GanttDragUnits: 's',\n      GanttChartRound: \"h\",\n      GanttHeader1: \"d#dddd dddddd MMMM yyyy\",\n      GanttHeader2: \"h#HH\",\n      GanttHeader3: \"m15#mm\"\n    }\n  ],\n  Toolbar: {\n    Cells05: \"Zoom\",\n    ZoomType: \"SelectGanttZoom\",\n    ZoomWidth: \"90\"\n  }\n}\n","import dataService from '../../db/dataService'\n\nconst CLASSES = ['Aqua', 'Blue', 'Fuchsia', 'Gray', 'Green', 'Lime', 'Maroon', 'Navy', 'Olive', 'Orange', 'Purple', 'Red', 'Silver', 'Teal', 'White', 'Yellow']\n\nconst WELL_LEVEL = 0\nconst PHASE_LEVEL = 1\nconst EVENT_LEVEL = 2\n\nconst create = (deepArr, settings = {}) => {\n  let prevEvent = null\n  const collector = (item, level = 0) => {\n    const newItem = {\n      id: item.id,\n      name: item.name,\n      Class: CLASSES[level],\n      ...settings\n    }\n    \n    if (item.Items) {\n      newItem.Def = level ? 'Phase' : 'Well'\n      newItem.Items = item.Items.map(item => collector(item, ++level))\n    } else {\n      newItem.start = item.start\n      newItem.end = item.end\n      if (prevEvent) {\n        prevEvent.descendants = newItem.id\n      }\n      newItem.ancestors = prevEvent?.id\n      prevEvent = newItem\n    }\n    \n    return newItem\n  }\n  \n  \n  return deepArr.map(item => collector(item))\n}\n\nexport default () => {\n  return create(dataService.getPhases())\n}\n","import merge from 'lodash/merge'\r\nimport set from 'lodash/set'\r\nimport deepClone from '../../helpers/deep-clone'\r\n\r\nconst convertValue = value => {\r\n  if (value === '') return value\r\n  \r\n  if (value === '0') return 0\r\n  \r\n  return +value || value\r\n}\r\n\r\nclass DataListManager {\r\n  // symbol vars for ignoring JSON.stringify\r\n  static parent = Symbol('parent')\r\n  \r\n  static next = Symbol('next')\r\n  \r\n  static prev = Symbol('prev')\r\n  \r\n  static indexWithinParent = Symbol('indexWithinParent')\r\n  \r\n  #list\r\n  \r\n  #data\r\n  \r\n  nestedKey = ''\r\n  \r\n  constructor(data, nestedKey) {\r\n    const dataClone = deepClone(data)\r\n    this.nestedKey = nestedKey\r\n    \r\n    // TODO: fix flatting for more than one well. Now it works just for two levels\r\n    // nextParent is defined wrong.\r\n    function flatArrById(arr, list, parent = null, nextParent = null) {\r\n      let i = 0\r\n      while (i < arr.length) {\r\n        const item = arr[i++]\r\n        const hasChildren = nestedKey && item[nestedKey] && item[nestedKey].length > 0\r\n        \r\n        if (hasChildren) {\r\n          // eslint-disable-next-line prefer-destructuring\r\n          item[DataListManager.next] = item[nestedKey][0] // get first child\r\n        } else {\r\n          item[DataListManager.next] = arr[i] ? arr[i] : nextParent // get sibling item or next parent\r\n        }\r\n        \r\n        item[DataListManager.parent] = parent\r\n        item[DataListManager.prev] = arr[i - 2] ? arr[i - 2] : parent\r\n        item[DataListManager.indexWithinParent] = i - 1\r\n        list.set(item.id, item)\r\n        \r\n        if (hasChildren) {\r\n          flatArrById(item[nestedKey], list, item, arr[i])\r\n        }\r\n      }\r\n      \r\n      return list\r\n    }\r\n    \r\n    this.#data = dataClone\r\n    this.#list = flatArrById(dataClone, new Map())\r\n  }\r\n  \r\n  get data() {\r\n    return deepClone(this.#data)\r\n  }\r\n  \r\n  /**\r\n   * Get future index for inserting item. choose between nextIndex or prevIndex\r\n   * @param nextId - uid\r\n   * @param prevId - uid\r\n   * @returns {number}\r\n   * @private\r\n   */\r\n  _getFutureIndex(nextId, prevId) {\r\n    const next = this.getItem(nextId)\r\n    const prev = this.getItem(prevId)\r\n    \r\n    if (next) {\r\n      return next[DataListManager.indexWithinParent]\r\n    }\r\n    \r\n    if (prev) {\r\n      return prev[DataListManager.indexWithinParent] + 1\r\n    }\r\n    \r\n    return 0\r\n  }\r\n  \r\n  /**\r\n   * Returns parent's array for child item\r\n   * @param parent\r\n   * @returns {Array}\r\n   * @private\r\n   */\r\n  _getParentArr(parent) {\r\n    if (parent) {\r\n      parent[this.nestedKey] = parent[this.nestedKey] || []\r\n      return parent[this.nestedKey]\r\n    }\r\n    \r\n    return this.#data\r\n  }\r\n  \r\n  /**\r\n   * Add child to array and update their index\r\n   * @param parent\r\n   * @param index\r\n   * @param item\r\n   * @private\r\n   */\r\n  _setChildToParent(parent, index, item) {\r\n    const arr = this._getParentArr(parent)\r\n    \r\n    arr.splice(index, 0, item)\r\n    this._updateIndexWithinParent(arr)\r\n  }\r\n  \r\n  _updateIndexWithinParent(arr) {\r\n    let i = 0\r\n    while (i < arr.length) {\r\n      const item = this.#list.get(arr[i++].id)\r\n      item[DataListManager.indexWithinParent] = i - 1\r\n    }\r\n  }\r\n  \r\n  getItem(id) {\r\n    return this.#list.get(id)\r\n  }\r\n  \r\n  hasItem(id) {\r\n    return this.#list.has(id)\r\n  }\r\n  \r\n  /**\r\n   * Remove item from parent or from parent & list\r\n   * @param id\r\n   * @param isTotally{Boolean}\r\n   */\r\n  removeItem(id, isTotally = true) {\r\n    if (!this.hasItem(id)) {\r\n      return\r\n    }\r\n    \r\n    const item = this.getItem(id)\r\n    const parent = item[DataListManager.parent]\r\n    const index = item[DataListManager.indexWithinParent]\r\n    \r\n    // remove item from list\r\n    if (isTotally) this.#list.delete(id)\r\n    \r\n    const arr = this._getParentArr(parent)\r\n    \r\n    arr.splice(index, 1)\r\n    this._updateIndexWithinParent(arr)\r\n  }\r\n  \r\n  addItem(id, parentId, nextId, prevId, item) {\r\n    if (this.hasItem(id)) {\r\n      this.moveItem(id, parentId, nextId, prevId)\r\n      return\r\n    }\r\n    \r\n    const parent = this.getItem(parentId)\r\n    const index = this._getFutureIndex(nextId, prevId)\r\n    const convertedItem = DataListManager.convertItemKeys(item)\r\n    // update list\r\n    this.#list.set(id, convertedItem)\r\n    \r\n    // set parent\r\n    convertedItem[DataListManager.parent] = parent\r\n    \r\n    this._setChildToParent(parent, index, convertedItem)\r\n  }\r\n  \r\n  moveItem(id, parentId, nextId, prevId) {\r\n    const item = this.getItem(id)\r\n    const parent = this.getItem(parentId)\r\n    const index = this._getFutureIndex(nextId, prevId)\r\n    \r\n    // remove item from old parent\r\n    this.removeItem(id, false)\r\n    \r\n    // change parent\r\n    item[DataListManager.parent] = parent\r\n    \r\n    this._setChildToParent(parent, index, item)\r\n  }\r\n  \r\n  updateItem(id, data) {\r\n    if (!this.hasItem(id)) {\r\n      return\r\n    }\r\n    \r\n    const item = this.getItem(id)\r\n    const convertedData = DataListManager.convertItemKeys(data)\r\n    merge(item, convertedData)\r\n  }\r\n  \r\n  static convertItemKeys(item) {\r\n    // TODO: change after model structure concern\r\n    return Object.entries(item).reduce((acc, [key, value]) => {\r\n      if (/^_|^f_|^[A-Z]_|Click|Error/.test(key) && !/Span$/.test(key)) return acc // ignore temp keys\r\n      \r\n      value = convertValue(value) // TODO: replace to TReeGrid config. convert to number.\r\n      \r\n      set(acc, key, value)\r\n      return acc\r\n    }, {})\r\n  }\r\n}\r\n\r\nexport { DataListManager, DataListManager as default }\r\n","import React, { useEffect } from 'react'\nimport TreeGridComponent from '../../components/TreeGridComponent'\nimport createLayout from './create-layout'\nimport createBody from './create-body'\nimport dataService from '../../db/dataService'\nimport DataListManager from './DataListManager'\nimport last from 'lodash/last'\n\nconst GRID_ID = 'GANTT'\n\nconst { TGAddEvent } = window\n\nconst TreeGridGant = () => {\n  const layout = createLayout()\n  const body = createBody()\n  let dialog = null\n  let inputEl = null\n  \n  useEffect(() => {\n    TGAddEvent('OnDragGanttRun', GRID_ID, (grid, row, col, index, start, newData, oldData, change, dir, XY, keyPrefix, X, Y) => {\n      const date = new Date(newData).toString().substr(0, 21)\n      if (dialog) {\n        inputEl = dialog.Tag.getElementsByTagName(\"input\")[0]\n        inputEl.value = date\n        return\n      }\n      \n      dialog = window.ShowDialog(\n        {\n          Body: `<div style=\"display: flex; align-items: center;\">\n            <input type=\"text\" style=\"width: 140px\" value=\"${date}\">\n            <button class=\"TSDateRight date\" style=\"background-color: transparent;border: 0;width: 20px;height: 20px;padding: 0;cursor: pointer;\"></button>\n            <button class=\"close\" style=\"background-color: transparent;border: 0;width: 20px;height: 20px;padding: 0;cursor: pointer;\">x</button>\n          </div>`\n        },\n        {\n          X, Y: Y + 12\n        }\n      )\n      \n      const buttonEl = dialog.Tag.getElementsByClassName(\"date\")[0]\n      const closeButtonEl = dialog.Tag.getElementsByClassName(\"close\")[0]\n      \n      closeButtonEl.addEventListener(\"click\", () => {\n        dialog.Close();\n        dialog = null\n      })\n      \n      buttonEl.addEventListener(\"click\", () => {\n        window.ShowCalendar(\n          {\n            Date: newData,\n            HeadClose: 1,\n            TimeFormat: 'HH:mm',\n            OnSave(d) {\n              inputEl.value = new Date(d).toString().substr(0, 21)\n            }\n          },\n          {\n            X, Y\n          }\n        )\n      })\n    })\n    \n    TGAddEvent('OnEndDragGanttRun', GRID_ID, (grid, row, col, index, start, newData) => {\n      // dialog.Close()\n      // dialog = null\n    })\n  }, [])\n  \n  const onDataChanged = (newData) => {\n    const dataManager = new DataListManager(dataService.data.PhasesAux, 'Items')\n    \n    newData.forEach(row => {\n      let { events, CanEdit } = row\n      \n      if (!CanEdit) return\n      \n      if (typeof events === 'string') {\n        events = Function(`return ${events}`)()\n      }\n      \n      events.forEach(({ Id, Start, Duration, Text }) => {\n        dataManager.updateItem(Id, {\n          start: +new Date(Start),\n          hours: Duration,\n          name: Text\n        })\n      })\n    })\n    \n    dataService.save('PhasesAux', dataManager.data)\n  }\n  \n  return <TreeGridComponent id={GRID_ID} ganttRunKey={'events'} layout={layout} body={body}\n                            onDataChanged={onDataChanged}/>\n}\n\nexport default TreeGridGant\n","import createLeftCols from './create-left-cols'\nimport createCols from './create-cols'\nimport mergeLayouts from '../../components/TreeGridComponent/utils/merge-layouts'\nimport staticLayout from './static-layout'\nimport createSolid from './create-solid'\nimport dataService from '../../db/dataService'\n\nexport default () => {\n  const dynamicLayout = {\n    LeftCols: createLeftCols(),\n    Cols: createCols(dataService.getStartTime()),\n    Solid: createSolid(dataService.getStartTime())\n  }\n  \n  return mergeLayouts(staticLayout, dynamicLayout)\n}\n","export default (OperationStartDate) => {\r\n  const topBar = {\r\n    id: 'topBar',\r\n    Space: -1,\r\n    Cells: 'OperationStartDate',\r\n    \r\n    // OperationStartDate cell settings\r\n    OperationStartDate,\r\n    OperationStartDateLabel: 'Start operation: ',\r\n    OperationStartDateWidth: 120,\r\n    OperationStartDateFormat: 'yyyy-M-d H:mm',\r\n    OperationStartDateType: 'Date',\r\n    OperationStartDateRecalc: 256,\r\n    OperationStartDateOnChange: 'Grid.Component.props.handleOperationStartDateChange(Grid,Value)'\r\n  }\r\n  \r\n  return [topBar]\r\n}\r\n","export default () => {\n  return [\n    {\n      Name: 'id'\n    },\n    {\n      Name: 'name'\n    },\n    {\n      Name: 'start',\n      Type: 'Date'\n    },\n    {\n      Name: 'end',\n      Type: 'Date'\n    },\n    {\n      Name: 'descendants',\n      Range: 1\n    },\n    {\n      Name: 'ancestors',\n      Range: 1\n    }\n  ]\n}\n","export default (start) => {\n  return [\n    {\n      Name: 'GANTT',\n      Type: 'Gantt',\n      GanttZoom: 'days',\n      GanttRunSave: 2,\n      GanttDataUnits: 'h',\n      GanttStart: \"start\",\n      GanttEnd: \"end\",\n      GanttRunAdjust: 'Shrink',\n      GanttHtml: \"*name*\",\n      GanttTip: \"*name*\",\n      // GanttDescendants: \"descendants\",\n      GanttAncestors: \"ancestors\",\n      GanttTask: \"All,Box\",\n      \n      GanttMarkIncorrectDependencies: \"2\",\n      GanttMarkDisabledDependencies: \"2\",\n      GanttCorrectDependencies: \"0\",\n      GanttDragDependenciesBetween: \"2\",\n      GanttAssignDependencies: \"1\"\n    }\n  ]\n}\n","import React, { Component } from 'react';\r\nimport './App.css'\r\nimport NavBar from './components/NavBar'\r\n\r\nimport TimeTracker from './views/TimeTracker'\r\nimport Companies from './views/Companies'\r\nimport HighchartsGant from './views/HighchartGant'\r\nimport TreeGridGantt from './views/TreeGridGantt'\r\nimport TreeGridGanttV2 from './views/TreeGridGanttV2'\r\nimport { HashRouter, Route, Switch } from 'react-router-dom'\r\n\r\n\r\nclass Sample extends Component {\r\n  render() {\r\n    return (\r\n      <HashRouter>\r\n        <NavBar/>\r\n        <div className=\"views-container\">\r\n          <Switch>\r\n            <Route path=\"/\" exact>\r\n              <TimeTracker/>\r\n            </Route>\r\n            \r\n            <Route path=\"/companies\">\r\n              <Companies/>\r\n            </Route>\r\n            \r\n            <Route path=\"/highcharts-gant\">\r\n              <HighchartsGant/>\r\n            </Route>\r\n            \r\n            <Route path=\"/tree-grid-gant\">\r\n              <TreeGridGantt/>\r\n            </Route>\r\n            \r\n            <Route path=\"/tree-grid-gant-v2\">\r\n              <TreeGridGanttV2/>\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </HashRouter>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Sample\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nconst root = document.getElementById('root')\r\nif (root) {\r\n  ReactDOM.render(\r\n    <React.StrictMode>\r\n      <App/>\r\n    </React.StrictMode>,\r\n    root\r\n  );\r\n}\r\n","export default {\n  Cfg: {\n    FocusRect: 1,\n    SelectingCells: 2,\n    SelectingFocus: 1,\n  \n    CopyCols: 0,\n    PasteFocused: 4,\n    \n    ShowDeleted: 0,\n    NoVScroll: 0\n  },\n  Actions: {\n    OnCtrlDragRow: 'DragSelected',\n    OnDragRow: 'FocusCells',\n    OnDel: '!StartEditEmpty' // prevent delete rows on del button pressing\n  },\n  Toolbar: {\n    Cells60Cfg: 'Columns,Help',\n    Cells70Styles: 'Sizes'\n  },\n  Panel: {\n    PanelCopyMenu:\n        'CopyRowBelow,CopyRowsBelow@F,CopyTree,CopyRowsTreeBelow@F,CopySelected@S,CopySelectedTree@S,CopySelectedChildEnd,CopySelectedTreeChildEnd,-,AddRowBelow,AddRowsBelow@2,CopyEmptyBelow,CopyRowsEmptyBelow@2,CopySelectedEmpty,-,AddChildEnd,CopySelectedEmptyChildEnd'\n  },\n  Lang: {\n    Format: {\n      GroupSeparator: ' ',\n      GMT: 0\n    }\n  }\n}\n"],"sourceRoot":""}