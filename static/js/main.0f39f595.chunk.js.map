{"version":3,"sources":["components/TreeGridComponent/index.js","components/TreeGridComponent/utils/convert-key.js","components/TreeGridComponent/utils/center-header.js","components/TreeGridComponent/TreeGridComponent.js","components/TreeGridComponent/utils/convert-object-to-flat-keys.js","components/TreeGridComponent/utils/global-helpers.js","components/TreeGridComponent/utils/merge-layouts.js","helpers/deep-clone.js","components/TreeGridComponent lazy /^/.*$/ groupOptions: {} namespace object","components/NavBar.js","db/dataService.js","helpers/perfomance.js","views/Handsontable.js","helpers/flat-data.js","views/SpreadJS.js","views/ZingGrid.js","views/WijmoGrid.js","views/TreeDef.js","views/TreeGrid.js","views/TimeTracker/static-layout.js","views/TimeTracker/TimeTrackerGrid/utils/get-prev-event.js","helpers/pick-number.js","views/TimeTracker/TimeTrackerGrid/TimeTrackerGrid.js","views/TimeTracker/TimeTrackerGrid/utils/get-next-event.js","views/TimeTracker/create-left-columns.js","views/TimeTracker/create-columns.js","views/TimeTracker/create-head.js","views/TimeTracker/create-foot.js","views/TimeTracker/create-solid.js","views/TimeTracker/create-rows-def.js","views/TimeTracker/migrate-data.js","views/TimeTracker/TimeTracker.js","App.js","index.js"],"names":["key","replaceFrom","replaceTo","replace","centerHeader","config","window","TreeGrid","Grids","Test","grid","target","test","console","log","id","OnCustomAjax","G","IO","data","func","Url","then","res","default","OnDataChanged","JSON","parse","OnGenerateId","uuid","defaultProps","onDataChanged","noop","nestedKey","body","Def","DefEmpty","DefParent","TreeGridComponent","$el","createRef","prepareBody","props","Worker","subscribeGridEvents","Changes","addEventListener","onDataManagerMessage","removeEventListener","postMessage","changes","e","Array","isArray","event","error","debug","this","initGrid","terminate","Dispose","Data","merge","layout","Debug","Layout","Upload","Format","Type","Tag","Body","current","Component","Helpers","helpers","arr","deepClone","map","traverse","item","length","Items","convertObjectToFlatKeys","ref","style","height","keyAcc","acc","hasOwnProperty","path","convertKey","isPlainObject","isEmpty","v","isNotEmpty","isNumber","isNaN","args","mergeWith","Cfg","FocusRect","SelectingCells","SelectingFocus","Actions","OnDragRow","OnDel","Lang","GroupSeparator","objValue","srcValue","concat","obj","stringify","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","Error","code","ids","all","slice","keys","Object","module","exports","NavBar","className","to","exact","Phases","Costs","fn","ts","performance","now","err","toFixed","SpreadSheetsCon","initTable","hot","Handsontable","tableRef","dataService","getPhases","nestedRows","colHeaders","rowHeaders","autoRowSize","stretchH","width","persistentState","nestedHeaders","label","colspan","columns","type","numericFormat","pattern","allowEmpty","correctFormat","contextMenu","bindRowsWithHeaders","manualRowMove","updateSettings","cells","row","col","prop","classes","readOnly","isTotal","instance","getDataAtRowProp","visualRow","push","start","overriddenStart","lockTimestamp","Date","join","state","time","setState","lis","document","querySelector","remove","color","overflow","flex","fontSize","createFlatter","globalIndex","flatData","newData","groups","forEach","__children","index","count","GC","columnToLetter","column","temp","letter","String","fromCharCode","SpreadJS","initSpread","spread","Spread","Sheets","Workbook","sheetCount","options","tabStripVisible","tabNavigationVisible","tabEditable","newTabVisible","sheet","getActiveSheet","spreadNS","suspendPaint","isProtected","autoGenerateColumns","setDataSource","setRowCount","SheetArea","colHeader","addSpan","setValue","bindColumn","name","displayName","formatter","size","setColumnCount","Style","backColor","cellPadding","totalRow","getRowCount","addRows","viewport","setStyle","columnsCount","getColumnCount","groupsIndex","i","getCell","borderLeft","LineBorder","LineStyle","thin","borderRight","borderTop","borderBottom","columnLetter","startRow","endRow","sumFormula","setFormula","CellRange","locked","rowOutlines","group","expand","direction","Outlines","OutlineDirection","backward","autoFitColumn","resumePaint","setTimeout","assignDataToNestedGrid","cellRef","recordRef","setData","ZingGridView","ZingGrid","tabelEl","header","editor","loading","loadByScroll","getRowLevel","wjGrid","isGroupRow","level","CostTableView","gridRef","costs","getCosts","filter","initialWorkerGrid","workerGrid","formatItem","addHandler","panel","rowData","rows","colData","binding","hasChildren","itemFormatter","r","c","cell","cellType","ColumnHeader","_ts","onCellEditEnding","updateGridStyles","cssClass","isReadOnly","onFilter","value","toLowerCase","onMenuItemClicked","selectedValue","cmd","addRow","rowIndex","selection","dataItem","days","populatedDays","refresh","removeRow","parentRow","rowLevel","getParentNode","parentRowData","childIndex","findIndex","child","splice","collapseAll","collapseGroupsToLevel","expandAll","maxGroupLevel","onDraggedRow","exportExcel","book","FlexGridXlsxConverter","save","includeColumnHeaders","includeRowHeaders","sheets","saveAsync","rowAdded","deletedRow","deletingRow","filterString","keysToSearch","collectResults","cost","some","includes","costCopy","assign","children","reduce","search","allowResizing","placeholder","marginBottom","onChange","itemsSource","selectionMode","childItemsPath","frozenColumns","allowSorting","allowDragging","allowAddNew","initialized","cellEditEnding","draggedRow","minWidth","dataMap","format","contextMenuOf","selectedValuePath","dropDownCssClass","itemClicked","CfgId","ShowDeleted","SuppressCfg","AutoSort","DateStrings","ReloadChanged","MainCol","NoVScroll","Sorting","Paging","PageLength","AutoUpdate","StandardFilter","SaveExpanded","PersistentCfg","Filtered","DebugCalc","OnRightClickCell","R","Expanded","Cost","CostGroup","CanEdit","Calculated","nameCanEdit","codeCanEdit","populateDailyFormula","DefCols","C","CanFilter","LeftCols","Name","RelWidth","MinWidth","CaseSensitive","Width","Enum","OnChange","Cols","Formula","Header","unit","rate","currency","populateDaily","prior","afterOffhire","NoEscape","Head","Kind","nameFilter","codeFilter","Foot","CanDelete","getBody","localStorage","getItem","flat","uid","entries","day","setItem","Grid","isAcc","tagRef","_body","_worker","populate","Row","Value","SetValue","saveData","updateData","newRowData","showCustomMenu","self","ShowMenu","OnClick","ReloadBody","Deleted","DeleteRow","Selected","SelectRow","CopyRow","AddRow","OnAfterValueChanged","OnSave","GetXmlData","RoundNumbers","RoundNumbersDigits","Size","Undo","RowIndex","SearchLap","FilterLap","Validate","Sync","SyncId","ExportType","Toolbar","Cells30Manipulate","Root","AcceptDef","CDef","Panel","Copy","Delete","Select","Move","getPrevEvent","_row","GetPrev","pickNumber","find","n","TGAddEvent","TGDelEvent","validator","actualHours","nextEvent","getNextEvent","GetNext","nextNotEmpty","currentEmpty","_tftHours","TimeTrackerGrid","createLayout","onValidate","getEventStart","get","eventRow","OperationStartDate","getEventEnd","duration","getEventDuration","hours","isUndefined","getPlannedDepth","plannedDepth","getActualDepth","actualDepth","hasActual","getBehindHours","delta","isAux","DerrickType","dynamicLayout","ExportName","ClassFormula","CanEmpty","Visible","CanHide","CanPrint","CanExport","mainHeader","Pos","afeHours","targetHours","dsvHours","nptHours","wowHours","_unPtHours","_iltHours","_plannedDepth","_actualDepth","_start","_end","behindHours","contractor","comment","experienceLinks","upHeader","Spanned","PosSpan","codeSpan","afeHoursSpan","plannedDepthSpan","startSpan","contractorSpan","createHead","Class","Color","dsvHoursFormula","actualHoursFormula","nptHoursFormula","wowHoursFormula","tftHoursFormula","afeHoursFormula","targetHoursFormula","iltHoursFormula","unPtHoursFormula","_plannedDepthFormula","_actualDepthFormula","_startFormula","_endFormula","behindHoursFormula","Solid","Cells","OperationStartDateRecalc","Space","OperationStartDateLabel","OperationStartDateWidth","OperationStartDateFormat","OperationStartDateType","OperationStartDateOnChange","DerrickTypeType","DerrickTypeLabel","DerrickTypeOnChange","createSolid","commonGroupDef","_iltHoursFormula","_unPtHoursFormula","Well","Phase","Event","CalcOrder","createRowsDef","mergeLayouts","staticLayout","ignoreKeys","splitDerrickTypes","main","aux","auxName","auxCode","mainChildren","auxChildren","newKey","camelCase","TimeTracker","model","attrs","set","load","toJSON","handleOperationStartDateChange","auxGrid","TimeTrackerAux","GetRowById","handleDerrickTypeChange","phases","Wells","WellsAux","prepareState","getStartOperationDate","wells","defs","reCalc","addRowDefinitions","Recalc","startDate","Sample","WijmoGrid","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0f39f595.chunk.js","sourcesContent":["export { default } from './TreeGridComponent'\r\n","// days.2020-02-01/1 => day_2020-02-01__1\r\n// populatedDays.2020-02-01/1 => populatedDay_2020-02-01__1\r\nexport default (key, replaceFrom = '', replaceTo = '') => key\r\n    .replace(replaceFrom, replaceTo)\r\n    .replace(/\\//g, '__')\r\n    .replace(/\\./g, '_')\r\n","export default function centerHeader(key, config) {\r\n    config[`${key}Align`] = 'Center'\r\n}\r\n","/**\r\n * TreeGrid component\r\n * http://www.treegrid.com/TreeGrid5_6/Doc/TreeGridFAQ.htm\r\n *\r\n */\r\nimport React, { Component, createRef } from 'react';\r\nimport noop from 'lodash/noop'\r\nimport PropTypes from 'prop-types'\r\nimport deepClone from '../../helpers/deep-clone'\r\nimport { v4 as uuid } from 'uuid/wrapper.mjs'\r\nimport convertObjectToFlatKeys from './utils/convert-object-to-flat-keys'\r\nimport merge from 'lodash/merge'\r\nimport helpers from './utils/global-helpers'\r\n\r\nconst { TreeGrid, Grids } = window\r\n\r\nGrids.Test = (grid, target, test) => {\r\n    console.log(grid.id)\r\n    return true\r\n}\r\n\r\nGrids.OnCustomAjax = (G, IO, data, func) => {\r\n    if (IO.Url) {\r\n        import(`./${IO.Url}`).then(({ default: res }) => func(0, res))\r\n    } else {\r\n        G.OnDataChanged(G, JSON.parse(data), func)\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\n// add custom id generator\r\nGrids.OnGenerateId = () => uuid()\r\n\r\nconst propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n\r\n    // events\r\n    onDataChanged: PropTypes.func,\r\n\r\n    // data\r\n    body: PropTypes.array,\r\n    layout: PropTypes.object,\r\n    nestedKey: PropTypes.string,\r\n\r\n    // rows defaults http://www.treegrid.com/Doc/RowDefaults.htm\r\n    Def: PropTypes.string,\r\n    DefEmpty: PropTypes.string,\r\n    DefParent: PropTypes.string\r\n}\r\n\r\nconst defaultProps = {\r\n    onDataChanged: noop,\r\n    nestedKey: '__children',\r\n    body: [],\r\n    Def: 'R',\r\n    DefEmpty: 'R',\r\n    DefParent: 'R'\r\n}\r\n\r\nclass TreeGridComponent extends Component {\r\n    static propTypes = propTypes\r\n    static defaultProps = defaultProps\r\n\r\n    $el = createRef()\r\n    grid = null\r\n    #gridBody = this.prepareBody(this.props.body)\r\n    #dataManager = new Worker(\"/sheets.github.io/ManageData.worker.js\")\r\n\r\n    componentDidMount() {\r\n        this.initGrid()\r\n        this.subscribeGridEvents()\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.#dataManager.terminate()\r\n\r\n        if (!this.grid) return\r\n        this.grid.Dispose()\r\n    }\r\n\r\n    initGrid() {\r\n        const Data = merge({}, this.props.layout)\r\n\r\n        this.grid = TreeGrid(\r\n            {\r\n                Debug: 'Problem',\r\n                id: this.props.id,\r\n                Layout: {\r\n                    Data\r\n                },\r\n                Upload: {\r\n                    Format: 'JSON',\r\n                    Type: ['Changes'],\r\n                    Tag: 'grid'\r\n                },\r\n                Data: {\r\n                    Data: {\r\n                        Body: [this.#gridBody]\r\n                    }\r\n                }\r\n            },\r\n\r\n            // root element\r\n            this.$el.current,\r\n\r\n            // inject to Grid\r\n            {\r\n                Component: this,\r\n                Helpers: helpers\r\n            }\r\n        );\r\n    }\r\n\r\n    subscribeGridEvents = () => {\r\n        this.grid.OnDataChanged = (G, { Changes }, func) => {\r\n            const { body, nestedKey } = this.props\r\n\r\n            const onDataManagerMessage = (...args) => {\r\n                this.onDataManagerMessage(...args)\r\n\r\n                func(0, { IO: {}, Changes: [] })\r\n\r\n                this.#dataManager.removeEventListener('message', onDataManagerMessage)\r\n            }\r\n\r\n            this.#dataManager.addEventListener('message', onDataManagerMessage)\r\n            this.#dataManager.postMessage(['update', { changes: Changes, data: body, nestedKey }])\r\n        }\r\n    }\r\n\r\n    onDataManagerMessage = (e) => {\r\n        if (!Array.isArray(e.data)) return\r\n\r\n        const [event, data] = e.data\r\n\r\n        switch (event) {\r\n            case 'updated':\r\n                this.props.onDataChanged(data.data)\r\n                break\r\n            case 'error':\r\n                console.error('Worker error: ', data.data)\r\n                break\r\n            default:\r\n                console.debug('Worker: event not found!')\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Data  format http://www.treegrid.com/Doc/DataFormats.htm#JSONFormat\r\n     * @param arr\r\n     * @returns {{}[]}\r\n     */\r\n    prepareBody(arr) {\r\n        const { nestedKey, Def, DefParent, DefEmpty } = this.props\r\n\r\n        function traverse(item) {\r\n            if (item[nestedKey] && item[nestedKey].length) {\r\n                item.Def = item.Def || DefParent\r\n                item.Items = item[nestedKey].map(traverse)\r\n                if (nestedKey !== 'Items') delete item[nestedKey]\r\n            } else {\r\n                item.Def = item.Def || Def\r\n            }\r\n\r\n            item.DefParent = item.DefParent || DefParent\r\n            item.DefEmpty = item.DefEmpty || DefEmpty\r\n\r\n            return convertObjectToFlatKeys(item)\r\n        }\r\n\r\n        return deepClone(arr).map(traverse)\r\n    }\r\n\r\n    render() {\r\n        return <div ref={this.$el} style={{ height: '100%' }}/>\r\n    }\r\n}\r\n\r\nexport default TreeGridComponent\r\n","import isPlainObject from 'lodash/isPlainObject'\r\nimport convertKey from './convert-key'\r\n\r\n/**\r\n * Convert Object to one level paths. {test: {test:1}} => test_test: 1\r\n * @param item {Object}\r\n * @param keyAcc\r\n * @param acc\r\n * @returns {{}}\r\n */\r\nexport default function convertObjectToFlatKeys(item, keyAcc = '', acc = {}) {\r\n    for (let key in item) {\r\n        if (item.hasOwnProperty(key)) {\r\n            let path = keyAcc ? `${keyAcc}_${convertKey(key)}` : convertKey(key)\r\n\r\n            if (isPlainObject(item[key])) {\r\n                convertObjectToFlatKeys(item[key], path, acc)\r\n            } else {\r\n                acc[path] = item[key]\r\n            }\r\n        }\r\n    }\r\n\r\n    return acc\r\n}\r\n","export default {\r\n    isEmpty: v => v === '',\r\n    isNotEmpty: v => v !== '',\r\n    isNumber: v => typeof v === 'number' && !isNaN(v)\r\n}\r\n","import mergeWith from 'lodash/mergeWith'\r\n\r\nexport default function (...args) {\r\n    return mergeWith(\r\n        {\r\n            Cfg: {\r\n                FocusRect: 2,\r\n                SelectingCells: 2,\r\n                SelectingFocus: 2\r\n            },\r\n            Actions: {\r\n                OnDragRow: 'FocusCells',\r\n                OnDel: '!StartEditEmpty' // prevent delete rows on del button pressing\r\n            },\r\n            Lang: {\r\n                Format: {\r\n                    GroupSeparator: ' '\r\n                }\r\n            }\r\n        },\r\n        ...args,\r\n        function (objValue, srcValue) {\r\n            if (Array.isArray(objValue)) {\r\n                return srcValue.concat(objValue)\r\n            }\r\n        }\r\n    )\r\n}\r\n","export default (obj) => JSON.parse(JSON.stringify(obj))\r\n","var map = {\n\t\"./\": [\n\t\t146\n\t],\n\t\"./Defaults\": [\n\t\t309,\n\t\t0\n\t],\n\t\"./Defaults.js\": [\n\t\t309,\n\t\t0\n\t],\n\t\"./Text\": [\n\t\t310,\n\t\t1\n\t],\n\t\"./Text.js\": [\n\t\t310,\n\t\t1\n\t],\n\t\"./TreeGridComponent\": [\n\t\t173\n\t],\n\t\"./TreeGridComponent.js\": [\n\t\t173\n\t],\n\t\"./index\": [\n\t\t146\n\t],\n\t\"./index.js\": [\n\t\t146\n\t],\n\t\"./utils/array-to-enum\": [\n\t\t311,\n\t\t2\n\t],\n\t\"./utils/array-to-enum.js\": [\n\t\t311,\n\t\t2\n\t],\n\t\"./utils/center-header\": [\n\t\t150\n\t],\n\t\"./utils/center-header.js\": [\n\t\t150\n\t],\n\t\"./utils/convert-key\": [\n\t\t149\n\t],\n\t\"./utils/convert-key.js\": [\n\t\t149\n\t],\n\t\"./utils/convert-object-to-flat-keys\": [\n\t\t182\n\t],\n\t\"./utils/convert-object-to-flat-keys.js\": [\n\t\t182\n\t],\n\t\"./utils/deconvert-key\": [\n\t\t312,\n\t\t3\n\t],\n\t\"./utils/deconvert-key.js\": [\n\t\t312,\n\t\t3\n\t],\n\t\"./utils/global-helpers\": [\n\t\t183\n\t],\n\t\"./utils/global-helpers.js\": [\n\t\t183\n\t],\n\t\"./utils/merge-layouts\": [\n\t\t184\n\t],\n\t\"./utils/merge-layouts.js\": [\n\t\t184\n\t],\n\t\"./utils/rotate-header\": [\n\t\t313,\n\t\t4\n\t],\n\t\"./utils/rotate-header.js\": [\n\t\t313,\n\t\t4\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 457;\nmodule.exports = webpackAsyncContext;","import React, { Component } from 'react';\r\nimport './NavBar.css'\r\nimport { Link, Route, Switch } from 'react-router-dom'\r\n\r\nclass NavBar extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"navigationBar\">\r\n                <h3>Navigation</h3>\r\n                <nav className=\"navigationBarList\">\r\n                    <Link to=\"/time-tracker\" className=\"navItem\">Time tracker</Link>\r\n                    <Link to=\"/\" className=\"navItem\">Handsontable</Link>\r\n                    <Link to=\"/spread-js\" className=\"navItem\">Spread JS</Link>\r\n                    <Link to=\"/zing-grid\" className=\"navItem\">Zing Grid</Link>\r\n                    <Link to=\"/wijmo-grid\" className=\"navItem\">Wijmo Grid</Link>\r\n                    <Link to=\"/tree-grid\" className=\"navItem\">Tree Grid</Link>\r\n                </nav>\r\n\r\n                <div className=\"features\">\r\n                    <Switch>\r\n                        <Route exact path=\"/\">\r\n                            <h4>Handsontable</h4>\r\n                            <p className=\"features-content\">\r\n                                Supports most of the features. Customizable, open-source, good support community, and not bad DOCs.\r\n                                Bad performance.\r\n                            </p>\r\n\r\n                            <ul className=\"features-list\">\r\n                                <li>Copy paste subtable from excel <span className=\"text-green\">+</span></li>\r\n                                <li>Nested rows <span className=\"text-green\">+</span></li>\r\n                                <li>Fixed columns rows <span className=\"text-green\">+</span></li>\r\n                                <li>Remember collapse expand state <span className=\"text-red\">-</span></li>\r\n                                <li>Styling, Read only <span className=\"text-green\">+</span></li>\r\n                                <li>Placeholders <span className=\"text-green\">+</span></li>\r\n                                <li>Tool tips <span className=\"text-green\">+</span></li>\r\n                                <li>PDF export <span className=\"text-blue\">?</span></li>\r\n                                <li>Excel export <span className=\"text-red\">-</span></li>\r\n                                <li>Filtering (eg. for user search, partial sums, pdf export) <span className=\"text-green\">+</span></li>\r\n                                <li>Rotated cells <span className=\"text-green\">+</span></li>\r\n                                <li>Spanned cells <span className=\"text-green\">+</span></li>\r\n                                <li>Validation <span className=\"text-green\">+</span></li>\r\n                                <li>Sums (light weight formulas) <span className=\"text-green\">+</span></li>\r\n                                <li>Sub table selection <span className=\"text-green\">+</span></li>\r\n                                <li>Customisable context menus <span className=\"text-green\">+</span></li>\r\n                                <li>Moving one ore several rows <span className=\"text-green\">+</span></li>\r\n                                <li>Copy cut delete operations <span className=\"text-green\">+</span></li>\r\n                            </ul>\r\n                        </Route>\r\n                        <Route path=\"/spread-js\">\r\n                            <h4>SpreadJS</h4>\r\n                            <p className=\"features-content\">\r\n                                Many features need to be created from scratch. It is Excel in WEB and it works like real excel. Formulas work very well and fast. No need to change DataLayer from Handsontable. Good performance, wide API.\r\n                            </p>\r\n\r\n                            <ul className=\"features-list\">\r\n                                <li>Copy paste subtable from excel <span className=\"text-green\">+</span></li>\r\n                                <li>Nested rows <span className=\"text-green\">+</span></li>\r\n                                <li>Fixed columns rows <span className=\"text-green\">+</span></li>\r\n                                <li>Remember collapse expand state <span className=\"text-blue\">?</span></li>\r\n                                <li>Styling, Read only <span className=\"text-green\">+</span></li>\r\n                                <li>Placeholders <span className=\"text-red\">-</span></li>\r\n                                <li>Tool tips <span className=\"text-blue\">?</span></li>\r\n                                <li>PDF export <span className=\"text-blue\">?</span></li>\r\n                                <li>Excel export <span className=\"text-green\">+</span></li>\r\n                                <li>Filtering (eg. for user search, partial sums, pdf export) <span className=\"text-green\">+</span></li>\r\n                                <li>Rotated cells <span className=\"text-blue\">?</span></li>\r\n                                <li>Spanned cells <span className=\"text-green\">+</span></li>\r\n                                <li>Validation <span className=\"text-green\">+</span></li>\r\n                                <li>Sums (light weight formulas) <span className=\"text-green\">+</span></li>\r\n                                <li>Sub table selection <span className=\"text-green\">+</span></li>\r\n                                <li>Customisable context menus <span className=\"text-green\">+</span></li>\r\n                                <li>Moving one ore several rows <span className=\"text-green\">+</span></li>\r\n                                <li>Copy cut delete operations <span className=\"text-green\">+</span></li>\r\n                            </ul>\r\n                        </Route>\r\n                        <Route path=\"/zing-grid\">\r\n                            <h4>ZingGrid</h4>\r\n\r\n                            <ul className=\"features-list\">\r\n                                <li>Copy paste subtable from excel <span className=\"text-red\">-</span></li>\r\n                                <li>Nested rows <span className=\"text-red\">-</span></li>\r\n                                <li>Fixed columns rows <span className=\"text-red\">-</span></li>\r\n                                <li>Remember collapse expand state <span className=\"text-blue\">?</span></li>\r\n                                <li>Styling, Read only <span className=\"text-green\">+</span></li>\r\n                                <li>Placeholders <span className=\"text-green\">+</span></li>\r\n                                <li>Tool tips <span className=\"text-blue\">?</span></li>\r\n                                <li>PDF export <span className=\"text-blue\">?</span></li>\r\n                                <li>Excel export <span className=\"text-green\">+</span></li>\r\n                                <li>Filtering (eg. for user search, partial sums, pdf export) <span className=\"text-green\">+</span></li>\r\n                                <li>Rotated cells <span className=\"text-blue\">?</span></li>\r\n                                <li>Spanned cells <span className=\"text-green\">+</span></li>\r\n                                <li>Validation <span className=\"text-red\">-</span></li>\r\n                                <li>Sums (light weight formulas) <span className=\"text-red\">-</span></li>\r\n                                <li>Sub table selection <span className=\"text-green\">+</span></li>\r\n                                <li>Customisable context menus <span className=\"text-green\">+</span></li>\r\n                                <li>Moving one ore several rows <span className=\"text-green\">+</span></li>\r\n                                <li>Copy cut delete operations <span className=\"text-red\">-</span></li>\r\n                            </ul>\r\n                        </Route>\r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NavBar\r\n","import data from './data.json';\r\n\r\nclass DataService {\r\n    constructor() {\r\n        this.data = data;\r\n    }\r\n\r\n    getPhases() {\r\n        return this.data.Phases\r\n    }\r\n\r\n    getCosts() {\r\n        return this.data.Costs\r\n    }\r\n}\r\n\r\nexport default new DataService()\r\n","export default function (fn) {\r\n    const ts = performance.now()\r\n    try {\r\n        fn()\r\n    } catch (err) {\r\n        console.log(err)\r\n    }\r\n    const te = performance.now()\r\n\r\n    return (te - ts).toFixed(2)\r\n}\r\n","import React, { Component, createRef, Fragment } from 'react';\r\nimport dataService from '../db/dataService'\r\nimport Handsontable from 'handsontable'\r\nimport performance from '../helpers/perfomance'\r\nimport 'handsontable/dist/handsontable.full.css';\r\nimport './handsotable.css'\r\n\r\nclass SpreadSheetsCon extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.tableRef = createRef()\r\n        this.state = {\r\n            time: 0\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const time = performance(this.initTable)\r\n        this.setState({ time })\r\n        const lis = document.querySelector('#hot-display-license-info')\r\n        if (lis) lis.remove()\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        const lis = document.querySelector('#hot-display-license-info')\r\n        if (lis) lis.remove()\r\n    }\r\n\r\n    initTable = () => {\r\n        this.hot = new Handsontable(this.tableRef.current, {\r\n            data: dataService.getPhases(),\r\n            nestedRows: true,\r\n            colHeaders: true,\r\n            rowHeaders: true,\r\n            autoRowSize: true,\r\n            stretchH: \"all\",\r\n            height: '500px',\r\n            width: '100%',\r\n            persistentState: true,\r\n            nestedHeaders: [\r\n                [\r\n                    {\r\n                        label: 'Identification',\r\n                        colspan: 2\r\n                    },\r\n                    {\r\n                        label: 'Duration [h]',\r\n                        colspan: 7\r\n                    },\r\n                    {\r\n                        label: 'End Depth [mMD]',\r\n                        colspan: 2\r\n                    },\r\n                    {\r\n                        label: 'Timing',\r\n                        colspan: 3\r\n                    },\r\n                    {\r\n                        label: 'Annotation',\r\n                        colspan: 2\r\n                    }\r\n                ],\r\n                [\r\n                    'Code',\r\n                    'Name',\r\n                    'AFE',\r\n                    'Target',\r\n                    'DSV',\r\n                    'Actual',\r\n                    'NPT',\r\n                    'WOW',\r\n                    'TFT',\r\n                    'Planned',\r\n                    'Actual',\r\n                    'Start',\r\n                    'End',\r\n                    'Days -ahead/+behind',\r\n                    'Contractor',\r\n                    'Comment'\r\n                ]\r\n            ],\r\n            columns: [\r\n                { data: 'code' },\r\n                { data: 'name' },\r\n                {\r\n                    data: 'afeHours',\r\n                    type: 'numeric',\r\n                    numericFormat: {\r\n                        pattern: '0,0.00'\r\n                    },\r\n                    allowEmpty: true,\r\n                    width: 80\r\n                },\r\n                {\r\n                    data: 'targetHours',\r\n                    type: 'numeric',\r\n                    numericFormat: {\r\n                        pattern: '0,0.00'\r\n                    },\r\n                    allowEmpty: true,\r\n                    width: 80\r\n                },\r\n                {\r\n                    data: 'dsvHours',\r\n                    type: 'numeric',\r\n                    numericFormat: {\r\n                        pattern: '0,0.00'\r\n                    },\r\n                    allowEmpty: true,\r\n                    width: 80\r\n                },\r\n                {\r\n                    data: 'actualHours',\r\n                    type: 'numeric',\r\n                    numericFormat: {\r\n                        pattern: '0,0.00'\r\n                    },\r\n                    allowEmpty: true,\r\n                    width: 80\r\n                },\r\n                {\r\n                    data: 'nptHours',\r\n                    type: 'numeric',\r\n                    numericFormat: {\r\n                        pattern: '0,0.00'\r\n                    },\r\n                    allowEmpty: true,\r\n                    width: 80\r\n                },\r\n                {\r\n                    data: 'wowHours',\r\n                    type: 'numeric',\r\n                    numericFormat: {\r\n                        pattern: '0,0.00'\r\n                    },\r\n                    allowEmpty: true,\r\n                    width: 80\r\n                },\r\n                {\r\n                    data: 'tftHours',\r\n                    type: 'numeric',\r\n                    numericFormat: {\r\n                        pattern: '0,0.00'\r\n                    },\r\n                    allowEmpty: true,\r\n                    width: 80\r\n                },\r\n                {\r\n                    data: 'plannedDepth',\r\n                    type: 'numeric',\r\n                    numericFormat: {\r\n                        pattern: '0,0.00'\r\n                    },\r\n                    allowEmpty: true,\r\n                    width: 80\r\n                },\r\n                {\r\n                    data: 'actualDepth',\r\n                    type: 'numeric',\r\n                    numericFormat: {\r\n                        pattern: '0,0.00'\r\n                    },\r\n                    allowEmpty: true,\r\n                    width: 80\r\n                },\r\n                {\r\n                    data: 'start',\r\n                    type: 'date',\r\n                    correctFormat: true,\r\n                    allowEmpty: true\r\n                },\r\n                {\r\n                    data: 'end',\r\n                    type: 'date',\r\n                    correctFormat: true,\r\n                    allowEmpty: true\r\n                },\r\n                {\r\n                    data: 'behindHours',\r\n                    type: 'numeric',\r\n                    allowEmpty: true,\r\n                    width: 80\r\n                },\r\n                {\r\n                    data: 'contractor',\r\n                    type: 'numeric',\r\n                    allowEmpty: true,\r\n                    width: 80\r\n                },\r\n                { data: 'comments' }\r\n\r\n            ],\r\n            contextMenu: true,\r\n            bindRowsWithHeaders: 'strict',\r\n            manualRowMove: true\r\n        })\r\n\r\n        this.hot.updateSettings({\r\n            cells(row, col, prop) {\r\n                const cellProperties = this;\r\n                const classes = [];\r\n                let readOnly = false;\r\n\r\n                const isTotal = this.instance.getDataAtRowProp(this.visualRow, 'isTotal');\r\n                const isGroup = this.instance.getDataAtRowProp(this.visualRow, 'group');\r\n\r\n                if (isGroup) {\r\n                    readOnly = true;\r\n                    // add style for group rows\r\n                    classes.push('group-cell');\r\n                } else if (isTotal) {\r\n                    readOnly = true;\r\n                    // add style for total row\r\n                    classes.push('total-cell');\r\n                } else {\r\n                    classes.push('leaf-cell');\r\n                }\r\n\r\n                if (readOnly) {\r\n                    classes.push('locked-cell');\r\n                }\r\n\r\n                // Lock date styles\r\n                if (!isTotal) {\r\n                    const start = this.instance.getDataAtRowProp(this.visualRow, 'start');\r\n                    const overriddenStart = this.instance.getDataAtRowProp(this.visualRow, 'overriddenStart');\r\n                    const lockTimestamp = +new Date();\r\n\r\n                    if (+new Date(start) < lockTimestamp || +new Date(overriddenStart) < lockTimestamp) {\r\n                        // readOnly = true;\r\n                        classes.push('parked-cell');\r\n                    }\r\n                }\r\n\r\n                cellProperties.readOnly = readOnly;\r\n                cellProperties.className = classes.join(' ')\r\n                return cellProperties;\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <h3>Handsontable render performance: <span style={{ color: 'tomato' }}>{this.state.time}ms</span></h3>\r\n\r\n                <div ref={this.tableRef}\r\n                     style={{ overflow: 'hidden', flex: '1 1 auto', fontSize: '11px' }}\r\n                />\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SpreadSheetsCon\r\n","function createFlatter() {\r\n    let globalIndex = -1\r\n\r\n    return function flatData(data, newData = [], groups = []) {\r\n        data.forEach(row => {\r\n            newData.push(row)\r\n            globalIndex++\r\n\r\n            if (row.__children) {\r\n                groups.push({\r\n                    index: globalIndex,\r\n                    count: row.__children.length\r\n                })\r\n                flatData(row.__children, newData, groups)\r\n                delete row.__children\r\n            }\r\n        })\r\n\r\n        return { data: newData, groups }\r\n    }\r\n}\r\n\r\n\r\nexport default createFlatter\r\n","import React, { Component, createRef, Fragment } from 'react';\r\nimport dataService from '../db/dataService'\r\nimport performance from '../helpers/perfomance'\r\nimport createFlatter from '../helpers/flat-data'\r\nimport '@grapecity/spread-sheets/styles/gc.spread.sheets.excel2013white.css';\r\n\r\nconst GC = window.GC\r\n\r\nfunction columnToLetter(column) {\r\n    let temp, letter = '';\r\n    while (column > 0) {\r\n        temp = (column - 1) % 26;\r\n        letter = String.fromCharCode(temp + 65) + letter;\r\n        column = (column - temp - 1) / 26;\r\n    }\r\n    return letter;\r\n}\r\n\r\nexport default class SpreadJS extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.tableRef = createRef()\r\n        this.state = {\r\n            time: 0\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        setTimeout(() => {\r\n            const time = performance(this.initSpread)\r\n            this.setState({ time })\r\n        })\r\n    }\r\n\r\n    initSpread = () => {\r\n        const spread = new GC.Spread.Sheets.Workbook(this.tableRef.current, { sheetCount: 1 });\r\n        spread.options.tabStripVisible = false\r\n        spread.options.tabNavigationVisible = false\r\n        spread.options.tabEditable = true\r\n        spread.options.newTabVisible = false\r\n        const sheet = spread.getActiveSheet()\r\n        const spreadNS = GC.Spread.Sheets;\r\n\r\n        sheet.suspendPaint()\r\n        const flatData = createFlatter()\r\n        const { data, groups } = flatData(dataService.getPhases())\r\n\r\n        sheet.options.isProtected = true\r\n        sheet.autoGenerateColumns = false\r\n        sheet.setDataSource(data)\r\n\r\n        sheet.setRowCount(2, spreadNS.SheetArea.colHeader);\r\n\r\n        sheet.addSpan(0, 0, 1, 2, spreadNS.SheetArea.colHeader);\r\n        sheet.setValue(0, 0, \"Identification\", spreadNS.SheetArea.colHeader);\r\n\r\n        sheet.addSpan(0, 2, 1, 6, spreadNS.SheetArea.colHeader);\r\n        sheet.setValue(0, 2, \"Duration\", spreadNS.SheetArea.colHeader);\r\n\r\n        sheet.addSpan(0, 8, 1, 2, spreadNS.SheetArea.colHeader);\r\n        sheet.setValue(0, 8, \"End Depth\", spreadNS.SheetArea.colHeader);\r\n\r\n        sheet.addSpan(0, 10, 1, 3, spreadNS.SheetArea.colHeader);\r\n        sheet.setValue(0, 10, \"Timing\", spreadNS.SheetArea.colHeader);\r\n\r\n        sheet.addSpan(0, 13, 1, 2, spreadNS.SheetArea.colHeader);\r\n        sheet.setValue(0, 13, \"Annotation\", spreadNS.SheetArea.colHeader);\r\n\r\n        // columns\r\n        sheet.bindColumn(0, { name: 'code', displayName: 'Code' })\r\n        sheet.bindColumn(1, { name: 'name', displayName: 'Name' })\r\n        sheet.bindColumn(2, { name: 'afeHours', displayName: 'AFE', formatter: '0.00', size: 80 })\r\n        sheet.bindColumn(3, { name: 'targetHours', displayName: 'Target', formatter: '0.00', size: 80 })\r\n        sheet.bindColumn(4, { name: 'dsvHours', displayName: 'DSV', formatter: '0.00', size: 80 })\r\n        sheet.bindColumn(5, { name: 'actualHours', displayName: 'Actual', formatter: '0.00', size: 80 })\r\n        sheet.bindColumn(6, { name: 'nptHours', displayName: 'NPT', formatter: '0.00', size: 80 })\r\n        sheet.bindColumn(7, { name: 'tftHours', displayName: 'TFT', formatter: '0.00', size: 80 })\r\n        sheet.bindColumn(8, { name: 'plannedDepth', displayName: 'Planned', formatter: '0.00', size: 80 })\r\n        sheet.bindColumn(9, { name: 'actualDepth', displayName: 'Actual', formatter: '0.00', size: 80 })\r\n        sheet.bindColumn(10, { name: 'start', displayName: 'Start', formatter: 'DD-MM-yyyy HH:mm' })\r\n        sheet.bindColumn(11, { name: 'end', displayName: 'End', formatter: 'DD-MM-yyyy HH:mm' })\r\n        sheet.bindColumn(12, { name: 'behindHours', displayName: 'Behind hours', formatter: '0.00', size: 100 })\r\n        sheet.bindColumn(13, { name: 'contractor', displayName: 'Contractor', size: 200 })\r\n        sheet.bindColumn(14, { name: 'comments', displayName: 'Comment', size: 200 })\r\n        sheet.setColumnCount(15)\r\n\r\n        const style = new spreadNS.Style()\r\n        style.backColor = '#f6f6f6'\r\n        style.cellPadding = '0 2'\r\n\r\n        // Total row\r\n        const totalRow = sheet.getRowCount()\r\n        sheet.addRows(sheet.getRowCount(spreadNS.SheetArea.viewport), 1)\r\n        sheet.setStyle(totalRow, 1, style, spreadNS.SheetArea.viewport)\r\n        sheet.setValue(totalRow, 1, 'Total')\r\n\r\n        const columnsCount = sheet.getColumnCount()\r\n        const groupsIndex = groups.map(({ index }) => index + 1)\r\n\r\n        function createTotal(letter) {\r\n            return `${letter}${groupsIndex.join(`,${letter}`)}`\r\n        }\r\n\r\n        groups.forEach(({ index, count }) => {\r\n            let i = columnsCount\r\n            while (i >= 0) {\r\n                sheet.setStyle(index, i, style, spreadNS.SheetArea.viewport)\r\n                const cell = sheet.getCell(index, i, spreadNS.SheetArea.viewport)\r\n                cell\r\n                    .borderLeft(new spreadNS.LineBorder(\"#ccc\", spreadNS.LineStyle.thin))\r\n                    .borderRight(new spreadNS.LineBorder(\"#ccc\", spreadNS.LineStyle.thin))\r\n                    .borderTop(new spreadNS.LineBorder(\"#ccc\", spreadNS.LineStyle.thin))\r\n                    .borderBottom(new spreadNS.LineBorder(\"#ccc\", spreadNS.LineStyle.thin))\r\n\r\n                if (i > 1 && i < 8) {\r\n                    const columnLetter = columnToLetter(i + 1)\r\n                    const startRow = index + 2\r\n                    const endRow = index + count + 1\r\n                    const sumFormula = `=SUM(${columnLetter}${startRow}:${columnLetter}${endRow})`\r\n                    sheet.setFormula(index, i, sumFormula)\r\n                    sheet.setFormula(totalRow, i, `=SUM(${createTotal(columnLetter)})`)\r\n                }\r\n                i--\r\n            }\r\n\r\n            // Prevent lock events\r\n            const row = new spreadNS.CellRange(sheet, index + 1, 0, count, columnsCount)\r\n            row.locked(false)\r\n\r\n            // group events to phases\r\n            sheet.rowOutlines.group(index + 1, count)\r\n            sheet.rowOutlines.expand(0, false)\r\n            sheet.rowOutlines.direction(spreadNS.Outlines.OutlineDirection.backward);\r\n        })\r\n\r\n\r\n        // auto fit\r\n        sheet.autoFitColumn(1)\r\n        sheet.autoFitColumn(10)\r\n        sheet.autoFitColumn(11)\r\n        sheet.resumePaint()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <h3>SpreadJS render performance: <span style={{ color: 'tomato' }}>{this.state.time}ms</span></h3>\r\n                <div ref={this.tableRef} style={{ height: '100%', width: '100%' }}/>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n","import React, { Component, Fragment, createRef } from 'react';\r\nimport dataService from '../db/dataService'\r\nimport ZingGrid from 'zinggrid';\r\nimport './zing-grid.css'\r\nimport createFlatter from '../helpers/flat-data'\r\n\r\n\r\nwindow.assignDataToNestedGrid = (index, cellRef, recordRef) => {\r\n    if (cellRef) {\r\n        cellRef.querySelector('zing-grid').setData(JSON.stringify(index))\r\n    }\r\n}\r\nexport default class ZingGridView extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.tabelEl = createRef()\r\n        this.state = {\r\n            time: 0\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.initTable()\r\n    }\r\n\r\n    initTable = () => {\r\n        const ts = window.performance.now()\r\n        const flatData = createFlatter()\r\n        const { data } = flatData(dataService.getPhases())\r\n        const grid = new ZingGrid(this.tabelEl.current, {\r\n            data,\r\n            columns: [\r\n                {\r\n                    index: 'code',\r\n                    width: 80\r\n                },\r\n                {\r\n                    index: 'name'\r\n                },\r\n                {\r\n                    index: 'afeHours',\r\n                    type: 'number',\r\n                    header: 'AFE',\r\n                    width: 80\r\n                },\r\n                {\r\n                    index: 'targetHours',\r\n                    type: 'number',\r\n                    header: 'Target',\r\n                    width: 80\r\n                },\r\n                {\r\n                    index: 'dsvHours',\r\n                    type: 'number',\r\n                    header: 'DSV',\r\n                    width: 80\r\n                },\r\n                {\r\n                    index: 'nptHours',\r\n                    type: 'number',\r\n                    header: 'NPT',\r\n                    width: 80\r\n                },\r\n                {\r\n                    index: 'wowHours',\r\n                    type: 'number',\r\n                    header: 'WOW',\r\n                    width: 80\r\n                },\r\n                {\r\n                    index: 'tftHours',\r\n                    type: 'number',\r\n                    header: 'TFT',\r\n                    width: 80\r\n                },\r\n                {\r\n                    index: 'plannedDepth',\r\n                    type: 'number',\r\n                    header: 'Planned',\r\n                    width: 80\r\n                },\r\n                {\r\n                    index: 'actualDepth',\r\n                    type: 'number',\r\n                    header: 'Actual',\r\n                    width: 80\r\n                }\r\n            ],\r\n            editor: true,\r\n            layout: 'row',\r\n            loading: true,\r\n            height: '600px',\r\n            loadByScroll: true\r\n        });\r\n\r\n        grid.addEventListener('grid:ready', (e) => {\r\n            const te = window.performance.now()\r\n            const time = (te - ts).toFixed(2)\r\n            this.setState({ time })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <h3>Zing grid render performance: <span style={{ color: 'tomato' }}>{this.state.time}ms</span></h3>\r\n                <div ref={this.tabelEl}/>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n","import React, { Component, createRef } from 'react';\r\nimport './wijmo.css'\r\nimport '@grapecity/wijmo.styles/wijmo.css';\r\nimport { FlexGrid, FlexGridColumn } from \"@grapecity/wijmo.react.grid\";\r\n// import * as wjCore from '@grapecity/wijmo';\r\nimport { FlexGridXlsxConverter } from '@grapecity/wijmo.grid.xlsx';\r\nimport * as wjGrid from '@grapecity/wijmo.grid';\r\nimport { Menu, MenuItem, MenuSeparator } from '@grapecity/wijmo.react.input';\r\n\r\nimport dataService from '../db/dataService'\r\n\r\nfunction isGroupRow(row) {\r\n    return row instanceof wjGrid.GroupRow\r\n}\r\n\r\nfunction getRowLevel(row) {\r\n    return isGroupRow(row) ? row.level : -1\r\n}\r\n\r\nfunction getParentNode(row) {\r\n    let parentRow = null\r\n    const rowLevel = getRowLevel(row);\r\n    if (rowLevel === -1) return\r\n\r\n    let i = row.index\r\n    do {\r\n        i--\r\n        parentRow = row.grid.rows[i]\r\n    } while (getRowLevel(parentRow) >= rowLevel)\r\n\r\n    return parentRow\r\n}\r\n\r\n\r\nclass CostTableView extends Component {\r\n    gridRef = createRef()\r\n    state = {\r\n        costs: dataService.getCosts(),\r\n        filter: '',\r\n        time: 0\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this._ts = window.performance.now()\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateGridStyles()\r\n\r\n        this.workerGrid.collapseGroupsToLevel(0)\r\n        this.workerGrid.rowAdded.addHandler(() => {\r\n            this.updateGridStyles()\r\n        })\r\n\r\n        this.workerGrid.deletedRow.addHandler((grid, e) => {\r\n            this.updateGridStyles()\r\n        })\r\n\r\n        this.workerGrid.deletingRow.addHandler((grid, e) => {\r\n            // this.updateGridStyles()\r\n        })\r\n    }\r\n\r\n    initialWorkerGrid = (grid) => {\r\n        this.workerGrid = grid;\r\n        // grid.columnFooters.rows.push(new wjGrid.GroupRow());\r\n        // grid.bottomLeftCells.setCellData(0, 0, 'Σ');\r\n        grid.formatItem.addHandler((grid, e) => {\r\n            if (e.panel !== grid.cells) {\r\n                return\r\n            }\r\n\r\n            const { row, col } = e\r\n            const rowData = grid.rows[row]\r\n            const colData = grid.columns[col]\r\n\r\n            // if (colData.binding === 'rate' && rowData.hasChildren) {\r\n            //     e.cell.textContent = wjCore.getAggregate(1, item.__children, 'rate')\r\n            // }\r\n\r\n            if (/days/.test(colData.binding) && !rowData.hasChildren) {\r\n                // e.cell.textContent = get(item, colData.binding, get(item, colData.binding.replace('days', 'populatedDays')))\r\n            }\r\n        });\r\n\r\n        grid.itemFormatter = (panel, r, c, cell) => {\r\n            if (panel.cellType === wjGrid.CellType.ColumnHeader) {\r\n            }\r\n        }\r\n\r\n        const te = window.performance.now()\r\n        const time = (te - this._ts).toFixed(2)\r\n        this.setState({ time })\r\n    }\r\n\r\n    onCellEditEnding = (grid, e) => {\r\n        console.log('edited')\r\n    }\r\n\r\n    updateGridStyles = () => {\r\n        this.workerGrid.rows.forEach((row) => {\r\n            if (!row.hasChildren) {\r\n                row.cssClass = 'wj-group--bg-white'\r\n            }\r\n            row.isReadOnly = row.hasChildren;\r\n        });\r\n    }\r\n\r\n    onFilter = ({ target: { value } }) => {\r\n        this.setState(() => {\r\n            const filter = value.toLowerCase()\r\n            const costs = dataService.getCosts()\r\n\r\n            return {\r\n                costs: this.filter(filter, costs),\r\n                filter\r\n            }\r\n        }, () => {\r\n            this.updateGridStyles()\r\n        })\r\n    }\r\n\r\n    filter(filterString, costs) {\r\n        if (filterString === '') return costs;\r\n        const keysToSearch = ['name', 'code'];\r\n\r\n        const search = cost => {\r\n            const values = keysToSearch.map(key => cost[key]).filter(v => v);\r\n            if (values.some(v => v.toLowerCase().includes(filterString))) {\r\n                return cost;\r\n            }\r\n\r\n            if (cost.__children && cost.__children.length) {\r\n                const costCopy = Object.assign({}, cost);\r\n                const children = cost.__children.reduce(collectResults, []);\r\n\r\n                if (children.length) {\r\n                    costCopy.__children = children;\r\n                    return costCopy;\r\n                }\r\n            }\r\n\r\n            return null;\r\n        };\r\n\r\n        function collectResults(acc, cost) {\r\n            const res = search(cost);\r\n            if (res) acc.push(res);\r\n\r\n            return acc;\r\n        }\r\n\r\n        return costs.reduce(collectResults, []);\r\n    }\r\n\r\n    onMenuItemClicked = ({ selectedValue }) => {\r\n        const cmd = this[selectedValue]\r\n        if (typeof cmd !== 'function') {\r\n            console.log('Context Menu: no cmd found ', selectedValue)\r\n            return\r\n        }\r\n\r\n        cmd()\r\n    }\r\n\r\n    addRow = () => {\r\n        const { row: rowIndex } = this.workerGrid.selection\r\n        const { rows } = this.workerGrid\r\n        const rowData = rows[rowIndex].dataItem\r\n\r\n        this.setState(({ costs }) => {\r\n            if (!rowData.__children) {\r\n                rowData.__children = []\r\n            }\r\n\r\n            rowData.__children.push({ name: '', code: '', days: {}, populatedDays: {} })\r\n\r\n            const newCosts = [...costs]\r\n            return { costs: newCosts }\r\n        }, () => {\r\n            this.workerGrid.refresh()\r\n            this.updateGridStyles()\r\n        })\r\n    }\r\n\r\n    removeRow = () => {\r\n        const { row: rowIndex } = this.workerGrid.selection\r\n        const { rows } = this.workerGrid\r\n        const row = rows[rowIndex]\r\n        const parentRow = getParentNode(row)\r\n\r\n        if (parentRow) {\r\n            this.setState(({ costs }) => {\r\n                const parentRowData = parentRow.dataItem\r\n                const rowData = row.dataItem\r\n                const childIndex = parentRowData.__children.findIndex(child => child === rowData)\r\n\r\n                if (childIndex >= 0) {\r\n                    parentRowData.__children.splice(childIndex, 1)\r\n                }\r\n\r\n                return { costs: [...costs] }\r\n            }, () => {\r\n                this.workerGrid.refresh()\r\n                this.updateGridStyles()\r\n            })\r\n        }\r\n    }\r\n\r\n    collapseAll = () => {\r\n        this.workerGrid.collapseGroupsToLevel(0)\r\n    }\r\n\r\n    expandAll = () => {\r\n        this.workerGrid.collapseGroupsToLevel(this.workerGrid.rows.maxGroupLevel + 1)\r\n    }\r\n\r\n\r\n    onDraggedRow = (grid, e) => {\r\n        console.log(e)\r\n    }\r\n\r\n    exportExcel = () => {\r\n        const book = FlexGridXlsxConverter.save(this.workerGrid, {\r\n            includeColumnHeaders: true,\r\n            includeRowHeaders: true\r\n        })\r\n\r\n        book.sheets[0].name = 'FlexGrid Data';\r\n        book.saveAsync('FlexGrid-Export.xlsx');\r\n    }\r\n\r\n    render() {\r\n        const { costs, filter, time } = this.state\r\n        const columns = ['days.2015-06-22', 'days.2015-06-27', 'days.2015-07-05', 'days.2015-07-11'].map((key) =>\r\n            <FlexGridColumn\r\n                binding={key}\r\n                header={key.replace('days.', '')}\r\n                key={key}\r\n                allowResizing={false}></FlexGridColumn>)\r\n\r\n\r\n        return (\r\n            <div className=\"cost-view\">\r\n                <h3>Wijmo Grid render performance: <span style={{ color: 'tomato' }}>{time}ms</span></h3>\r\n\r\n                <input type=\"text\" value={filter}\r\n                       placeholder=\"Filter\"\r\n                       className=\"form-control\" style={{ marginBottom: '20px' }}\r\n                       onChange={this.onFilter}/>\r\n                <FlexGrid\r\n                    ref={this.gridRef}\r\n                    itemsSource={costs}\r\n                    selectionMode=\"Row\"\r\n                    autoGenerateColumns={false}\r\n                    childItemsPath=\"__children\"\r\n                    frozenColumns={7}\r\n                    isReadOnly={false}\r\n                    allowSorting={false}\r\n                    allowDragging=\"Rows\"\r\n                    allowAddNew={true}\r\n                    // allowDelete={true}\r\n                    initialized={this.initialWorkerGrid}\r\n                    cellEditEnding={this.onCellEditEnding}\r\n                    draggedRow={this.onDraggedRow}\r\n                >\r\n                    <FlexGridColumn binding=\"name\" header=\"Name\" width=\"2*\" minWidth={200}\r\n                                    isReadOnly={false}></FlexGridColumn>\r\n                    <FlexGridColumn binding=\"code\" header=\"Code\"></FlexGridColumn>\r\n                    <FlexGridColumn binding=\"type\" header=\"Type\"\r\n                                    dataMap={['tangible', 'intangible', 'consumable']}></FlexGridColumn>\r\n                    <FlexGridColumn binding=\"unit\" header=\"Unit\"\r\n                                    dataMap={['day rate', 'lump sum', 'unit cost', 'depth based']}></FlexGridColumn>\r\n                    <FlexGridColumn binding=\"rate\" header=\"Rate\"></FlexGridColumn>\r\n                    <FlexGridColumn binding=\"currency\" header=\"Currency\"\r\n                                    dataMap={[\"AUD\", \"EUR\", \"GBP\", \"NOK\", \"USD\"]}></FlexGridColumn>\r\n                    <FlexGridColumn binding=\"populateDaily\" header=\"Populate Daily\" format=\"n*\"></FlexGridColumn>\r\n                    <FlexGridColumn binding=\"prior\" header=\"Before onhire\"></FlexGridColumn>\r\n                    {columns}\r\n                    <FlexGridColumn binding=\"afterOffhire\" header=\"After offhire\"></FlexGridColumn>\r\n                </FlexGrid>\r\n\r\n                <Menu contextMenuOf={this.gridRef}\r\n                      header=\"Context Menu\"\r\n                      selectedValuePath=\"cmd\"\r\n                      dropDownCssClass=\"ctx-menu\"\r\n                      itemClicked={this.onMenuItemClicked}\r\n                >\r\n                    <MenuItem cmd=\"addRow\">\r\n                        Add row\r\n                    </MenuItem>\r\n                    <MenuItem cmd=\"removeRow\">\r\n                        Remove row\r\n                    </MenuItem>\r\n                    <MenuSeparator></MenuSeparator>\r\n                    <MenuItem cmd=\"collapseAll\">\r\n                        Collapse all\r\n                    </MenuItem>\r\n                    <MenuItem cmd=\"expandAll\">Expand all</MenuItem>\r\n                    <MenuSeparator></MenuSeparator>\r\n                    <MenuItem cmd=\"exportExcel\">Export Excel</MenuItem>\r\n                </Menu>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CostTableView\r\n","export default {\r\n    Cfg: {\r\n        CfgId: 'Costs',\r\n        ShowDeleted: \"0\",\r\n        SuppressCfg: '0',\r\n        AutoSort: \"0\",\r\n        DateStrings: '1',\r\n        ReloadChanged: '3',\r\n        MainCol: 'name',\r\n        NoVScroll: 0,\r\n        Sorting: 0,\r\n        Paging: 2,\r\n        PageLength: 1,\r\n        AutoUpdate: 1,\r\n        StandardFilter: 3,\r\n        SaveExpanded: 1,\r\n        PersistentCfg: 2,\r\n        Filtered: 0,\r\n        DebugCalc: 1\r\n    },\r\n    Actions: {\r\n        OnRightClickCell: 'Grid.Component.showCustomMenu(Row,Col)' // Custom event handler, shows the calling method of the framework component; Shows some custom popup menu on right click to any cell\r\n    },\r\n    Def: {\r\n        R: {\r\n            Expanded: 1\r\n        },\r\n        Cost: {},\r\n        CostGroup: {\r\n            CanEdit: 0,\r\n            Calculated: 1,\r\n            nameCanEdit: 1,\r\n            codeCanEdit: 1,\r\n            populateDailyFormula: 'sum()'\r\n        }\r\n    },\r\n    DefCols: {\r\n        C: {\r\n            CanFilter: 0\r\n        }\r\n    },\r\n    LeftCols: [\r\n        { Name: 'name', RelWidth: 1, MinWidth: 250, Type: 'Text', CanFilter: 1, CaseSensitive: 0 },\r\n        { Name: 'code', CanFilter: 1, CaseSensitive: 0 },\r\n        {\r\n            Name: 'type', Width: '80',\r\n            Type: 'Enum',\r\n            Enum: ['|tangible', 'intangible', 'consumable'].join('|')\r\n        },\r\n        {\r\n            Name: 'unit',\r\n            Width: '90',\r\n            Type: 'Enum',\r\n            Enum: ['|day rate', 'lump sum', 'unit cost', 'depth based'].join('|')\r\n        },\r\n        { Name: 'rate', Width: '90' },\r\n        { Name: 'currency', Width: '90', Type: 'Enum', Enum: [\"|AUD\", \"EUR\", \"GBP\", \"NOK\", \"USD\"].join('|') },\r\n        { Name: 'populateDaily', Width: '90', OnChange: \"Grid.Component.populate(Grid, Row, Value)\" }\r\n    ],\r\n    Cols: [\r\n        { Name: 'prior' },\r\n        {\r\n            Name: 'day-2016-06-13',\r\n            Formula: 'day-2016-06-13 ? day-2016-06-13 : Get(Row, \"populatedDay-2016-06-13\")',\r\n            CanEdit: 1\r\n        },\r\n        {\r\n            Name: 'day-2016-06-13_1',\r\n            Formula: 'day-2016-06-13_1 ? day-2016-06-13_1 : Get(Row, \"populatedDay-2016-06-13_1\")',\r\n            CanEdit: 0\r\n        },\r\n        {\r\n            Name: 'X',\r\n            Formula: 'Grid.Component.isAcc ? day-2016-06-13 + day-2016-06-13_1 : day-2016-06-13_1',\r\n            OnChange: 'Grid.SetValue(Row,\"day-2016-06-13_1\",Value,1)',\r\n            // Formula: 'day-2016-06-13_1 ? day-2016-06-13_1 : Get(Row, \"populatedDay-2016-06-13_1\")',\r\n            CanEdit: 1\r\n        },\r\n        {\r\n            Name: 'day-2016-06-14',\r\n            CanEdit: 0\r\n        },\r\n        {\r\n            Name: 'Y',\r\n            Formula: 'Grid.Component.isAcc ? X + day-2016-06-14 : day-2016-06-14',\r\n            OnChange: 'Grid.SetValue(Row,\"day-2016-06-14\",Value,1)',\r\n            // Formula: 'day-2016-06-13_1 ? day-2016-06-13_1 : Get(Row, \"populatedDay-2016-06-13_1\")',\r\n            CanEdit: 1\r\n        },\r\n        {\r\n            Name: 'day-2016-06-14_1',\r\n            // Formula: 'day-2016-06-14_1 ? day-2016-06-14_1 : Get(Row, \"populatedDay-2016-06-14_1\")',\r\n            CanEdit: 1\r\n        },\r\n        {\r\n            Name: 'day-2016-06-15',\r\n            // Formula: 'day-2016-06-15 ? day-2016-06-15 : Get(Row, \"populatedDay-2016-06-15\")',\r\n            CanEdit: 1\r\n        },\r\n        { Name: 'afterOffhire' }\r\n    ],\r\n    Header: {\r\n        name: \"Name\",\r\n        code: \"Code\",\r\n        type: \"Type\",\r\n        unit: \"Unit\",\r\n        rate: \"Rate\",\r\n        currency: \"Currency\",\r\n        populateDaily: \"Populate Daily\",\r\n        prior: \"Before onhire\",\r\n        'day-2016-06-13': \"2016-06-13\",\r\n        'day-2016-06-13_1': \"2016-06-13/1\",\r\n        'day-2016-06-14': \"2016-06-14\",\r\n        'day-2016-06-14_1': \"2016-06-14/1\",\r\n        'day-2016-06-15': \"<span class='vertical-lr'>2016-06-15</span>\",\r\n        afterOffhire: \"After offhire\",\r\n        NoEscape: 1\r\n    },\r\n    // Root: { CDef: 'Node' },\r\n    Head: [\r\n        {\r\n            Kind: 'Filter',\r\n            nameFilter: 11,\r\n            codeFilter: 11\r\n        }\r\n    ],\r\n    Foot: [\r\n        {\r\n            id: 'Fix1',\r\n            CanDelete: '0',\r\n            CanEdit: '0',\r\n            Calculated: '1',\r\n            name: \"Total income\",\r\n            populateDailyFormula: 'sum()'\r\n        }\r\n    ]\r\n}\r\n","import React, { Component, createRef, Fragment } from 'react';\r\nimport layout from './TreeDef'\r\nimport dataService from '../db/dataService'\r\nimport uid from 'uid'\r\n// import './tree-grid.css'\r\n\r\nconst LS_KEY = `data-2`\r\n\r\nfunction migrateData(arr) {\r\n    arr = arr || dataService.getCosts() || []\r\n\r\n    function flat(item) {\r\n        item.id = uid()\r\n        if (item.__children && item.__children.length) {\r\n            item.Def = 'CostGroup'\r\n            item.Items = item.__children.map(flat)\r\n        }\r\n\r\n        const days = Object.entries(item.days)\r\n        if (days.length) {\r\n            days.forEach(([day, value]) => {\r\n                item[`day-${day.replace('/', '_')}`] = value\r\n            })\r\n        }\r\n\r\n        if (item.populatedDays) {\r\n            const populatedDays = Object.entries(item.populatedDays)\r\n            if (populatedDays.length) {\r\n                populatedDays.forEach(([day, value]) => {\r\n                    item[`populatedDay-${day.replace('/', '_')}`] = value\r\n                })\r\n            }\r\n        }\r\n\r\n        // item.Def = 'Cost'\r\n        delete item.__children\r\n        delete item.group\r\n        delete item.days\r\n        delete item.populatedDays\r\n\r\n        return item\r\n    }\r\n\r\n    return arr.map(flat)\r\n}\r\n\r\nconst getBody = () => {\r\n    let data = window.localStorage.getItem(LS_KEY)\r\n    if (data) return JSON.parse(data)\r\n\r\n    data = migrateData()\r\n    window.localStorage.setItem(LS_KEY, JSON.stringify(data))\r\n\r\n    return data\r\n}\r\n\r\nclass TreeGrid extends Component {\r\n    Grid = null\r\n    isAcc = false\r\n    tagRef = createRef()\r\n    _body = getBody()\r\n    _worker = new Worker(\"/sheets.github.io/worker.js\")\r\n\r\n    componentDidMount() {\r\n        this._worker.addEventListener('message', (e) => {\r\n            const [event, newData] = e.data\r\n\r\n            switch (event) {\r\n                case 'updated':\r\n                    this.saveData(newData)\r\n                    break\r\n                case 'error':\r\n                    console.error('Worker error: ', newData)\r\n                    break\r\n                default:\r\n                    console.debug('Worker: event not found!')\r\n            }\r\n        })\r\n\r\n        new Promise(resolve => {\r\n            this.Grid = window.TreeGrid({\r\n                Debug: 'problem',\r\n                DebugCalc: 1,\r\n                Layout: {\r\n                    Data: layout\r\n                },\r\n                Upload: {\r\n                    Format: 'JSON',\r\n                    Type: ['Changes'],\r\n                    Tag: 'grid'\r\n                },\r\n                Data: {\r\n                    Data: {\r\n                        Body: [\r\n                            this._body\r\n                        ]\r\n                    }\r\n                }\r\n            }, this.tagRef.current, { Component: this });\r\n\r\n            window.Grids.OnAfterValueChanged = this.updateData\r\n            window.Grids.OnSave = (grid, row) => {\r\n                console.log(grid.GetXmlData())\r\n            }\r\n        })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.Grid.Dispose()\r\n    }\r\n\r\n    populate = (Grid, Row, Value) => {\r\n        ['2016-06-13', '2016-06-13_1', '2016-06-14', '2016-06-14_1', '2016-06-15'].forEach(key => {\r\n            Grid.SetValue(Row, `populatedDay-${key}`, Value, 1)\r\n        })\r\n    }\r\n\r\n    saveData = (newData) => {\r\n        window.localStorage.setItem(LS_KEY, JSON.stringify(newData))\r\n        this._body = newData\r\n    }\r\n\r\n    updateData = (grid, row, col) => {\r\n        const newRowData = { id: row.id }\r\n        newRowData[col] = row[col]\r\n        this._worker.postMessage(['change', newRowData, this._body])\r\n    }\r\n\r\n    showCustomMenu = (row, col) => {\r\n        var G = this.Grid;\r\n        const self = this\r\n        this.Grid.ShowMenu(row, col, {\r\n            Items: [\r\n                {\r\n                    Name: self.isAcc ? \"Individual\" : \"Accumulative\",\r\n                    OnClick() {\r\n                        self.isAcc = !self.isAcc\r\n                        G.ReloadBody(() => {\r\n                            console.log('done')\r\n                        })\r\n                    }\r\n                },\r\n                {\r\n                    Name: row.Deleted ? \"Undelete row\" : \"Delete row\",\r\n                    OnClick: function () {\r\n                        G.DeleteRow(row, row.Deleted ? 3 : 1);\r\n                    }\r\n                },\r\n                {\r\n                    Name: row.Selected ? \"Deselect row\" : \"Select row\",\r\n                    OnClick: function () {\r\n                        G.SelectRow(row);\r\n                    }\r\n                },\r\n                {\r\n                    Name: \"Copy row\",\r\n                    OnClick: function () {\r\n                        G.CopyRow(row, null, row, 1, 0);\r\n                    }\r\n                },\r\n                {\r\n                    Name: \"Add new row\",\r\n                    OnClick: function () {\r\n                        G.AddRow(null, row, 1);\r\n                    }\r\n                }\r\n            ]\r\n        });\r\n        return 1;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <div ref={this.tagRef}/>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TreeGrid\r\n","export default {\r\n    Cfg: {\r\n        ShowDeleted: \"0\",\r\n        AutoSort: \"0\",\r\n        DateStrings: '1',\r\n        ReloadChanged: '3',\r\n        MainCol: 'name',\r\n        NoVScroll: 0,\r\n        Sorting: 0,\r\n        // Paging: 2,\r\n        // PageLength: 1,\r\n        AutoUpdate: 1,\r\n        StandardFilter: 3,\r\n        SaveExpanded: 1,\r\n        PersistentCfg: 2,\r\n        Filtered: 0,\r\n        RoundNumbers: 1,\r\n        RoundNumbersDigits: 2,\r\n        Size: 'Small',\r\n        Undo: 32,\r\n        RowIndex: \"Pos\",\r\n        SearchLap: 1,\r\n        FilterLap: 1,\r\n        Validate: 'Changed,Messages',\r\n        Sync: 'Horz,Vert',\r\n        SyncId: 'TimeTracker',\r\n        // CfgId: 'Costs',\r\n        ExportType: 'Expanded,Outline,Indent,ForceBorder,TextType,Strings,FixedRows,Size'\r\n    },\r\n    Toolbar: {\r\n        Cells30Manipulate: \"Undo,Redo,Add,AddChild,Calc,Outdent,Indent,ExpandAll,CollapseAll\"\r\n    },\r\n    Def: {\r\n        R: {\r\n            Expanded: 1\r\n        }\r\n    },\r\n    DefCols: {\r\n        C: {\r\n            CanFilter: 0\r\n        }\r\n    },\r\n    Root: {\r\n        AcceptDef: 'Well',\r\n        CDef: 'Well'\r\n    },\r\n    Panel: {\r\n        Copy: 1,\r\n        Delete: 1,\r\n        Select: 1,\r\n        Move: 1\r\n    }\r\n}\r\n","export default function getPrevEvent(grid, row) {\r\n    const _row = grid.GetPrev(row)\r\n\r\n    if (!_row) return\r\n\r\n    if (_row.Def.Name !== 'Event') {\r\n        return getPrevEvent(grid, _row)\r\n    }\r\n\r\n    return _row\r\n}\r\n","import isNumber from 'lodash/isNumber'\r\nimport isNaN from 'lodash/isNaN'\r\n\r\nexport default function pickNumber(...args) {\r\n    return args.find(n => isNumber(n) && !isNaN(n));\r\n};\r\n","import React, { Component } from 'react';\r\nimport TreeGridComponent from '../../../components/TreeGridComponent'\r\n\r\n\r\n// Layout\r\nimport mergeLayouts from '../../../components/TreeGridComponent/utils/merge-layouts'\r\nimport staticLayout from '../static-layout'\r\nimport createColumns from '../create-columns'\r\nimport createLeftColumns from '../create-left-columns'\r\nimport createHead from '../create-head'\r\nimport createFoot from '../create-foot'\r\nimport createSolid from '../create-solid'\r\nimport createRowsDef from '../create-rows-def'\r\n\r\n// Utils\r\nimport getNextEvent from './utils/get-next-event'\r\nimport getPrevEvent from './utils/get-prev-event'\r\nimport pickNumber from '../../../helpers/pick-number'\r\nimport isUndefined from 'lodash/isUndefined'\r\n\r\nconst { TGAddEvent, TGDelEvent } = window\r\n\r\n// TODO: need revision\r\nconst validator = {\r\n    actualHours(grid, row, col) {\r\n        if (row.Def.Name !== 'Event') return\r\n\r\n        const nextEvent = getNextEvent(grid, row)\r\n        if (!nextEvent) return 0\r\n\r\n        const nextNotEmpty = grid.Helpers.isNotEmpty(nextEvent[col])\r\n        const currentEmpty = grid.Helpers.isEmpty(row[col])\r\n\r\n        if (nextNotEmpty && currentEmpty) {\r\n            return 1\r\n        }\r\n\r\n        return 0\r\n    },\r\n    _tftHours(grid, row, col) {\r\n        if (row[col] < 0) {\r\n            return 1\r\n        }\r\n\r\n        return 0\r\n    }\r\n}\r\n\r\nclass TimeTrackerGrid extends Component {\r\n    static nestedKey = 'Items'\r\n    layout = this.createLayout()\r\n\r\n    componentDidMount() {\r\n        const { id } = this.props\r\n        TGAddEvent(\"OnValidate\", id, this.onValidate);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        const { id } = this.props\r\n        TGDelEvent(\"OnValidate\", id, this.onValidate);\r\n    }\r\n\r\n    createLayout() {\r\n        const { OperationStartDate, Name, isAux, DerrickType } = this.props\r\n        const dynamicLayout = {\r\n            Cfg: {\r\n                ExportName: `${Name}.time-tracker`\r\n            }\r\n        }\r\n\r\n        dynamicLayout.LeftCols = createLeftColumns()\r\n\r\n        dynamicLayout.Cols = createColumns({ isAux })\r\n\r\n        dynamicLayout.Head = createHead()\r\n\r\n        dynamicLayout.Foot = createFoot()\r\n\r\n        dynamicLayout.Solid = createSolid({ OperationStartDate, isAux, DerrickType })\r\n\r\n        dynamicLayout.Def = createRowsDef()\r\n\r\n        return mergeLayouts(staticLayout, dynamicLayout)\r\n    }\r\n\r\n    onValidate = (grid, row, col) => {\r\n        if (validator[col]) {\r\n            return validator[col](grid, row, col)\r\n        }\r\n\r\n        return 0\r\n    }\r\n\r\n    getEventStart = (grid, row, get) => {\r\n        const eventRow = getPrevEvent(grid, row)\r\n\r\n        if (eventRow) {\r\n            return get(eventRow, '_end')\r\n        }\r\n\r\n        return this.props.OperationStartDate\r\n    }\r\n\r\n    getEventEnd = (start, duration) => {\r\n        if (start && typeof duration === 'number') {\r\n            return start + duration\r\n        }\r\n\r\n        return ''\r\n    }\r\n\r\n    getEventDuration = (...args) => {\r\n        const hours = pickNumber(...args)\r\n\r\n        if (isUndefined(hours)) return ''\r\n\r\n        return 60 * 60 * 1000 * hours // to milliseconds\r\n    }\r\n\r\n    getPlannedDepth = (grid, row, get, plannedDepth) => {\r\n        if (grid.Helpers.isNotEmpty(plannedDepth)) return plannedDepth\r\n\r\n        const eventRow = getPrevEvent(grid, row)\r\n        if (eventRow) {\r\n            return get(eventRow, '_plannedDepth')\r\n        }\r\n\r\n        return 0\r\n    }\r\n\r\n    getActualDepth = (grid, row, get, actualDepth) => {\r\n        if (grid.Helpers.isNotEmpty(actualDepth)) return actualDepth\r\n\r\n        if (!this.hasActual(grid, row)) return ''\r\n\r\n        const eventRow = getPrevEvent(grid, row)\r\n        if (eventRow) {\r\n            return get(eventRow, '_actualDepth')\r\n        }\r\n\r\n        return 0\r\n    }\r\n\r\n    getBehindHours = (grid, row, get, delta) => {\r\n        if (!this.hasActual(grid, row)) return ''\r\n\r\n        const eventRow = getPrevEvent(grid, row)\r\n        const prevDelta = eventRow ? get(eventRow, 'behindHours') : 0\r\n\r\n        return prevDelta + delta\r\n    }\r\n\r\n    hasActual = (grid, row) => {\r\n        return grid.Helpers.isNotEmpty(row.actualHours)\r\n    }\r\n\r\n    render() {\r\n        return <TreeGridComponent\r\n            layout={this.layout}\r\n            nestedKey={TimeTrackerGrid.nestedKey}\r\n            getBehindHours={this.getBehindHours}\r\n            getActualDepth={this.getActualDepth}\r\n            getPlannedDepth={this.getPlannedDepth}\r\n            getEventEnd={this.getEventEnd}\r\n            getEventStart={this.getEventStart}\r\n            getEventDuration={this.getEventDuration}\r\n            {...this.props}\r\n        />\r\n    }\r\n}\r\n\r\nexport default TimeTrackerGrid\r\n","export default function getNextEvent(grid, row) {\r\n    const _row = grid.GetNext(row)\r\n\r\n    if (!_row) return\r\n\r\n    if (_row.Def.Name !== 'Event') {\r\n        return getNextEvent(grid, _row)\r\n    }\r\n\r\n    return _row\r\n}\r\n","export default () => {\r\n    return [\r\n        {\r\n            Name: 'code',\r\n            CanFilter: 1,\r\n            MinWidth: 60,\r\n            CaseSensitive: 0\r\n        },\r\n        {\r\n            Name: 'name',\r\n            RelWidth: 1,\r\n            MinWidth: 250,\r\n            Type: 'Text',\r\n            CanFilter: 1,\r\n            ClassFormula: 'afeHours === \"\" && \"text-primary\"',\r\n            CaseSensitive: 0\r\n        }\r\n    ]\r\n}\r\n","export default ({ isAux }) => {\r\n    const cols = [\r\n        {\r\n            Name: 'afeHours',\r\n            MinWidth: 80,\r\n            CanEmpty: 1,\r\n            Format: ',0.00',\r\n            Type: 'Float'\r\n        },\r\n        {\r\n            Name: 'targetHours',\r\n            MinWidth: 80,\r\n            CanEmpty: 1,\r\n            Format: ',0.00',\r\n            Type: 'Float'\r\n        },\r\n        {\r\n            Name: 'dsvHours',\r\n            MinWidth: 80,\r\n            CanEmpty: 1,\r\n            Format: ',0.00',\r\n            Type: 'Float'\r\n        },\r\n        {\r\n            Name: 'actualHours',\r\n            MinWidth: 80,\r\n            CanEmpty: isAux ? 0 : 1,\r\n            Format: ',0.00',\r\n            Type: 'Float'\r\n        },\r\n        {\r\n            Name: 'nptHours',\r\n            MinWidth: 80,\r\n            CanEmpty: 1,\r\n            Format: ',0.00',\r\n            Type: 'Float'\r\n        },\r\n        {\r\n            Name: 'wowHours',\r\n            MinWidth: 80,\r\n            CanEmpty: 1,\r\n            Format: ',0.00',\r\n            Type: 'Float'\r\n        },\r\n        {\r\n            Name: '_tftHours',\r\n            MinWidth: 80,\r\n            Format: ',0.00',\r\n            Type: 'Float',\r\n            Formula: 'actualHours - nptHours - wowHours'\r\n        },\r\n        {\r\n            Name: 'unPtHours',\r\n            Visible: 0,\r\n            CanHide: 0,\r\n            CanPrint: 0,\r\n            CanExport: 0\r\n        },\r\n        {\r\n            Name: '_unPtHours',\r\n            CanEmpty: 1,\r\n            CanEdit: 1,\r\n            OnChange: 'Grid.SetValue(Row, \"unPtHours\", Value, 1)',\r\n            MinWidth: 80,\r\n            Format: ',0.00',\r\n            ClassFormula: 'Grid.Helpers.isEmpty(unPtHours) && \"TSClassReadOnly\"',\r\n            Formula: 'Grid.Helpers.isNotEmpty(unPtHours) ? unPtHours : Grid.Helpers.isEmpty(afeHours) ? actualHours : \"\"',\r\n            Type: 'Float'\r\n        },\r\n        {\r\n            Name: '_iltHours',\r\n            MinWidth: 80,\r\n            Format: ',0.00',\r\n            Type: 'Float',\r\n            CanEmpty: 1,\r\n            Formula: 'actualHours ? _tftHours - targetHours : \"\"'\r\n        },\r\n        {\r\n            Name: 'plannedDepth',\r\n            Type: 'Float',\r\n            Visible: 0,\r\n            CanHide: 0,\r\n            CanPrint: 0,\r\n            CanExport: 0\r\n        },\r\n        {\r\n            Name: '_plannedDepth',\r\n            MinWidth: 80,\r\n            Format: ',0.00',\r\n            Type: 'Float',\r\n            CanEdit: 1,\r\n            CanEmpty: 1,\r\n            OnChange: 'Grid.SetValue(Row, \"plannedDepth\", Value, 1)',\r\n            ClassFormula: 'Grid.Helpers.isEmpty(plannedDepth) && \"TSClassReadOnly\"',\r\n            Formula: 'Grid.Component.props.getPlannedDepth(Grid, Row, Get, plannedDepth)'\r\n        },\r\n        {\r\n            Name: 'actualDepth',\r\n            Type: 'Float',\r\n            Visible: 0,\r\n            CanHide: 0,\r\n            CanPrint: 0,\r\n            CanExport: 0\r\n        },\r\n        {\r\n            Name: '_actualDepth',\r\n            MinWidth: 80,\r\n            Format: ',0.00',\r\n            Type: 'Float',\r\n            CanEdit: 1,\r\n            CanEmpty: 1,\r\n            OnChange: 'Grid.SetValue(Row, \"actualDepth\", Value, 1)',\r\n            ClassFormula: 'Grid.Helpers.isEmpty(actualDepth) && \"TSClassReadOnly\"',\r\n            Formula: 'Grid.Component.props.getActualDepth(Grid, Row, Get, actualDepth)'\r\n        },\r\n        {\r\n            Name: '_eventDuration',\r\n            Type: 'Float',\r\n            Visible: 0,\r\n            CanHide: 0,\r\n            CanPrint: 0,\r\n            CanExport: 0,\r\n            Formula: 'Grid.Component.props.getEventDuration(actualHours, dsvHours)'\r\n        },\r\n        {\r\n            Name: 'start',\r\n            Visible: 0,\r\n            CanHide: 0,\r\n            CanPrint: 0,\r\n            CanExport: 0\r\n        },\r\n        {\r\n            Name: '_start',\r\n            Format: 'yyyy-M-d H:mm',\r\n            Type: 'Date',\r\n            CanEdit: 1,\r\n            OnChange: `Grid.SetValue(Row, \"start\", Value, 1)`,\r\n            ClassFormula: 'Grid.Helpers.isEmpty(start) && \"TSClassReadOnly\"',\r\n            Formula: 'start ? start : Grid.Component.props.getEventStart(Grid, Row, Get)',\r\n            MinWidth: 120\r\n        },\r\n        {\r\n            Name: '_end',\r\n            Format: 'yyyy-M-d H:mm',\r\n            Type: 'Date',\r\n            MinWidth: 120,\r\n            Formula: 'Grid.Component.props.getEventEnd(_start, _eventDuration)'\r\n        },\r\n        {\r\n            Name: 'deltaAfeActual',\r\n            Type: 'Float',\r\n            Visible: 0,\r\n            CanHide: 0,\r\n            CanPrint: 0,\r\n            CanExport: 0,\r\n            Formula: '(Grid.Helpers.isNotEmpty(afeHours) ? actualHours - afeHours : actualHours) / 24'\r\n        },\r\n        {\r\n            Name: 'behindHours',\r\n            MinWidth: 80,\r\n            Type: 'Float',\r\n            CanEmpty: 1,\r\n            Format: '+,0.0; -,0.0; 0',\r\n            Formula: 'Grid.Component.props.getBehindHours(Grid, Row, Get, deltaAfeActual)'\r\n        },\r\n        {\r\n            Name: 'contractor',\r\n            MinWidth: 120\r\n        },\r\n        {\r\n            Name: 'comment',\r\n            MinWidth: 120\r\n        },\r\n        {\r\n            Name: 'experienceLinks',\r\n            MinWidth: 80\r\n        }\r\n    ]\r\n\r\n    return cols\r\n}\r\n","import centerHeader from '../../components/TreeGridComponent/utils/center-header'\r\n\r\nexport default () => {\r\n    const mainHeader = {\r\n        Pos: 'Pos',\r\n        name: \"Name\",\r\n        code: \"Code\",\r\n        afeHours: 'AFE',\r\n        targetHours: 'Target',\r\n        dsvHours: 'DSV',\r\n        actualHours: 'Actual',\r\n        nptHours: 'NPT',\r\n        wowHours: 'WOW',\r\n        _tftHours: 'TFT',\r\n        _unPtHours: 'UN-PT',\r\n        _iltHours: 'ILT',\r\n        _plannedDepth: 'Planned',\r\n        _actualDepth: 'Actual',\r\n        _start: 'Start',\r\n        _end: 'End',\r\n        behindHours: 'Days -ahead/+behind',\r\n        contractor: 'Contractor',\r\n        comment: 'Comment',\r\n        experienceLinks: 'Ex Links'\r\n    }\r\n\r\n    // set align for header' key\r\n    // http://www.treegrid.com/Doc/ColBasics.htm#HeaderCellvalue\r\n    Object.keys(mainHeader).forEach((key) => centerHeader(key, mainHeader))\r\n\r\n    mainHeader.id = 'Header'\r\n\r\n    const upHeader = {\r\n        code: 'Identification',\r\n        afeHours: 'Duration [h]',\r\n        plannedDepth: 'End Depth [mMD]',\r\n        start: 'Timing',\r\n        contractor: 'Annotation'\r\n    }\r\n\r\n    Object.keys(upHeader).forEach((key) => centerHeader(key, upHeader))\r\n\r\n    // merge spanning\r\n    Object.assign(upHeader, {\r\n        Kind: 'Header',\r\n        Spanned: 1,\r\n        Pos: '',\r\n        PosSpan: 2,\r\n        codeSpan: 2,\r\n        afeHoursSpan: 10,\r\n        plannedDepthSpan: 4,\r\n        startSpan: 5,\r\n        contractorSpan: 3\r\n    })\r\n\r\n    return [\r\n        upHeader,\r\n        mainHeader\r\n    ]\r\n}\r\n","export default () => {\r\n    const total = {\r\n        id: 'Total',\r\n        Class: 'time-grid-total',\r\n        Color: '#D0E6F5',\r\n        CanDelete: 0,\r\n        CanEdit: 0,\r\n        Calculated: 1,\r\n        code: \"SUM\",\r\n\r\n        // calculations\r\n        dsvHoursFormula: 'sum()',\r\n        actualHoursFormula: 'sum()',\r\n        nptHoursFormula: 'sum()',\r\n        wowHoursFormula: 'sum()',\r\n        tftHoursFormula: 'sum()',\r\n        afeHoursFormula: 'sum()',\r\n        targetHoursFormula: 'sum()',\r\n        iltHoursFormula: 'sum()',\r\n        unPtHoursFormula: 'sum()',\r\n        _plannedDepthFormula: '',\r\n        _actualDepthFormula: '',\r\n        _startFormula: '',\r\n        _endFormula: 'Grid.GetLast() ? Get(Grid.GetLast(), \"_end\") : \"\"',\r\n        behindHoursFormula: 'calc(\"behindHours ? behindHours : Result\")',\r\n    }\r\n\r\n    return [total]\r\n}\r\n","export default ({ OperationStartDate, DerrickType, isAux }) => {\r\n    const topBar = {\r\n        id: 'topBar',\r\n        Space: -1,\r\n        Tag: 'timeGridTopBar',\r\n        Cells: 'OperationStartDate,DerrickType',\r\n\r\n        // OperationStartDate cell settings\r\n        OperationStartDate,\r\n        OperationStartDateLabel: 'Start operation: ',\r\n        OperationStartDateWidth: 120,\r\n        OperationStartDateFormat: 'yyyy-M-d H:mm',\r\n        OperationStartDateType: 'Date',\r\n        OperationStartDateRecalc: 256,\r\n        OperationStartDateOnChange: 'Grid.Component.props.handleOperationStartDateChange(Grid,Value)',\r\n\r\n        DerrickType,\r\n        DerrickTypeType: 'Bool',\r\n        DerrickTypeLabel: 'Aux derrick: ',\r\n        DerrickTypeOnChange: 'Grid.Component.props.handleDerrickTypeChange(Grid,Value)',\r\n    }\r\n\r\n    const topBarAux = {\r\n        id: 'topBarAux',\r\n        Visible: 0,\r\n        Cells: 'OperationStartDate',\r\n        OperationStartDate,\r\n        OperationStartDateRecalc: 256\r\n    }\r\n\r\n    return isAux ? [topBarAux] : [topBar]\r\n}\r\n","export default () => {\r\n    const commonGroupDef = {\r\n        CanEdit: 0,\r\n        Calculated: 1,\r\n\r\n        nameCanEdit: 1,\r\n        codeCanEdit: 1,\r\n\r\n        // calculations\r\n        dsvHoursFormula: 'sum()',\r\n        actualHoursFormula: 'sum()',\r\n        wowHoursFormula: 'sum()',\r\n        nptHoursFormula: 'sum()',\r\n        tftHoursFormula: 'sum()',\r\n        afeHoursFormula: 'sum()',\r\n        targetHoursFormula: 'sum()',\r\n        _iltHoursFormula: 'sum()',\r\n        _unPtHoursFormula: 'sum()',\r\n        _plannedDepthFormula: 'calc(\"_plannedDepth ? _plannedDepth : Result\")',\r\n        _actualDepthFormula: 'calc(\"_actualDepth ? _actualDepth : Result\")',\r\n        _startFormula: 'Row.firstChild ? Get(Row.firstChild, \"_start\") : \"\"',\r\n        _endFormula: 'Row.lastChild ? Get(Row.lastChild, \"_end\") : \"\"',\r\n        behindHoursFormula: 'calc(\"behindHours ? behindHours : Result\")'\r\n    }\r\n\r\n    const Well = {\r\n        CDef: 'Phase',\r\n        AcceptDef: 'Phase',\r\n\r\n        Class: 'time-grid-well',\r\n        Color: '#d7d7d7',\r\n\r\n        ...commonGroupDef\r\n    }\r\n\r\n    const Phase = {\r\n        CDef: 'Event',\r\n        AcceptDef: 'Event',\r\n\r\n        Class: 'time-grid-phase',\r\n        Color: '#f0f0f0',\r\n\r\n        ...commonGroupDef\r\n    }\r\n\r\n    const eventCalcOrder = [\r\n        'nameClass',\r\n        'deltaAfeActual',\r\n        'behindHours',\r\n        '_tftHours',\r\n        '_unPtHours',\r\n        '_unPtHoursClass',\r\n        '_iltHours',\r\n        '_plannedDepth',\r\n        '_plannedDepthClass',\r\n        '_actualDepth',\r\n        '_actualDepthClass',\r\n        '_eventDuration',\r\n        '_start',\r\n        '_startClass',\r\n        '_end'\r\n    ]\r\n\r\n    const Event = {\r\n        AcceptDef: '',\r\n\r\n        CalcOrder: eventCalcOrder.join()\r\n    }\r\n\r\n    return { Well, Phase, Event }\r\n}\r\n","import { v4 as uuid } from 'uuid/wrapper.mjs'\r\nimport camelCase from 'lodash/camelCase'\r\n\r\nconst ignoreKeys = ['uid', '__children', 'derivedActualDepth', 'derivedPlannedDepth', 'overriddenStart', 'iltHours', 'tftHours', 'behindHours', 'end', 'actualHoursValidation']\r\n\r\nfunction splitDerrickTypes(acc, item) {\r\n    const main = {\r\n        id: item.uid || item.id || uuid(),\r\n        name: item.name,\r\n        code: item.code\r\n    }\r\n    const aux = {\r\n        id: uuid(),\r\n        name: item.auxName,\r\n        code: item.auxCode\r\n    }\r\n\r\n    acc[0].push(main)\r\n    acc[1].push(aux)\r\n\r\n    if (item.__children && item.__children.length) {\r\n        const [mainChildren, auxChildren] = item.__children.reduce(splitDerrickTypes, [[], []])\r\n\r\n        main.Items = mainChildren\r\n        aux.Items = auxChildren\r\n\r\n        return acc\r\n    }\r\n\r\n    Object.entries(item).forEach(([key, value]) => {\r\n        if (ignoreKeys.includes(key)) return\r\n\r\n        if (/^aux/.test(key)) {\r\n            const newKey = camelCase(key.replace('aux', ''))\r\n            aux[newKey] = value\r\n            return\r\n        }\r\n\r\n        if (key === 'start' && (value || item.overriddenStart)) {\r\n            main[key] = +new Date(value || item.overriddenStart)\r\n            return\r\n        }\r\n\r\n        main[key] = value\r\n    })\r\n\r\n    return acc\r\n}\r\n\r\nexport default (phases) => {\r\n    if (!phases) return [[], []]\r\n\r\n    return phases.reduce(splitDerrickTypes, [[], []])\r\n}\r\n\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport deepClone from '../../helpers/deep-clone'\r\nimport TimeTrackerGrid from './TimeTrackerGrid'\r\nimport migrateData from './migrate-data'\r\nimport dataService from '../../db/dataService'\r\n\r\nconst version = 'phases-v2'\r\n\r\nconst { Grids } = window\r\n\r\nclass TimeTracker extends Component {\r\n    model = {\r\n        attrs: {},\r\n        set(key, v) {\r\n            this.attrs[key] = v\r\n            this.save()\r\n        },\r\n        get(key) {\r\n            return this.attrs[key]\r\n        },\r\n        load(v) {\r\n            this.attrs = v\r\n        },\r\n        save() {\r\n            window.localStorage.setItem(version, this.toJSON())\r\n        },\r\n        toJSON() {\r\n            return JSON.stringify(this.attrs)\r\n        }\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        const attrs = window.localStorage.getItem(version)\r\n        if (attrs) {\r\n            this.model.load(JSON.parse(attrs))\r\n        } else {\r\n            const [Phases, PhasesAux] = migrateData([])\r\n            const Wells = [{\r\n                name: 'Main well',\r\n                id: 'main-well',\r\n                Items: Phases\r\n            }]\r\n\r\n            const WellsAux = [{\r\n                name: 'Aux well',\r\n                id: 'aux-well',\r\n                Items: PhasesAux\r\n            }]\r\n            this.model.load({ Wells, WellsAux })\r\n        }\r\n\r\n        this.state = {\r\n            DerrickType: this.model.get('DerrickType') || 0,\r\n            Wells: this.prepareState('Wells'),\r\n            WellsAux: this.prepareState('WellsAux'),\r\n            OperationStartDate: this.getStartOperationDate()\r\n        }\r\n    }\r\n\r\n    prepareState(key) {\r\n        const wells = deepClone(this.model.get(key) || [])\r\n        const defs = ['Well', 'Phase', 'Event']\r\n        const reCalc = [3, 3, 256]\r\n\r\n        function addRowDefinitions(row, level = 0) {\r\n            row.Def = defs[level]\r\n            row.Recalc = reCalc[level]\r\n\r\n            if (row.Items) {\r\n                row.Items.forEach(row => addRowDefinitions(row, level + 1))\r\n            }\r\n        }\r\n\r\n        wells.forEach(row => addRowDefinitions(row, 0))\r\n        return wells\r\n    }\r\n\r\n    getStartOperationDate() {\r\n        const startDate = this.model.get('OperationStartDate')\r\n\r\n        return +new Date(startDate) || +new Date()\r\n    }\r\n\r\n    onDataChanged = (newData, key) => {\r\n        console.log(key)\r\n        this.setState(\r\n            { body: newData },\r\n            () => {\r\n                this.model.set(key, newData)\r\n            }\r\n        )\r\n    }\r\n\r\n    handleOperationStartDateChange = (grid, value) => {\r\n        this.setState(\r\n            {\r\n                OperationStartDate: value\r\n            },\r\n            () => {\r\n                const auxGrid = Grids.TimeTrackerAux\r\n                if (auxGrid) {\r\n                    const row = auxGrid.GetRowById('topBarAux')\r\n                    auxGrid.SetValue(row, 'OperationStartDate', value, 1)\r\n                }\r\n\r\n                this.model.set('OperationStartDate', value)\r\n            }\r\n        )\r\n    }\r\n\r\n    handleDerrickTypeChange = (grid, value) => {\r\n        this.setState(\r\n            {\r\n                DerrickType: value\r\n            },\r\n            () => {\r\n                this.model.set('DerrickType', value)\r\n            }\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const { DerrickType, Wells, WellsAux, OperationStartDate } = this.state\r\n\r\n        return (\r\n            <div className=\"time-grid-view\">\r\n                <div id=\"timeGridTopBar\" className=\"time-grid-view__top-bar\"/>\r\n\r\n                <div className=\"time-grid-view__grids\">\r\n                    <div className=\"time-grid-view__col\">\r\n                        <TimeTrackerGrid\r\n                            id=\"TimeTrackerMain\"\r\n                            body={Wells}\r\n                            DerrickType={DerrickType}\r\n                            OperationStartDate={OperationStartDate}\r\n                            handleDerrickTypeChange={this.handleDerrickTypeChange}\r\n                            handleOperationStartDateChange={this.handleOperationStartDateChange}\r\n                            onDataChanged={(data) => this.onDataChanged(data, 'Wells')}\r\n                        />\r\n                    </div>\r\n\r\n                    {DerrickType ? <div className=\"time-grid-view__col\">\r\n                        <TimeTrackerGrid\r\n                            id=\"TimeTrackerAux\"\r\n                            isAux={true}\r\n                            body={WellsAux}\r\n                            DerrickType={DerrickType}\r\n                            OperationStartDate={OperationStartDate}\r\n                            onDataChanged={(data) => this.onDataChanged(data, 'WellsAux')}\r\n                        />\r\n                    </div> : ''}\r\n                </div>\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TimeTracker\r\n","import React, { Component } from 'react';\r\nimport './App.css'\r\nimport NavBar from './components/NavBar'\r\nimport Handsontable from './views/Handsontable'\r\nimport SpreadJS from './views/SpreadJS'\r\nimport ZingGrid from './views/ZingGrid'\r\nimport WijmoGrid from './views/WijmoGrid'\r\nimport TreeGrid from './views/TreeGrid'\r\nimport TimeTracker from './views/TimeTracker'\r\nimport { HashRouter, Route, Switch } from 'react-router-dom'\r\n\r\n\r\nclass Sample extends Component {\r\n    render() {\r\n        return (\r\n            <HashRouter>\r\n                <NavBar/>\r\n                <div className=\"views-container\">\r\n                    <Switch>\r\n                        <Route path=\"/time-tracker\">\r\n                            <TimeTracker/>\r\n                        </Route>\r\n\r\n                        <Route exact path=\"/\">\r\n                            <Handsontable/>\r\n                        </Route>\r\n                        <Route path=\"/spread-js\">\r\n                            <SpreadJS/>\r\n                        </Route>\r\n                        <Route path=\"/zing-grid\">\r\n                            <ZingGrid/>\r\n                        </Route>\r\n                        <Route path=\"/wijmo-grid\">\r\n                            <WijmoGrid/>\r\n                        </Route>\r\n\r\n                        <Route path=\"/tree-grid\">\r\n                            <TreeGrid/>\r\n                        </Route>\r\n                    </Switch>\r\n                </div>\r\n            </HashRouter>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Sample\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}