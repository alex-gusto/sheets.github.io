{"version":3,"sources":["components/NavBar.js","db/dataService.js","helpers/perfomance.js","views/Handsontable.js","helpers/flat-data.js","views/SpreadJS.js","views/ZingGrid.js","views/WijmoGrid.js","views/TreeDef.js","views/TreeGrid.js","App.js","index.js"],"names":["NavBar","className","to","exact","path","Component","this","data","Phases","Costs","fn","ts","performance","now","err","console","log","toFixed","SpreadSheetsCon","props","initTable","hot","Handsontable","tableRef","current","dataService","getPhases","nestedRows","colHeaders","rowHeaders","autoRowSize","stretchH","height","width","persistentState","nestedHeaders","label","colspan","columns","type","numericFormat","pattern","allowEmpty","correctFormat","contextMenu","bindRowsWithHeaders","manualRowMove","updateSettings","cells","row","col","prop","classes","readOnly","isTotal","instance","getDataAtRowProp","visualRow","push","start","overriddenStart","lockTimestamp","Date","join","createRef","state","time","setState","lis","document","querySelector","remove","style","color","ref","overflow","flex","fontSize","createFlatter","globalIndex","flatData","newData","groups","forEach","__children","index","count","length","GC","window","columnToLetter","column","temp","letter","String","fromCharCode","SpreadJS","initSpread","spread","Spread","Sheets","Workbook","sheetCount","options","tabStripVisible","tabNavigationVisible","tabEditable","newTabVisible","sheet","getActiveSheet","spreadNS","suspendPaint","isProtected","autoGenerateColumns","setDataSource","setRowCount","SheetArea","colHeader","addSpan","setValue","bindColumn","name","displayName","formatter","size","setColumnCount","Style","backColor","cellPadding","totalRow","getRowCount","addRows","viewport","setStyle","columnsCount","getColumnCount","groupsIndex","map","i","getCell","borderLeft","LineBorder","LineStyle","thin","borderRight","borderTop","borderBottom","columnLetter","startRow","endRow","sumFormula","setFormula","CellRange","locked","rowOutlines","group","expand","direction","Outlines","OutlineDirection","backward","autoFitColumn","resumePaint","setTimeout","assignDataToNestedGrid","cellRef","recordRef","setData","JSON","stringify","ZingGridView","ZingGrid","tabelEl","header","editor","layout","loading","loadByScroll","addEventListener","e","getRowLevel","wjGrid","isGroupRow","level","CostTableView","gridRef","costs","getCosts","filter","initialWorkerGrid","grid","workerGrid","formatItem","addHandler","panel","rowData","rows","colData","test","binding","hasChildren","itemFormatter","r","c","cell","cellType","ColumnHeader","_ts","onCellEditEnding","updateGridStyles","cssClass","isReadOnly","onFilter","value","target","toLowerCase","onMenuItemClicked","selectedValue","cmd","addRow","rowIndex","selection","dataItem","code","days","populatedDays","refresh","removeRow","parentRow","rowLevel","getParentNode","parentRowData","childIndex","findIndex","child","splice","collapseAll","collapseGroupsToLevel","expandAll","maxGroupLevel","onDraggedRow","exportExcel","book","FlexGridXlsxConverter","save","includeColumnHeaders","includeRowHeaders","sheets","saveAsync","rowAdded","deletedRow","deletingRow","filterString","keysToSearch","collectResults","acc","cost","res","key","v","some","includes","costCopy","Object","assign","children","reduce","search","replace","allowResizing","placeholder","marginBottom","onChange","itemsSource","selectionMode","childItemsPath","frozenColumns","allowSorting","allowDragging","allowAddNew","initialized","cellEditEnding","draggedRow","minWidth","dataMap","format","contextMenuOf","selectedValuePath","dropDownCssClass","itemClicked","Cfg","CfgId","ShowDeleted","SuppressCfg","AutoSort","DateStrings","ReloadChanged","MainCol","NoVScroll","Sorting","Paging","PageLength","AutoUpdate","StandardFilter","SaveExpanded","PersistentCfg","Filtered","Actions","OnRightClickCell","Def","R","Expanded","Cost","CostGroup","CanEdit","Calculated","nameCanEdit","codeCanEdit","populateDailyFormula","DefCols","C","CanFilter","LeftCols","Name","RelWidth","MinWidth","Type","CaseSensitive","Width","Enum","OnChange","Cols","Formula","Header","unit","rate","currency","populateDaily","prior","afterOffhire","Head","Kind","nameFilter","codeFilter","Foot","id","CanDelete","getBody","arr","localStorage","getItem","parse","flat","item","uid","Items","entries","day","setItem","TreeGrid","Grid","tagRef","_body","_worker","Worker","populate","Row","Value","SetValue","saveData","updateData","newRowData","postMessage","showCustomMenu","G","ShowMenu","Deleted","OnClick","DeleteRow","Selected","SelectRow","CopyRow","AddRow","event","error","debug","Promise","resolve","Debug","Layout","Data","Upload","Format","Tag","Body","Grids","OnAfterValueChanged","OnSave","b","Dispose","Sample","WijmoGrid","ReactDOM","render","StrictMode","getElementById"],"mappings":"2x2fAyGeA,E,uKAnGP,OACI,yBAAKC,UAAU,iBACX,0CACA,yBAAKA,UAAU,qBACX,kBAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,WAAvB,gBACA,kBAAC,IAAD,CAAMC,GAAG,aAAaD,UAAU,WAAhC,aACA,kBAAC,IAAD,CAAMC,GAAG,aAAaD,UAAU,WAAhC,aACA,kBAAC,IAAD,CAAMC,GAAG,cAAcD,UAAU,WAAjC,cACA,kBAAC,IAAD,CAAMC,GAAG,aAAaD,UAAU,WAAhC,cAGJ,yBAAKA,UAAU,YACX,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOE,OAAK,EAACC,KAAK,KACd,4CACA,uBAAGH,UAAU,oBAAb,wHAKA,wBAAIA,UAAU,iBACV,8DAAmC,0BAAMA,UAAU,cAAhB,MACnC,2CAAgB,0BAAMA,UAAU,cAAhB,MAChB,kDAAuB,0BAAMA,UAAU,cAAhB,MACvB,8DAAmC,0BAAMA,UAAU,YAAhB,MACnC,kDAAuB,0BAAMA,UAAU,cAAhB,MACvB,4CAAiB,0BAAMA,UAAU,cAAhB,MACjB,yCAAc,0BAAMA,UAAU,cAAhB,MACd,0CAAe,0BAAMA,UAAU,aAAhB,MACf,4CAAiB,0BAAMA,UAAU,YAAhB,MACjB,yFAA8D,0BAAMA,UAAU,cAAhB,MAC9D,6CAAkB,0BAAMA,UAAU,cAAhB,MAClB,6CAAkB,0BAAMA,UAAU,cAAhB,MAClB,0CAAe,0BAAMA,UAAU,cAAhB,MACf,4DAAiC,0BAAMA,UAAU,cAAhB,MACjC,mDAAwB,0BAAMA,UAAU,cAAhB,MACxB,0DAA+B,0BAAMA,UAAU,cAAhB,MAC/B,2DAAgC,0BAAMA,UAAU,cAAhB,MAChC,0DAA+B,0BAAMA,UAAU,cAAhB,QAGvC,kBAAC,IAAD,CAAOG,KAAK,cACR,wCACA,uBAAGH,UAAU,oBAAb,gNAIA,wBAAIA,UAAU,iBACV,8DAAmC,0BAAMA,UAAU,cAAhB,MACnC,2CAAgB,0BAAMA,UAAU,cAAhB,MAChB,kDAAuB,0BAAMA,UAAU,cAAhB,MACvB,8DAAmC,0BAAMA,UAAU,aAAhB,MACnC,kDAAuB,0BAAMA,UAAU,cAAhB,MACvB,4CAAiB,0BAAMA,UAAU,YAAhB,MACjB,yCAAc,0BAAMA,UAAU,aAAhB,MACd,0CAAe,0BAAMA,UAAU,aAAhB,MACf,4CAAiB,0BAAMA,UAAU,cAAhB,MACjB,yFAA8D,0BAAMA,UAAU,cAAhB,MAC9D,6CAAkB,0BAAMA,UAAU,aAAhB,MAClB,6CAAkB,0BAAMA,UAAU,cAAhB,MAClB,0CAAe,0BAAMA,UAAU,cAAhB,MACf,4DAAiC,0BAAMA,UAAU,cAAhB,MACjC,mDAAwB,0BAAMA,UAAU,cAAhB,MACxB,0DAA+B,0BAAMA,UAAU,cAAhB,MAC/B,2DAAgC,0BAAMA,UAAU,cAAhB,MAChC,0DAA+B,0BAAMA,UAAU,cAAhB,QAGvC,kBAAC,IAAD,CAAOG,KAAK,cACR,wCAEA,wBAAIH,UAAU,iBACV,8DAAmC,0BAAMA,UAAU,YAAhB,MACnC,2CAAgB,0BAAMA,UAAU,YAAhB,MAChB,kDAAuB,0BAAMA,UAAU,YAAhB,MACvB,8DAAmC,0BAAMA,UAAU,aAAhB,MACnC,kDAAuB,0BAAMA,UAAU,cAAhB,MACvB,4CAAiB,0BAAMA,UAAU,cAAhB,MACjB,yCAAc,0BAAMA,UAAU,aAAhB,MACd,0CAAe,0BAAMA,UAAU,aAAhB,MACf,4CAAiB,0BAAMA,UAAU,cAAhB,MACjB,yFAA8D,0BAAMA,UAAU,cAAhB,MAC9D,6CAAkB,0BAAMA,UAAU,aAAhB,MAClB,6CAAkB,0BAAMA,UAAU,cAAhB,MAClB,0CAAe,0BAAMA,UAAU,YAAhB,MACf,4DAAiC,0BAAMA,UAAU,YAAhB,MACjC,mDAAwB,0BAAMA,UAAU,cAAhB,MACxB,0DAA+B,0BAAMA,UAAU,cAAhB,MAC/B,2DAAgC,0BAAMA,UAAU,cAAhB,MAChC,0DAA+B,0BAAMA,UAAU,YAAhB,e,GA3F1CI,a,SCYN,M,WAbX,aAAe,oBACXC,KAAKC,KAAOA,E,wDAIZ,OAAOD,KAAKC,KAAKC,S,iCAIjB,OAAOF,KAAKC,KAAKE,U,eCZV,WAAUC,GACrB,IAAMC,EAAKC,YAAYC,MACvB,IACIH,IACF,MAAOI,GACLC,QAAQC,IAAIF,GAIhB,OAFWF,YAAYC,MAEVF,GAAIM,QAAQ,ICuPdC,G,gEAvPX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAoBVC,UAAY,WACR,EAAKC,IAAM,IAAIC,IAAa,EAAKC,SAASC,QAAS,CAC/CjB,KAAMkB,EAAYC,YAClBC,YAAY,EACZC,YAAY,EACZC,YAAY,EACZC,aAAa,EACbC,SAAU,MACVC,OAAQ,QACRC,MAAO,OACPC,iBAAiB,EACjBC,cAAe,CACX,CACI,CACIC,MAAO,iBACPC,QAAS,GAEb,CACID,MAAO,eACPC,QAAS,GAEb,CACID,MAAO,kBACPC,QAAS,GAEb,CACID,MAAO,SACPC,QAAS,GAEb,CACID,MAAO,aACPC,QAAS,IAGjB,CACI,OACA,OACA,MACA,SACA,MACA,SACA,MACA,MACA,MACA,UACA,SACA,QACA,MACA,sBACA,aACA,YAGRC,QAAS,CACL,CAAE/B,KAAM,QACR,CAAEA,KAAM,QACR,CACIA,KAAM,WACNgC,KAAM,UACNC,cAAe,CACXC,QAAS,UAEbC,YAAY,EACZT,MAAO,IAEX,CACI1B,KAAM,cACNgC,KAAM,UACNC,cAAe,CACXC,QAAS,UAEbC,YAAY,EACZT,MAAO,IAEX,CACI1B,KAAM,WACNgC,KAAM,UACNC,cAAe,CACXC,QAAS,UAEbC,YAAY,EACZT,MAAO,IAEX,CACI1B,KAAM,cACNgC,KAAM,UACNC,cAAe,CACXC,QAAS,UAEbC,YAAY,EACZT,MAAO,IAEX,CACI1B,KAAM,WACNgC,KAAM,UACNC,cAAe,CACXC,QAAS,UAEbC,YAAY,EACZT,MAAO,IAEX,CACI1B,KAAM,WACNgC,KAAM,UACNC,cAAe,CACXC,QAAS,UAEbC,YAAY,EACZT,MAAO,IAEX,CACI1B,KAAM,WACNgC,KAAM,UACNC,cAAe,CACXC,QAAS,UAEbC,YAAY,EACZT,MAAO,IAEX,CACI1B,KAAM,eACNgC,KAAM,UACNC,cAAe,CACXC,QAAS,UAEbC,YAAY,EACZT,MAAO,IAEX,CACI1B,KAAM,cACNgC,KAAM,UACNC,cAAe,CACXC,QAAS,UAEbC,YAAY,EACZT,MAAO,IAEX,CACI1B,KAAM,QACNgC,KAAM,OACNI,eAAe,EACfD,YAAY,GAEhB,CACInC,KAAM,MACNgC,KAAM,OACNI,eAAe,EACfD,YAAY,GAEhB,CACInC,KAAM,cACNgC,KAAM,UACNG,YAAY,EACZT,MAAO,IAEX,CACI1B,KAAM,aACNgC,KAAM,UACNG,YAAY,EACZT,MAAO,IAEX,CAAE1B,KAAM,aAGZqC,aAAa,EACbC,oBAAqB,SACrBC,eAAe,IAGnB,EAAKzB,IAAI0B,eAAe,CACpBC,MADoB,SACdC,EAAKC,EAAKC,GACZ,IACMC,EAAU,GACZC,GAAW,EAETC,EAAUhD,KAAKiD,SAASC,iBAAiBlD,KAAKmD,UAAW,WAoB/D,GAnBgBnD,KAAKiD,SAASC,iBAAiBlD,KAAKmD,UAAW,UAG3DJ,GAAW,EAEXD,EAAQM,KAAK,eACNJ,GACPD,GAAW,EAEXD,EAAQM,KAAK,eAEbN,EAAQM,KAAK,aAGbL,GACAD,EAAQM,KAAK,gBAIZJ,EAAS,CACV,IAAMK,EAAQrD,KAAKiD,SAASC,iBAAiBlD,KAAKmD,UAAW,SACvDG,EAAkBtD,KAAKiD,SAASC,iBAAiBlD,KAAKmD,UAAW,mBACjEI,GAAiB,IAAIC,OAEtB,IAAIA,KAAKH,GAASE,IAAkB,IAAIC,KAAKF,GAAmBC,IAEjET,EAAQM,KAAK,eAMrB,OArCuBpD,KAmCR+C,SAAWA,EAnCH/C,KAoCRL,UAAYmD,EAAQW,KAAK,KApCjBzD,SA7L/B,EAAKiB,SAAWyC,sBAChB,EAAKC,MAAQ,CACTC,KAAM,GALK,E,gEAUf,IAAMA,EAAOtD,EAAYN,KAAKc,WAC9Bd,KAAK6D,SAAS,CAAED,SAChB,IAAME,EAAMC,SAASC,cAAc,6BAC/BF,GAAKA,EAAIG,W,6CAIb,IAAMH,EAAMC,SAASC,cAAc,6BAC/BF,GAAKA,EAAIG,W,+BAyNb,OACI,kBAAC,WAAD,KACI,gEAAqC,0BAAMC,MAAO,CAAEC,MAAO,WAAanE,KAAK2D,MAAMC,KAA9C,OAErC,yBAAKQ,IAAKpE,KAAKiB,SACViD,MAAO,CAAEG,SAAU,SAAUC,KAAM,WAAYC,SAAU,e,GAlPhDxE,cCgBfyE,MAvBf,WACI,IAAIC,GAAe,EAEnB,OAAO,SAASC,EAASzE,GAAkC,IAA5B0E,EAA2B,uDAAjB,GAAIC,EAAa,uDAAJ,GAelD,OAdA3E,EAAK4E,SAAQ,SAAAlC,GACTgC,EAAQvB,KAAKT,GACb8B,IAEI9B,EAAImC,aACJF,EAAOxB,KAAK,CACR2B,MAAON,EACPO,MAAOrC,EAAImC,WAAWG,SAE1BP,EAAS/B,EAAImC,WAAYH,EAASC,UAC3BjC,EAAImC,eAIZ,CAAE7E,KAAM0E,EAASC,YCZ1BM,G,OAAKC,OAAOD,IAElB,SAASE,EAAeC,GAEpB,IADA,IAAIC,EAAMC,EAAS,GACZF,EAAS,GACZC,GAAQD,EAAS,GAAK,GACtBE,EAASC,OAAOC,aAAaH,EAAO,IAAMC,EAC1CF,GAAUA,EAASC,EAAO,GAAK,GAEnC,OAAOC,E,IAGUG,E,kDACjB,WAAY7E,GAAQ,IAAD,8BACf,cAAMA,IAeV8E,WAAa,WACT,IAAMC,EAAS,IAAIV,EAAGW,OAAOC,OAAOC,SAAS,EAAK9E,SAASC,QAAS,CAAE8E,WAAY,IAClFJ,EAAOK,QAAQC,iBAAkB,EACjCN,EAAOK,QAAQE,sBAAuB,EACtCP,EAAOK,QAAQG,aAAc,EAC7BR,EAAOK,QAAQI,eAAgB,EAC/B,IAAMC,EAAQV,EAAOW,iBACfC,EAAWtB,EAAGW,OAAOC,OAE3BQ,EAAMG,eACN,IAVe,EAUEjC,GACQE,CAASvD,EAAYC,aAAtCnB,EAXO,EAWPA,KAAM2E,EAXC,EAWDA,OAEd0B,EAAML,QAAQS,aAAc,EAC5BJ,EAAMK,qBAAsB,EAC5BL,EAAMM,cAAc3G,GAEpBqG,EAAMO,YAAY,EAAGL,EAASM,UAAUC,WAExCT,EAAMU,QAAQ,EAAG,EAAG,EAAG,EAAGR,EAASM,UAAUC,WAC7CT,EAAMW,SAAS,EAAG,EAAG,iBAAkBT,EAASM,UAAUC,WAE1DT,EAAMU,QAAQ,EAAG,EAAG,EAAG,EAAGR,EAASM,UAAUC,WAC7CT,EAAMW,SAAS,EAAG,EAAG,WAAYT,EAASM,UAAUC,WAEpDT,EAAMU,QAAQ,EAAG,EAAG,EAAG,EAAGR,EAASM,UAAUC,WAC7CT,EAAMW,SAAS,EAAG,EAAG,YAAaT,EAASM,UAAUC,WAErDT,EAAMU,QAAQ,EAAG,GAAI,EAAG,EAAGR,EAASM,UAAUC,WAC9CT,EAAMW,SAAS,EAAG,GAAI,SAAUT,EAASM,UAAUC,WAEnDT,EAAMU,QAAQ,EAAG,GAAI,EAAG,EAAGR,EAASM,UAAUC,WAC9CT,EAAMW,SAAS,EAAG,GAAI,aAAcT,EAASM,UAAUC,WAGvDT,EAAMY,WAAW,EAAG,CAAEC,KAAM,OAAQC,YAAa,SACjDd,EAAMY,WAAW,EAAG,CAAEC,KAAM,OAAQC,YAAa,SACjDd,EAAMY,WAAW,EAAG,CAAEC,KAAM,WAAYC,YAAa,MAAOC,UAAW,OAAQC,KAAM,KACrFhB,EAAMY,WAAW,EAAG,CAAEC,KAAM,cAAeC,YAAa,SAAUC,UAAW,OAAQC,KAAM,KAC3FhB,EAAMY,WAAW,EAAG,CAAEC,KAAM,WAAYC,YAAa,MAAOC,UAAW,OAAQC,KAAM,KACrFhB,EAAMY,WAAW,EAAG,CAAEC,KAAM,cAAeC,YAAa,SAAUC,UAAW,OAAQC,KAAM,KAC3FhB,EAAMY,WAAW,EAAG,CAAEC,KAAM,WAAYC,YAAa,MAAOC,UAAW,OAAQC,KAAM,KACrFhB,EAAMY,WAAW,EAAG,CAAEC,KAAM,WAAYC,YAAa,MAAOC,UAAW,OAAQC,KAAM,KACrFhB,EAAMY,WAAW,EAAG,CAAEC,KAAM,eAAgBC,YAAa,UAAWC,UAAW,OAAQC,KAAM,KAC7FhB,EAAMY,WAAW,EAAG,CAAEC,KAAM,cAAeC,YAAa,SAAUC,UAAW,OAAQC,KAAM,KAC3FhB,EAAMY,WAAW,GAAI,CAAEC,KAAM,QAASC,YAAa,QAASC,UAAW,qBACvEf,EAAMY,WAAW,GAAI,CAAEC,KAAM,MAAOC,YAAa,MAAOC,UAAW,qBACnEf,EAAMY,WAAW,GAAI,CAAEC,KAAM,cAAeC,YAAa,eAAgBC,UAAW,OAAQC,KAAM,MAClGhB,EAAMY,WAAW,GAAI,CAAEC,KAAM,aAAcC,YAAa,aAAcE,KAAM,MAC5EhB,EAAMY,WAAW,GAAI,CAAEC,KAAM,WAAYC,YAAa,UAAWE,KAAM,MACvEhB,EAAMiB,eAAe,IAErB,IAAMrD,EAAQ,IAAIsC,EAASgB,MAC3BtD,EAAMuD,UAAY,UAClBvD,EAAMwD,YAAc,MAGpB,IAAMC,EAAWrB,EAAMsB,cACvBtB,EAAMuB,QAAQvB,EAAMsB,YAAYpB,EAASM,UAAUgB,UAAW,GAC9DxB,EAAMyB,SAASJ,EAAU,EAAGzD,EAAOsC,EAASM,UAAUgB,UACtDxB,EAAMW,SAASU,EAAU,EAAG,SAE5B,IAAMK,EAAe1B,EAAM2B,iBACrBC,EAActD,EAAOuD,KAAI,qBAAGpD,MAAoB,KAMtDH,EAAOC,SAAQ,YAEX,IAFkC,IAJjBU,EAIHR,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MACjBoD,EAAIJ,EACDI,GAAK,GAAG,CASX,GARA9B,EAAMyB,SAAShD,EAAOqD,EAAGlE,EAAOsC,EAASM,UAAUgB,UACtCxB,EAAM+B,QAAQtD,EAAOqD,EAAG5B,EAASM,UAAUgB,UAEnDQ,WAAW,IAAI9B,EAAS+B,WAAW,OAAQ/B,EAASgC,UAAUC,OAC9DC,YAAY,IAAIlC,EAAS+B,WAAW,OAAQ/B,EAASgC,UAAUC,OAC/DE,UAAU,IAAInC,EAAS+B,WAAW,OAAQ/B,EAASgC,UAAUC,OAC7DG,aAAa,IAAIpC,EAAS+B,WAAW,OAAQ/B,EAASgC,UAAUC,OAEjEL,EAAI,GAAKA,EAAI,EAAG,CAChB,IAAMS,EAAezD,EAAegD,EAAI,GAClCU,EAAW/D,EAAQ,EACnBgE,EAAShE,EAAQC,EAAQ,EACzBgE,EAAU,eAAWH,GAAX,OAA0BC,EAA1B,YAAsCD,GAAtC,OAAqDE,EAArD,KAChBzC,EAAM2C,WAAWlE,EAAOqD,EAAGY,GAC3B1C,EAAM2C,WAAWtB,EAAUS,EAA3B,eApBF,GAAN,OADiB7C,EAqByCsD,GApB1D,OAAmBX,EAAYzE,KAAZ,WAAqB8B,KAoBhC,MAEJ6C,IAIQ,IAAI5B,EAAS0C,UAAU5C,EAAOvB,EAAQ,EAAG,EAAGC,EAAOgD,GAC3DmB,QAAO,GAGX7C,EAAM8C,YAAYC,MAAMtE,EAAQ,EAAGC,GACnCsB,EAAM8C,YAAYE,OAAO,GAAG,GAC5BhD,EAAM8C,YAAYG,UAAU/C,EAASgD,SAASC,iBAAiBC,aAKnEpD,EAAMqD,cAAc,GACpBrD,EAAMqD,cAAc,IACpBrD,EAAMqD,cAAc,IACpBrD,EAAMsD,eAvHN,EAAK3I,SAAWyC,sBAChB,EAAKC,MAAQ,CACTC,KAAM,GALK,E,gEASE,IAAD,OAChBiG,YAAW,WACP,IAAMjG,EAAOtD,EAAY,EAAKqF,YAC9B,EAAK9B,SAAS,CAAED,c,+BAkHpB,OACI,kBAAC,WAAD,KACI,4DAAiC,0BAAMM,MAAO,CAAEC,MAAO,WAAanE,KAAK2D,MAAMC,KAA9C,OACjC,yBAAKQ,IAAKpE,KAAKiB,SAAUiD,MAAO,CAAExC,OAAQ,OAAQC,MAAO,e,GAlInC5B,a,gBCXtCoF,OAAO2E,uBAAyB,SAAC/E,EAAOgF,EAASC,GACzCD,GACAA,EAAQ/F,cAAc,aAAaiG,QAAQC,KAAKC,UAAUpF,K,IAG7CqF,E,kDACjB,WAAYvJ,GAAQ,IAAD,8BACf,cAAMA,IAWVC,UAAY,WACR,IAAMT,EAAK8E,OAAO7E,YAAYC,MAEtBN,EADSuE,GACAE,CAASvD,EAAYC,aAA9BnB,KACK,IAAIoK,IAAS,EAAKC,QAAQpJ,QAAS,CAC5CjB,OACA+B,QAAS,CACL,CACI+C,MAAO,OACPpD,MAAO,IAEX,CACIoD,MAAO,QAEX,CACIA,MAAO,WACP9C,KAAM,SACNsI,OAAQ,MACR5I,MAAO,IAEX,CACIoD,MAAO,cACP9C,KAAM,SACNsI,OAAQ,SACR5I,MAAO,IAEX,CACIoD,MAAO,WACP9C,KAAM,SACNsI,OAAQ,MACR5I,MAAO,IAEX,CACIoD,MAAO,WACP9C,KAAM,SACNsI,OAAQ,MACR5I,MAAO,IAEX,CACIoD,MAAO,WACP9C,KAAM,SACNsI,OAAQ,MACR5I,MAAO,IAEX,CACIoD,MAAO,WACP9C,KAAM,SACNsI,OAAQ,MACR5I,MAAO,IAEX,CACIoD,MAAO,eACP9C,KAAM,SACNsI,OAAQ,UACR5I,MAAO,IAEX,CACIoD,MAAO,cACP9C,KAAM,SACNsI,OAAQ,SACR5I,MAAO,KAGf6I,QAAQ,EACRC,OAAQ,MACRC,SAAS,EACThJ,OAAQ,QACRiJ,cAAc,IAGbC,iBAAiB,cAAc,SAACC,GACjC,IACMjH,GADKuB,OAAO7E,YAAYC,MACXF,GAAIM,QAAQ,GAC/B,EAAKkD,SAAS,CAAED,aAnFpB,EAAK0G,QAAU5G,sBACf,EAAKC,MAAQ,CACTC,KAAM,GAJK,E,gEASf5D,KAAKc,c,+BAiFL,OACI,kBAAC,WAAD,KACI,6DAAkC,0BAAMoD,MAAO,CAAEC,MAAO,WAAanE,KAAK2D,MAAMC,KAA9C,OAClC,yBAAKQ,IAAKpE,KAAKsK,e,GA9FWvK,a,2DCG1C,SAAS+K,EAAYnI,GACjB,OALJ,SAAoBA,GAChB,OAAOA,aAAeoI,WAIfC,CAAWrI,GAAOA,EAAIsI,OAAS,E,IAoS3BC,E,kDA1QX,WAAYrK,GAAQ,IAAD,8BACf,cAAMA,IARVsK,QAAUzH,sBAOS,EANnBC,MAAQ,CACJyH,MAAOjK,EAAYkK,WACnBC,OAAQ,GACR1H,KAAM,GAGS,EAsBnB2H,kBAAoB,SAACC,GACjB,EAAKC,WAAaD,EAGlBA,EAAKE,WAAWC,YAAW,SAACH,EAAMX,GAC9B,GAAIA,EAAEe,QAAUJ,EAAK9I,MAArB,CADoC,IAK5BC,EAAakI,EAAblI,IAAKC,EAAQiI,EAARjI,IACPiJ,EAAUL,EAAKM,KAAKnJ,GACpBoJ,EAAUP,EAAKxJ,QAAQY,GAMzB,OAAOoJ,KAAKD,EAAQE,UAAaJ,EAAQK,gBAKjDV,EAAKW,cAAgB,SAACP,EAAOQ,EAAGC,EAAGC,GAC3BV,EAAMW,SAAaxB,WAAgByB,cAI3C,IACM5I,GADKuB,OAAO7E,YAAYC,MACX,EAAKkM,KAAK9L,QAAQ,GACrC,EAAKkD,SAAS,CAAED,UAnDD,EAsDnB8I,iBAAmB,SAAClB,EAAMX,GACtBpK,QAAQC,IAAI,WAvDG,EA0DnBiM,iBAAmB,WACf,EAAKlB,WAAWK,KAAKjH,SAAQ,SAAClC,GACrBA,EAAIuJ,cACLvJ,EAAIiK,SAAW,sBAEnBjK,EAAIkK,WAAalK,EAAIuJ,gBA/DV,EAmEnBY,SAAW,YAA4B,IAAfC,EAAc,EAAxBC,OAAUD,MACpB,EAAKlJ,UAAS,WACV,IAAMyH,EAASyB,EAAME,cACf7B,EAAQjK,EAAYkK,WAE1B,MAAO,CACHD,MAAO,EAAKE,OAAOA,EAAQF,GAC3BE,aAEL,WACC,EAAKqB,uBA7EM,EAkHnBO,kBAAoB,YAAwB,IAArBC,EAAoB,EAApBA,cACbC,EAAM,EAAKD,GACE,oBAARC,EAKXA,IAJI3M,QAAQC,IAAI,8BAA+ByM,IArHhC,EA4HnBE,OAAS,WAAO,IACCC,EAAa,EAAK7B,WAAW8B,UAAlC5K,IAEFkJ,EADW,EAAKJ,WAAdK,KACawB,GAAUE,SAE/B,EAAK3J,UAAS,YAAgB,IAAbuH,EAAY,EAAZA,MAQb,OAPKS,EAAQ/G,aACT+G,EAAQ/G,WAAa,IAGzB+G,EAAQ/G,WAAW1B,KAAK,CAAE+D,KAAM,GAAIsG,KAAM,GAAIC,KAAM,GAAIC,cAAe,KAGhE,CAAEvC,MADK,YAAOA,OAEtB,WACC,EAAKK,WAAWmC,UAChB,EAAKjB,uBA5IM,EAgJnBkB,UAAY,WAAO,IACFP,EAAa,EAAK7B,WAAW8B,UAAlC5K,IAEFA,EADW,EAAK8I,WAAdK,KACSwB,GACXQ,EA3Kd,SAAuBnL,GACnB,IAAImL,EAAY,KACVC,EAAWjD,EAAYnI,GAC7B,IAAkB,IAAdoL,EAAJ,CAEA,IAAI3F,EAAIzF,EAAIoC,MACZ,GACIqD,IACA0F,EAAYnL,EAAI6I,KAAKM,KAAK1D,SACrB0C,EAAYgD,IAAcC,GAEnC,OAAOD,GAgKeE,CAAcrL,GAE5BmL,GACA,EAAKjK,UAAS,YAAgB,IAAbuH,EAAY,EAAZA,MACP6C,EAAgBH,EAAUN,SAC1B3B,EAAUlJ,EAAI6K,SACdU,EAAaD,EAAcnJ,WAAWqJ,WAAU,SAAAC,GAAK,OAAIA,IAAUvC,KAMzE,OAJIqC,GAAc,GACdD,EAAcnJ,WAAWuJ,OAAOH,EAAY,GAGzC,CAAE9C,MAAM,YAAKA,OACrB,WACC,EAAKK,WAAWmC,UAChB,EAAKjB,uBAnKE,EAwKnB2B,YAAc,WACV,EAAK7C,WAAW8C,sBAAsB,IAzKvB,EA4KnBC,UAAY,WACR,EAAK/C,WAAW8C,sBAAsB,EAAK9C,WAAWK,KAAK2C,cAAgB,IA7K5D,EAiLnBC,aAAe,SAAClD,EAAMX,GAClBpK,QAAQC,IAAImK,IAlLG,EAqLnB8D,YAAc,WACV,IAAMC,EAAOC,wBAAsBC,KAAK,EAAKrD,WAAY,CACrDsD,sBAAsB,EACtBC,mBAAmB,IAGvBJ,EAAKK,OAAO,GAAG9H,KAAO,gBACtByH,EAAKM,UAAU,yBA1Lf,EAAKzC,IAAMtH,OAAO7E,YAAYC,MAFf,E,gEAKE,IAAD,OAChBP,KAAK2M,mBAEL3M,KAAKyL,WAAW8C,sBAAsB,GACtCvO,KAAKyL,WAAW0D,SAASxD,YAAW,WAChC,EAAKgB,sBAGT3M,KAAKyL,WAAW2D,WAAWzD,YAAW,SAACH,EAAMX,GACzC,EAAK8B,sBAGT3M,KAAKyL,WAAW4D,YAAY1D,YAAW,SAACH,EAAMX,S,6BAgE3CyE,EAAclE,GACjB,GAAqB,KAAjBkE,EAAqB,OAAOlE,EAChC,IAAMmE,EAAe,CAAC,OAAQ,QAqB9B,SAASC,EAAeC,EAAKC,GACzB,IAAMC,EApBK,SAAAD,GAEX,GADeH,EAAapH,KAAI,SAAAyH,GAAG,OAAIF,EAAKE,MAAMtE,QAAO,SAAAuE,GAAC,OAAIA,KACnDC,MAAK,SAAAD,GAAC,OAAIA,EAAE5C,cAAc8C,SAAST,MAC1C,OAAOI,EAGX,GAAIA,EAAK5K,YAAc4K,EAAK5K,WAAWG,OAAQ,CAC3C,IAAM+K,EAAWC,OAAOC,OAAO,GAAIR,GAC7BS,EAAWT,EAAK5K,WAAWsL,OAAOZ,EAAgB,IAExD,GAAIW,EAASlL,OAET,OADA+K,EAASlL,WAAaqL,EACfH,EAIf,OAAO,KAIKK,CAAOX,GAGnB,OAFIC,GAAKF,EAAIrM,KAAKuM,GAEXF,EAGX,OAAOrE,EAAMgF,OAAOZ,EAAgB,M,+BAgF9B,IAAD,EAC2BxP,KAAK2D,MAA7ByH,EADH,EACGA,MAAOE,EADV,EACUA,OAAQ1H,EADlB,EACkBA,KACjB5B,EAAU,CAAC,kBAAmB,kBAAmB,kBAAmB,mBAAmBmG,KAAI,SAACyH,GAAD,OAC7F,kBAAC,IAAD,CACI3D,QAAS2D,EACTrF,OAAQqF,EAAIU,QAAQ,QAAS,IAC7BV,IAAKA,EACLW,eAAe,OAGvB,OACI,yBAAK5Q,UAAU,aACX,8DAAmC,0BAAMuE,MAAO,CAAEC,MAAO,WAAaP,EAAnC,OAEnC,2BAAO3B,KAAK,OAAO8K,MAAOzB,EACnBkF,YAAY,SACZ7Q,UAAU,eAAeuE,MAAO,CAAEuM,aAAc,QAChDC,SAAU1Q,KAAK8M,WACtB,kBAAC,IAAD,CACI1I,IAAKpE,KAAKmL,QACVwF,YAAavF,EACbwF,cAAc,MACdjK,qBAAqB,EACrBkK,eAAe,aACfC,cAAe,EACfjE,YAAY,EACZkE,cAAc,EACdC,cAAc,OACdC,aAAa,EAEbC,YAAalR,KAAKuL,kBAClB4F,eAAgBnR,KAAK0M,iBACrB0E,WAAYpR,KAAK0O,cAEjB,kBAAC,IAAD,CAAgBzC,QAAQ,OAAO1B,OAAO,OAAO5I,MAAM,KAAK0P,SAAU,IAClDxE,YAAY,IAC5B,kBAAC,IAAD,CAAgBZ,QAAQ,OAAO1B,OAAO,SACtC,kBAAC,IAAD,CAAgB0B,QAAQ,OAAO1B,OAAO,OACtB+G,QAAS,CAAC,WAAY,aAAc,gBACpD,kBAAC,IAAD,CAAgBrF,QAAQ,OAAO1B,OAAO,OACtB+G,QAAS,CAAC,WAAY,WAAY,YAAa,iBAC/D,kBAAC,IAAD,CAAgBrF,QAAQ,OAAO1B,OAAO,SACtC,kBAAC,IAAD,CAAgB0B,QAAQ,WAAW1B,OAAO,WAC1B+G,QAAS,CAAC,MAAO,MAAO,MAAO,MAAO,SACtD,kBAAC,IAAD,CAAgBrF,QAAQ,gBAAgB1B,OAAO,iBAAiBgH,OAAO,OACvE,kBAAC,IAAD,CAAgBtF,QAAQ,QAAQ1B,OAAO,kBACtCvI,EACD,kBAAC,IAAD,CAAgBiK,QAAQ,eAAe1B,OAAO,mBAGlD,kBAAC,IAAD,CAAMiH,cAAexR,KAAKmL,QACpBZ,OAAO,eACPkH,kBAAkB,MAClBC,iBAAiB,WACjBC,YAAa3R,KAAKkN,mBAEpB,kBAAC,IAAD,CAAUE,IAAI,UAAd,WAGA,kBAAC,IAAD,CAAUA,IAAI,aAAd,cAGA,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAUA,IAAI,eAAd,gBAGA,kBAAC,IAAD,CAAUA,IAAI,aAAd,cACA,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAUA,IAAI,eAAd,sB,GA3QQrN,a,SClCb,GACX6R,IAAK,CACDC,MAAO,QACPC,YAAa,IACbC,YAAa,IACbC,SAAU,IACVC,YAAa,IACbC,cAAe,IACfC,QAAS,OACTC,UAAW,EACXC,QAAS,EACTC,OAAQ,EACRC,WAAY,EACZC,WAAY,EACZC,eAAgB,EAChBC,aAAc,EACdC,cAAe,EACfC,SAAU,GAEdC,QAAS,CACLC,iBAAkB,0CAEtBC,IAAK,CACDC,EAAG,CACCC,SAAU,GAEdC,KAAM,GACNC,UAAW,CACPC,QAAS,EACTC,WAAY,EACZC,YAAa,EACbC,YAAa,EACbC,qBAAsB,UAG9BC,QAAS,CACLC,EAAG,CACCC,UAAW,IAGnBC,SAAU,CACN,CAAEC,KAAM,OAAQC,SAAU,EAAGC,SAAU,IAAKC,KAAM,OAAQL,UAAW,EAAGM,cAAe,GACvF,CAAEJ,KAAM,OAAQF,UAAW,EAAGM,cAAe,GAC7C,CACIJ,KAAM,OAAQK,MAAO,KACrBF,KAAM,OACNG,KAAM,CAAC,YAAa,aAAc,cAAc1Q,KAAK,MAEzD,CACIoQ,KAAM,OACNK,MAAO,KACPF,KAAM,OACNG,KAAM,CAAC,YAAa,WAAY,YAAa,eAAe1Q,KAAK,MAErE,CAAEoQ,KAAM,OAAQK,MAAO,MACvB,CAAEL,KAAM,WAAYK,MAAO,KAAMF,KAAM,OAAQG,KAAM,CAAC,OAAQ,MAAO,MAAO,MAAO,OAAO1Q,KAAK,MAC/F,CAAEoQ,KAAM,gBAAiBK,MAAO,KAAME,SAAU,8CAEpDC,KAAM,CACF,CAAER,KAAM,SACR,CACIA,KAAM,iBACNS,QAAS,wEACTlB,QAAS,GAEb,CACIS,KAAM,oBAEV,CAAEA,KAAM,kBACR,CAAEA,KAAM,oBACR,CAAEA,KAAM,kBACR,CAAEA,KAAM,iBAEZU,OAAQ,CACJpN,KAAM,OACNsG,KAAM,OACNxL,KAAM,OACNuS,KAAM,OACNC,KAAM,OACNC,SAAU,WACVC,cAAe,iBACfC,MAAO,gBACP,iBAAkB,aAClB,mBAAoB,eACpB,iBAAkB,aAClB,mBAAoB,eACpB,iBAAkB,aAClBC,aAAc,iBAGlBC,KAAM,CACF,CACIC,KAAM,SACNC,WAAY,GACZC,WAAY,KAGpBC,KAAM,CACF,CACIC,GAAI,OACJC,UAAW,IACXhC,QAAS,IACTC,WAAY,IACZlM,KAAM,eACNqM,qBAAsB,W,SC3DlC,IAAM6B,EAAU,WACZ,IAtCiBC,EAsCbrV,EAAOkF,OAAOoQ,aAAaC,QAxCvB,UAyCR,OAAIvV,EAAaiK,KAAKuL,MAAMxV,IAE5BA,GAxCAqV,EAAMA,GAAOnU,EAAYkK,YAAc,IAiC5BlD,KA/BX,SAASuN,EAAKC,GACVA,EAAKR,GAAKS,cACND,EAAK7Q,YAAc6Q,EAAK7Q,WAAWG,SACnC0Q,EAAK5C,IAAM,YACX4C,EAAKE,MAAQF,EAAK7Q,WAAWqD,IAAIuN,IAGrC,IAAMhI,EAAOuC,OAAO6F,QAAQH,EAAKjI,MAOjC,GANIA,EAAKzI,QACLyI,EAAK7I,SAAQ,YAAmB,IAAD,mBAAhBkR,EAAgB,KAAXhJ,EAAW,KAC3B4I,EAAK,OAAD,OAAQI,IAAShJ,KAIzB4I,EAAKhI,cAAe,CACpB,IAAMA,EAAgBsC,OAAO6F,QAAQH,EAAKhI,eACtCA,EAAc1I,QACd0I,EAAc9I,SAAQ,YAAmB,IAAD,mBAAhBkR,EAAgB,KAAXhJ,EAAW,KACpC4I,EAAK,gBAAD,OAAiBI,IAAShJ,KAU1C,cALO4I,EAAK7Q,kBACL6Q,EAAKtM,aACLsM,EAAKjI,YACLiI,EAAKhI,cAELgI,KAWXxQ,OAAOoQ,aAAaS,QA5CZ,SA4C4B9L,KAAKC,UAAUlK,IAE5CA,IAmHIgW,E,4MA/GXC,KAAO,K,EACPC,OAASzS,sB,EACT0S,MAAQf,I,EACRgB,QAAU,IAAIC,OAAO,+B,EAiDrBC,SAAW,SAACL,EAAMM,EAAKC,GACnB,CAAC,aAAc,eAAgB,cAAc5R,SAAQ,SAAA+K,GACjDsG,EAAKQ,SAASF,EAAd,uBAAmC5G,GAAO6G,EAAO,O,EAIzDE,SAAW,SAAChS,GACRQ,OAAOoQ,aAAaS,QA7GhB,SA6GgC9L,KAAKC,UAAUxF,IACnD,EAAKyR,MAAQzR,G,EAGjBiS,WAAa,SAACpL,EAAM7I,EAAKC,GACrB,IAAMiU,EAAa,CAAE1B,GAAIxS,EAAIwS,IAC7B0B,EAAWjU,GAAOD,EAAIC,GACtB,EAAKyT,QAAQS,YAAY,CAAC,SAAUD,EAAY,EAAKT,S,EAGzDW,eAAiB,SAACpU,EAAKC,GACnB,IAAIoU,EAAI,EAAKd,KA6Bb,OA5BA,EAAKA,KAAKe,SAAStU,EAAKC,EAAK,CACzBiT,MAAO,CACH,CACIhC,KAAMlR,EAAIuU,QAAU,eAAiB,aACrCC,QAAS,WACLH,EAAEI,UAAUzU,EAAKA,EAAIuU,QAAU,EAAI,KAG3C,CACIrD,KAAMlR,EAAI0U,SAAW,eAAiB,aACtCF,QAAS,WACLH,EAAEM,UAAU3U,KAGpB,CACIkR,KAAM,WACNsD,QAAS,WACLH,EAAEO,QAAQ5U,EAAK,KAAMA,EAAK,EAAG,KAGrC,CACIkR,KAAM,cACNsD,QAAS,WACLH,EAAEQ,OAAO,KAAM7U,EAAK,QAK7B,G,kEA9FU,IAAD,OAChB3C,KAAKqW,QAAQzL,iBAAiB,WAAW,SAACC,GAAO,IAAD,cACnBA,EAAE5K,KADiB,GACrCwX,EADqC,KAC9B9S,EAD8B,KAG5C,OAAQ8S,GACJ,IAAK,UACD,EAAKd,SAAShS,GACd,MACJ,IAAK,QACDlE,QAAQiX,MAAM,iBAAkB/S,GAChC,MACJ,QACIlE,QAAQkX,MAAM,gCAI1B,IAAIC,SAAQ,SAAAC,GACR,EAAK3B,KAAO/Q,OAAO8Q,SAAS,CACxB6B,MAAO,GACPC,OAAQ,CACJC,KAAMvN,GAEVwN,OAAQ,CACJC,OAAQ,OACRlE,KAAM,CAAC,WACPmE,IAAK,QAETH,KAAM,CACFA,KAAM,CACFI,KAAM,CACF,EAAKhC,UAIlB,EAAKD,OAAOjV,QAAS,CAAEnB,UAAW,IAErCoF,OAAOkT,MAAMC,oBAAsB,EAAK1B,WACxCzR,OAAOkT,MAAME,OAAS,SAAC/M,EAAM7I,EAAK6V,GAC9B/X,QAAQC,IAAIiC,EAAK6V,S,6CAMzBxY,KAAKkW,KAAKuC,Y,+BAsDV,OACI,kBAAC,WAAD,KACI,yBAAKrU,IAAKpE,KAAKmW,c,GA1GRpW,aCdR2Y,E,uKA5BP,OACI,kBAAC,IAAD,KACI,kBAAC,EAAD,MACA,yBAAK/Y,UAAU,mBACX,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOE,OAAK,EAACC,KAAK,KACd,kBAACkB,EAAD,OAEJ,kBAAC,IAAD,CAAOlB,KAAK,cACR,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAOA,KAAK,cACR,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAOA,KAAK,eACR,kBAAC6Y,EAAD,OAGJ,kBAAC,IAAD,CAAO7Y,KAAK,cACR,kBAAC,EAAD,c,GArBPC,aCPrB6Y,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEF/U,SAASgV,eAAe,W","file":"static/js/main.0bc8b4fa.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './NavBar.css'\r\nimport { Link, Route, Switch } from 'react-router-dom'\r\n\r\nclass NavBar extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"navigationBar\">\r\n                <h3>Navigation</h3>\r\n                <nav className=\"navigationBarList\">\r\n                    <Link to=\"/\" className=\"navItem\">Handsontable</Link>\r\n                    <Link to=\"/spread-js\" className=\"navItem\">Spread JS</Link>\r\n                    <Link to=\"/zing-grid\" className=\"navItem\">Zing Grid</Link>\r\n                    <Link to=\"/wijmo-grid\" className=\"navItem\">Wijmo Grid</Link>\r\n                    <Link to=\"/tree-grid\" className=\"navItem\">Tree Grid</Link>\r\n                </nav>\r\n\r\n                <div className=\"features\">\r\n                    <Switch>\r\n                        <Route exact path=\"/\">\r\n                            <h4>Handsontable</h4>\r\n                            <p className=\"features-content\">\r\n                                Supports most of the features. Customizable, open-source, good support community, and not bad DOCs.\r\n                                Bad performance.\r\n                            </p>\r\n\r\n                            <ul className=\"features-list\">\r\n                                <li>Copy paste subtable from excel <span className=\"text-green\">+</span></li>\r\n                                <li>Nested rows <span className=\"text-green\">+</span></li>\r\n                                <li>Fixed columns rows <span className=\"text-green\">+</span></li>\r\n                                <li>Remember collapse expand state <span className=\"text-red\">-</span></li>\r\n                                <li>Styling, Read only <span className=\"text-green\">+</span></li>\r\n                                <li>Placeholders <span className=\"text-green\">+</span></li>\r\n                                <li>Tool tips <span className=\"text-green\">+</span></li>\r\n                                <li>PDF export <span className=\"text-blue\">?</span></li>\r\n                                <li>Excel export <span className=\"text-red\">-</span></li>\r\n                                <li>Filtering (eg. for user search, partial sums, pdf export) <span className=\"text-green\">+</span></li>\r\n                                <li>Rotated cells <span className=\"text-green\">+</span></li>\r\n                                <li>Spanned cells <span className=\"text-green\">+</span></li>\r\n                                <li>Validation <span className=\"text-green\">+</span></li>\r\n                                <li>Sums (light weight formulas) <span className=\"text-green\">+</span></li>\r\n                                <li>Sub table selection <span className=\"text-green\">+</span></li>\r\n                                <li>Customisable context menus <span className=\"text-green\">+</span></li>\r\n                                <li>Moving one ore several rows <span className=\"text-green\">+</span></li>\r\n                                <li>Copy cut delete operations <span className=\"text-green\">+</span></li>\r\n                            </ul>\r\n                        </Route>\r\n                        <Route path=\"/spread-js\">\r\n                            <h4>SpreadJS</h4>\r\n                            <p className=\"features-content\">\r\n                                Many features need to be created from scratch. It is Excel in WEB and it works like real excel. Formulas work very well and fast. No need to change DataLayer from Handsontable. Good performance, wide API.\r\n                            </p>\r\n\r\n                            <ul className=\"features-list\">\r\n                                <li>Copy paste subtable from excel <span className=\"text-green\">+</span></li>\r\n                                <li>Nested rows <span className=\"text-green\">+</span></li>\r\n                                <li>Fixed columns rows <span className=\"text-green\">+</span></li>\r\n                                <li>Remember collapse expand state <span className=\"text-blue\">?</span></li>\r\n                                <li>Styling, Read only <span className=\"text-green\">+</span></li>\r\n                                <li>Placeholders <span className=\"text-red\">-</span></li>\r\n                                <li>Tool tips <span className=\"text-blue\">?</span></li>\r\n                                <li>PDF export <span className=\"text-blue\">?</span></li>\r\n                                <li>Excel export <span className=\"text-green\">+</span></li>\r\n                                <li>Filtering (eg. for user search, partial sums, pdf export) <span className=\"text-green\">+</span></li>\r\n                                <li>Rotated cells <span className=\"text-blue\">?</span></li>\r\n                                <li>Spanned cells <span className=\"text-green\">+</span></li>\r\n                                <li>Validation <span className=\"text-green\">+</span></li>\r\n                                <li>Sums (light weight formulas) <span className=\"text-green\">+</span></li>\r\n                                <li>Sub table selection <span className=\"text-green\">+</span></li>\r\n                                <li>Customisable context menus <span className=\"text-green\">+</span></li>\r\n                                <li>Moving one ore several rows <span className=\"text-green\">+</span></li>\r\n                                <li>Copy cut delete operations <span className=\"text-green\">+</span></li>\r\n                            </ul>\r\n                        </Route>\r\n                        <Route path=\"/zing-grid\">\r\n                            <h4>ZingGrid</h4>\r\n\r\n                            <ul className=\"features-list\">\r\n                                <li>Copy paste subtable from excel <span className=\"text-red\">-</span></li>\r\n                                <li>Nested rows <span className=\"text-red\">-</span></li>\r\n                                <li>Fixed columns rows <span className=\"text-red\">-</span></li>\r\n                                <li>Remember collapse expand state <span className=\"text-blue\">?</span></li>\r\n                                <li>Styling, Read only <span className=\"text-green\">+</span></li>\r\n                                <li>Placeholders <span className=\"text-green\">+</span></li>\r\n                                <li>Tool tips <span className=\"text-blue\">?</span></li>\r\n                                <li>PDF export <span className=\"text-blue\">?</span></li>\r\n                                <li>Excel export <span className=\"text-green\">+</span></li>\r\n                                <li>Filtering (eg. for user search, partial sums, pdf export) <span className=\"text-green\">+</span></li>\r\n                                <li>Rotated cells <span className=\"text-blue\">?</span></li>\r\n                                <li>Spanned cells <span className=\"text-green\">+</span></li>\r\n                                <li>Validation <span className=\"text-red\">-</span></li>\r\n                                <li>Sums (light weight formulas) <span className=\"text-red\">-</span></li>\r\n                                <li>Sub table selection <span className=\"text-green\">+</span></li>\r\n                                <li>Customisable context menus <span className=\"text-green\">+</span></li>\r\n                                <li>Moving one ore several rows <span className=\"text-green\">+</span></li>\r\n                                <li>Copy cut delete operations <span className=\"text-red\">-</span></li>\r\n                            </ul>\r\n                        </Route>\r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NavBar\r\n","import data from './data.json';\r\n\r\nclass DataService {\r\n    constructor() {\r\n        this.data = data;\r\n    }\r\n\r\n    getPhases() {\r\n        return this.data.Phases\r\n    }\r\n\r\n    getCosts() {\r\n        return this.data.Costs\r\n    }\r\n}\r\n\r\nexport default new DataService()\r\n","export default function (fn) {\r\n    const ts = performance.now()\r\n    try {\r\n        fn()\r\n    } catch (err) {\r\n        console.log(err)\r\n    }\r\n    const te = performance.now()\r\n\r\n    return (te - ts).toFixed(2)\r\n}\r\n","import React, { Component, createRef, Fragment } from 'react';\r\nimport dataService from '../db/dataService'\r\nimport Handsontable from 'handsontable'\r\nimport performance from '../helpers/perfomance'\r\nimport 'handsontable/dist/handsontable.full.css';\r\nimport './handsotable.css'\r\n\r\nclass SpreadSheetsCon extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.tableRef = createRef()\r\n        this.state = {\r\n            time: 0\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const time = performance(this.initTable)\r\n        this.setState({ time })\r\n        const lis = document.querySelector('#hot-display-license-info')\r\n        if (lis) lis.remove()\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        const lis = document.querySelector('#hot-display-license-info')\r\n        if (lis) lis.remove()\r\n    }\r\n\r\n    initTable = () => {\r\n        this.hot = new Handsontable(this.tableRef.current, {\r\n            data: dataService.getPhases(),\r\n            nestedRows: true,\r\n            colHeaders: true,\r\n            rowHeaders: true,\r\n            autoRowSize: true,\r\n            stretchH: \"all\",\r\n            height: '500px',\r\n            width: '100%',\r\n            persistentState: true,\r\n            nestedHeaders: [\r\n                [\r\n                    {\r\n                        label: 'Identification',\r\n                        colspan: 2\r\n                    },\r\n                    {\r\n                        label: 'Duration [h]',\r\n                        colspan: 7\r\n                    },\r\n                    {\r\n                        label: 'End Depth [mMD]',\r\n                        colspan: 2\r\n                    },\r\n                    {\r\n                        label: 'Timing',\r\n                        colspan: 3\r\n                    },\r\n                    {\r\n                        label: 'Annotation',\r\n                        colspan: 2\r\n                    }\r\n                ],\r\n                [\r\n                    'Code',\r\n                    'Name',\r\n                    'AFE',\r\n                    'Target',\r\n                    'DSV',\r\n                    'Actual',\r\n                    'NPT',\r\n                    'WOW',\r\n                    'TFT',\r\n                    'Planned',\r\n                    'Actual',\r\n                    'Start',\r\n                    'End',\r\n                    'Days -ahead/+behind',\r\n                    'Contractor',\r\n                    'Comment'\r\n                ]\r\n            ],\r\n            columns: [\r\n                { data: 'code' },\r\n                { data: 'name' },\r\n                {\r\n                    data: 'afeHours',\r\n                    type: 'numeric',\r\n                    numericFormat: {\r\n                        pattern: '0,0.00'\r\n                    },\r\n                    allowEmpty: true,\r\n                    width: 80\r\n                },\r\n                {\r\n                    data: 'targetHours',\r\n                    type: 'numeric',\r\n                    numericFormat: {\r\n                        pattern: '0,0.00'\r\n                    },\r\n                    allowEmpty: true,\r\n                    width: 80\r\n                },\r\n                {\r\n                    data: 'dsvHours',\r\n                    type: 'numeric',\r\n                    numericFormat: {\r\n                        pattern: '0,0.00'\r\n                    },\r\n                    allowEmpty: true,\r\n                    width: 80\r\n                },\r\n                {\r\n                    data: 'actualHours',\r\n                    type: 'numeric',\r\n                    numericFormat: {\r\n                        pattern: '0,0.00'\r\n                    },\r\n                    allowEmpty: true,\r\n                    width: 80\r\n                },\r\n                {\r\n                    data: 'nptHours',\r\n                    type: 'numeric',\r\n                    numericFormat: {\r\n                        pattern: '0,0.00'\r\n                    },\r\n                    allowEmpty: true,\r\n                    width: 80\r\n                },\r\n                {\r\n                    data: 'wowHours',\r\n                    type: 'numeric',\r\n                    numericFormat: {\r\n                        pattern: '0,0.00'\r\n                    },\r\n                    allowEmpty: true,\r\n                    width: 80\r\n                },\r\n                {\r\n                    data: 'tftHours',\r\n                    type: 'numeric',\r\n                    numericFormat: {\r\n                        pattern: '0,0.00'\r\n                    },\r\n                    allowEmpty: true,\r\n                    width: 80\r\n                },\r\n                {\r\n                    data: 'plannedDepth',\r\n                    type: 'numeric',\r\n                    numericFormat: {\r\n                        pattern: '0,0.00'\r\n                    },\r\n                    allowEmpty: true,\r\n                    width: 80\r\n                },\r\n                {\r\n                    data: 'actualDepth',\r\n                    type: 'numeric',\r\n                    numericFormat: {\r\n                        pattern: '0,0.00'\r\n                    },\r\n                    allowEmpty: true,\r\n                    width: 80\r\n                },\r\n                {\r\n                    data: 'start',\r\n                    type: 'date',\r\n                    correctFormat: true,\r\n                    allowEmpty: true\r\n                },\r\n                {\r\n                    data: 'end',\r\n                    type: 'date',\r\n                    correctFormat: true,\r\n                    allowEmpty: true\r\n                },\r\n                {\r\n                    data: 'behindHours',\r\n                    type: 'numeric',\r\n                    allowEmpty: true,\r\n                    width: 80\r\n                },\r\n                {\r\n                    data: 'contractor',\r\n                    type: 'numeric',\r\n                    allowEmpty: true,\r\n                    width: 80\r\n                },\r\n                { data: 'comments' }\r\n\r\n            ],\r\n            contextMenu: true,\r\n            bindRowsWithHeaders: 'strict',\r\n            manualRowMove: true\r\n        })\r\n\r\n        this.hot.updateSettings({\r\n            cells(row, col, prop) {\r\n                const cellProperties = this;\r\n                const classes = [];\r\n                let readOnly = false;\r\n\r\n                const isTotal = this.instance.getDataAtRowProp(this.visualRow, 'isTotal');\r\n                const isGroup = this.instance.getDataAtRowProp(this.visualRow, 'group');\r\n\r\n                if (isGroup) {\r\n                    readOnly = true;\r\n                    // add style for group rows\r\n                    classes.push('group-cell');\r\n                } else if (isTotal) {\r\n                    readOnly = true;\r\n                    // add style for total row\r\n                    classes.push('total-cell');\r\n                } else {\r\n                    classes.push('leaf-cell');\r\n                }\r\n\r\n                if (readOnly) {\r\n                    classes.push('locked-cell');\r\n                }\r\n\r\n                // Lock date styles\r\n                if (!isTotal) {\r\n                    const start = this.instance.getDataAtRowProp(this.visualRow, 'start');\r\n                    const overriddenStart = this.instance.getDataAtRowProp(this.visualRow, 'overriddenStart');\r\n                    const lockTimestamp = +new Date();\r\n\r\n                    if (+new Date(start) < lockTimestamp || +new Date(overriddenStart) < lockTimestamp) {\r\n                        // readOnly = true;\r\n                        classes.push('parked-cell');\r\n                    }\r\n                }\r\n\r\n                cellProperties.readOnly = readOnly;\r\n                cellProperties.className = classes.join(' ')\r\n                return cellProperties;\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <h3>Handsontable render performance: <span style={{ color: 'tomato' }}>{this.state.time}ms</span></h3>\r\n\r\n                <div ref={this.tableRef}\r\n                     style={{ overflow: 'hidden', flex: '1 1 auto', fontSize: '11px' }}\r\n                />\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SpreadSheetsCon\r\n","function createFlatter() {\r\n    let globalIndex = -1\r\n\r\n    return function flatData(data, newData = [], groups = []) {\r\n        data.forEach(row => {\r\n            newData.push(row)\r\n            globalIndex++\r\n\r\n            if (row.__children) {\r\n                groups.push({\r\n                    index: globalIndex,\r\n                    count: row.__children.length\r\n                })\r\n                flatData(row.__children, newData, groups)\r\n                delete row.__children\r\n            }\r\n        })\r\n\r\n        return { data: newData, groups }\r\n    }\r\n}\r\n\r\n\r\nexport default createFlatter\r\n","import React, { Component, createRef, Fragment } from 'react';\r\nimport dataService from '../db/dataService'\r\nimport performance from '../helpers/perfomance'\r\nimport createFlatter from '../helpers/flat-data'\r\nimport '@grapecity/spread-sheets/styles/gc.spread.sheets.excel2013white.css';\r\n\r\nconst GC = window.GC\r\n\r\nfunction columnToLetter(column) {\r\n    let temp, letter = '';\r\n    while (column > 0) {\r\n        temp = (column - 1) % 26;\r\n        letter = String.fromCharCode(temp + 65) + letter;\r\n        column = (column - temp - 1) / 26;\r\n    }\r\n    return letter;\r\n}\r\n\r\nexport default class SpreadJS extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.tableRef = createRef()\r\n        this.state = {\r\n            time: 0\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        setTimeout(() => {\r\n            const time = performance(this.initSpread)\r\n            this.setState({ time })\r\n        })\r\n    }\r\n\r\n    initSpread = () => {\r\n        const spread = new GC.Spread.Sheets.Workbook(this.tableRef.current, { sheetCount: 1 });\r\n        spread.options.tabStripVisible = false\r\n        spread.options.tabNavigationVisible = false\r\n        spread.options.tabEditable = true\r\n        spread.options.newTabVisible = false\r\n        const sheet = spread.getActiveSheet()\r\n        const spreadNS = GC.Spread.Sheets;\r\n\r\n        sheet.suspendPaint()\r\n        const flatData = createFlatter()\r\n        const { data, groups } = flatData(dataService.getPhases())\r\n\r\n        sheet.options.isProtected = true\r\n        sheet.autoGenerateColumns = false\r\n        sheet.setDataSource(data)\r\n\r\n        sheet.setRowCount(2, spreadNS.SheetArea.colHeader);\r\n\r\n        sheet.addSpan(0, 0, 1, 2, spreadNS.SheetArea.colHeader);\r\n        sheet.setValue(0, 0, \"Identification\", spreadNS.SheetArea.colHeader);\r\n\r\n        sheet.addSpan(0, 2, 1, 6, spreadNS.SheetArea.colHeader);\r\n        sheet.setValue(0, 2, \"Duration\", spreadNS.SheetArea.colHeader);\r\n\r\n        sheet.addSpan(0, 8, 1, 2, spreadNS.SheetArea.colHeader);\r\n        sheet.setValue(0, 8, \"End Depth\", spreadNS.SheetArea.colHeader);\r\n\r\n        sheet.addSpan(0, 10, 1, 3, spreadNS.SheetArea.colHeader);\r\n        sheet.setValue(0, 10, \"Timing\", spreadNS.SheetArea.colHeader);\r\n\r\n        sheet.addSpan(0, 13, 1, 2, spreadNS.SheetArea.colHeader);\r\n        sheet.setValue(0, 13, \"Annotation\", spreadNS.SheetArea.colHeader);\r\n\r\n        // columns\r\n        sheet.bindColumn(0, { name: 'code', displayName: 'Code' })\r\n        sheet.bindColumn(1, { name: 'name', displayName: 'Name' })\r\n        sheet.bindColumn(2, { name: 'afeHours', displayName: 'AFE', formatter: '0.00', size: 80 })\r\n        sheet.bindColumn(3, { name: 'targetHours', displayName: 'Target', formatter: '0.00', size: 80 })\r\n        sheet.bindColumn(4, { name: 'dsvHours', displayName: 'DSV', formatter: '0.00', size: 80 })\r\n        sheet.bindColumn(5, { name: 'actualHours', displayName: 'Actual', formatter: '0.00', size: 80 })\r\n        sheet.bindColumn(6, { name: 'nptHours', displayName: 'NPT', formatter: '0.00', size: 80 })\r\n        sheet.bindColumn(7, { name: 'tftHours', displayName: 'TFT', formatter: '0.00', size: 80 })\r\n        sheet.bindColumn(8, { name: 'plannedDepth', displayName: 'Planned', formatter: '0.00', size: 80 })\r\n        sheet.bindColumn(9, { name: 'actualDepth', displayName: 'Actual', formatter: '0.00', size: 80 })\r\n        sheet.bindColumn(10, { name: 'start', displayName: 'Start', formatter: 'DD-MM-yyyy HH:mm' })\r\n        sheet.bindColumn(11, { name: 'end', displayName: 'End', formatter: 'DD-MM-yyyy HH:mm' })\r\n        sheet.bindColumn(12, { name: 'behindHours', displayName: 'Behind hours', formatter: '0.00', size: 100 })\r\n        sheet.bindColumn(13, { name: 'contractor', displayName: 'Contractor', size: 200 })\r\n        sheet.bindColumn(14, { name: 'comments', displayName: 'Comment', size: 200 })\r\n        sheet.setColumnCount(15)\r\n\r\n        const style = new spreadNS.Style()\r\n        style.backColor = '#f6f6f6'\r\n        style.cellPadding = '0 2'\r\n\r\n        // Total row\r\n        const totalRow = sheet.getRowCount()\r\n        sheet.addRows(sheet.getRowCount(spreadNS.SheetArea.viewport), 1)\r\n        sheet.setStyle(totalRow, 1, style, spreadNS.SheetArea.viewport)\r\n        sheet.setValue(totalRow, 1, 'Total')\r\n\r\n        const columnsCount = sheet.getColumnCount()\r\n        const groupsIndex = groups.map(({ index }) => index + 1)\r\n\r\n        function createTotal(letter) {\r\n            return `${letter}${groupsIndex.join(`,${letter}`)}`\r\n        }\r\n\r\n        groups.forEach(({ index, count }) => {\r\n            let i = columnsCount\r\n            while (i >= 0) {\r\n                sheet.setStyle(index, i, style, spreadNS.SheetArea.viewport)\r\n                const cell = sheet.getCell(index, i, spreadNS.SheetArea.viewport)\r\n                cell\r\n                    .borderLeft(new spreadNS.LineBorder(\"#ccc\", spreadNS.LineStyle.thin))\r\n                    .borderRight(new spreadNS.LineBorder(\"#ccc\", spreadNS.LineStyle.thin))\r\n                    .borderTop(new spreadNS.LineBorder(\"#ccc\", spreadNS.LineStyle.thin))\r\n                    .borderBottom(new spreadNS.LineBorder(\"#ccc\", spreadNS.LineStyle.thin))\r\n\r\n                if (i > 1 && i < 8) {\r\n                    const columnLetter = columnToLetter(i + 1)\r\n                    const startRow = index + 2\r\n                    const endRow = index + count + 1\r\n                    const sumFormula = `=SUM(${columnLetter}${startRow}:${columnLetter}${endRow})`\r\n                    sheet.setFormula(index, i, sumFormula)\r\n                    sheet.setFormula(totalRow, i, `=SUM(${createTotal(columnLetter)})`)\r\n                }\r\n                i--\r\n            }\r\n\r\n            // Prevent lock events\r\n            const row = new spreadNS.CellRange(sheet, index + 1, 0, count, columnsCount)\r\n            row.locked(false)\r\n\r\n            // group events to phases\r\n            sheet.rowOutlines.group(index + 1, count)\r\n            sheet.rowOutlines.expand(0, false)\r\n            sheet.rowOutlines.direction(spreadNS.Outlines.OutlineDirection.backward);\r\n        })\r\n\r\n\r\n        // auto fit\r\n        sheet.autoFitColumn(1)\r\n        sheet.autoFitColumn(10)\r\n        sheet.autoFitColumn(11)\r\n        sheet.resumePaint()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <h3>SpreadJS render performance: <span style={{ color: 'tomato' }}>{this.state.time}ms</span></h3>\r\n                <div ref={this.tableRef} style={{ height: '100%', width: '100%' }}/>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n","import React, { Component, Fragment, createRef } from 'react';\r\nimport dataService from '../db/dataService'\r\nimport ZingGrid from 'zinggrid';\r\nimport './zing-grid.css'\r\nimport createFlatter from '../helpers/flat-data'\r\n\r\n\r\nwindow.assignDataToNestedGrid = (index, cellRef, recordRef) => {\r\n    if (cellRef) {\r\n        cellRef.querySelector('zing-grid').setData(JSON.stringify(index))\r\n    }\r\n}\r\nexport default class ZingGridView extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.tabelEl = createRef()\r\n        this.state = {\r\n            time: 0\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.initTable()\r\n    }\r\n\r\n    initTable = () => {\r\n        const ts = window.performance.now()\r\n        const flatData = createFlatter()\r\n        const { data } = flatData(dataService.getPhases())\r\n        const grid = new ZingGrid(this.tabelEl.current, {\r\n            data,\r\n            columns: [\r\n                {\r\n                    index: 'code',\r\n                    width: 80\r\n                },\r\n                {\r\n                    index: 'name'\r\n                },\r\n                {\r\n                    index: 'afeHours',\r\n                    type: 'number',\r\n                    header: 'AFE',\r\n                    width: 80\r\n                },\r\n                {\r\n                    index: 'targetHours',\r\n                    type: 'number',\r\n                    header: 'Target',\r\n                    width: 80\r\n                },\r\n                {\r\n                    index: 'dsvHours',\r\n                    type: 'number',\r\n                    header: 'DSV',\r\n                    width: 80\r\n                },\r\n                {\r\n                    index: 'nptHours',\r\n                    type: 'number',\r\n                    header: 'NPT',\r\n                    width: 80\r\n                },\r\n                {\r\n                    index: 'wowHours',\r\n                    type: 'number',\r\n                    header: 'WOW',\r\n                    width: 80\r\n                },\r\n                {\r\n                    index: 'tftHours',\r\n                    type: 'number',\r\n                    header: 'TFT',\r\n                    width: 80\r\n                },\r\n                {\r\n                    index: 'plannedDepth',\r\n                    type: 'number',\r\n                    header: 'Planned',\r\n                    width: 80\r\n                },\r\n                {\r\n                    index: 'actualDepth',\r\n                    type: 'number',\r\n                    header: 'Actual',\r\n                    width: 80\r\n                }\r\n            ],\r\n            editor: true,\r\n            layout: 'row',\r\n            loading: true,\r\n            height: '600px',\r\n            loadByScroll: true\r\n        });\r\n\r\n        grid.addEventListener('grid:ready', (e) => {\r\n            const te = window.performance.now()\r\n            const time = (te - ts).toFixed(2)\r\n            this.setState({ time })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <h3>Zing grid render performance: <span style={{ color: 'tomato' }}>{this.state.time}ms</span></h3>\r\n                <div ref={this.tabelEl}/>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n","import React, { Component, createRef } from 'react';\r\nimport './wijmo.css'\r\nimport '@grapecity/wijmo.styles/wijmo.css';\r\nimport { FlexGrid, FlexGridColumn } from \"@grapecity/wijmo.react.grid\";\r\n// import * as wjCore from '@grapecity/wijmo';\r\nimport { FlexGridXlsxConverter } from '@grapecity/wijmo.grid.xlsx';\r\nimport * as wjGrid from '@grapecity/wijmo.grid';\r\nimport { Menu, MenuItem, MenuSeparator } from '@grapecity/wijmo.react.input';\r\n\r\nimport dataService from '../db/dataService'\r\n\r\nfunction isGroupRow(row) {\r\n    return row instanceof wjGrid.GroupRow\r\n}\r\n\r\nfunction getRowLevel(row) {\r\n    return isGroupRow(row) ? row.level : -1\r\n}\r\n\r\nfunction getParentNode(row) {\r\n    let parentRow = null\r\n    const rowLevel = getRowLevel(row);\r\n    if (rowLevel === -1) return\r\n\r\n    let i = row.index\r\n    do {\r\n        i--\r\n        parentRow = row.grid.rows[i]\r\n    } while (getRowLevel(parentRow) >= rowLevel)\r\n\r\n    return parentRow\r\n}\r\n\r\n\r\nclass CostTableView extends Component {\r\n    gridRef = createRef()\r\n    state = {\r\n        costs: dataService.getCosts(),\r\n        filter: '',\r\n        time: 0\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this._ts = window.performance.now()\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateGridStyles()\r\n\r\n        this.workerGrid.collapseGroupsToLevel(0)\r\n        this.workerGrid.rowAdded.addHandler(() => {\r\n            this.updateGridStyles()\r\n        })\r\n\r\n        this.workerGrid.deletedRow.addHandler((grid, e) => {\r\n            this.updateGridStyles()\r\n        })\r\n\r\n        this.workerGrid.deletingRow.addHandler((grid, e) => {\r\n            // this.updateGridStyles()\r\n        })\r\n    }\r\n\r\n    initialWorkerGrid = (grid) => {\r\n        this.workerGrid = grid;\r\n        // grid.columnFooters.rows.push(new wjGrid.GroupRow());\r\n        // grid.bottomLeftCells.setCellData(0, 0, 'Σ');\r\n        grid.formatItem.addHandler((grid, e) => {\r\n            if (e.panel !== grid.cells) {\r\n                return\r\n            }\r\n\r\n            const { row, col } = e\r\n            const rowData = grid.rows[row]\r\n            const colData = grid.columns[col]\r\n\r\n            // if (colData.binding === 'rate' && rowData.hasChildren) {\r\n            //     e.cell.textContent = wjCore.getAggregate(1, item.__children, 'rate')\r\n            // }\r\n\r\n            if (/days/.test(colData.binding) && !rowData.hasChildren) {\r\n                // e.cell.textContent = get(item, colData.binding, get(item, colData.binding.replace('days', 'populatedDays')))\r\n            }\r\n        });\r\n\r\n        grid.itemFormatter = (panel, r, c, cell) => {\r\n            if (panel.cellType === wjGrid.CellType.ColumnHeader) {\r\n            }\r\n        }\r\n\r\n        const te = window.performance.now()\r\n        const time = (te - this._ts).toFixed(2)\r\n        this.setState({ time })\r\n    }\r\n\r\n    onCellEditEnding = (grid, e) => {\r\n        console.log('edited')\r\n    }\r\n\r\n    updateGridStyles = () => {\r\n        this.workerGrid.rows.forEach((row) => {\r\n            if (!row.hasChildren) {\r\n                row.cssClass = 'wj-group--bg-white'\r\n            }\r\n            row.isReadOnly = row.hasChildren;\r\n        });\r\n    }\r\n\r\n    onFilter = ({ target: { value } }) => {\r\n        this.setState(() => {\r\n            const filter = value.toLowerCase()\r\n            const costs = dataService.getCosts()\r\n\r\n            return {\r\n                costs: this.filter(filter, costs),\r\n                filter\r\n            }\r\n        }, () => {\r\n            this.updateGridStyles()\r\n        })\r\n    }\r\n\r\n    filter(filterString, costs) {\r\n        if (filterString === '') return costs;\r\n        const keysToSearch = ['name', 'code'];\r\n\r\n        const search = cost => {\r\n            const values = keysToSearch.map(key => cost[key]).filter(v => v);\r\n            if (values.some(v => v.toLowerCase().includes(filterString))) {\r\n                return cost;\r\n            }\r\n\r\n            if (cost.__children && cost.__children.length) {\r\n                const costCopy = Object.assign({}, cost);\r\n                const children = cost.__children.reduce(collectResults, []);\r\n\r\n                if (children.length) {\r\n                    costCopy.__children = children;\r\n                    return costCopy;\r\n                }\r\n            }\r\n\r\n            return null;\r\n        };\r\n\r\n        function collectResults(acc, cost) {\r\n            const res = search(cost);\r\n            if (res) acc.push(res);\r\n\r\n            return acc;\r\n        }\r\n\r\n        return costs.reduce(collectResults, []);\r\n    }\r\n\r\n    onMenuItemClicked = ({ selectedValue }) => {\r\n        const cmd = this[selectedValue]\r\n        if (typeof cmd !== 'function') {\r\n            console.log('Context Menu: no cmd found ', selectedValue)\r\n            return\r\n        }\r\n\r\n        cmd()\r\n    }\r\n\r\n    addRow = () => {\r\n        const { row: rowIndex } = this.workerGrid.selection\r\n        const { rows } = this.workerGrid\r\n        const rowData = rows[rowIndex].dataItem\r\n\r\n        this.setState(({ costs }) => {\r\n            if (!rowData.__children) {\r\n                rowData.__children = []\r\n            }\r\n\r\n            rowData.__children.push({ name: '', code: '', days: {}, populatedDays: {} })\r\n\r\n            const newCosts = [...costs]\r\n            return { costs: newCosts }\r\n        }, () => {\r\n            this.workerGrid.refresh()\r\n            this.updateGridStyles()\r\n        })\r\n    }\r\n\r\n    removeRow = () => {\r\n        const { row: rowIndex } = this.workerGrid.selection\r\n        const { rows } = this.workerGrid\r\n        const row = rows[rowIndex]\r\n        const parentRow = getParentNode(row)\r\n\r\n        if (parentRow) {\r\n            this.setState(({ costs }) => {\r\n                const parentRowData = parentRow.dataItem\r\n                const rowData = row.dataItem\r\n                const childIndex = parentRowData.__children.findIndex(child => child === rowData)\r\n\r\n                if (childIndex >= 0) {\r\n                    parentRowData.__children.splice(childIndex, 1)\r\n                }\r\n\r\n                return { costs: [...costs] }\r\n            }, () => {\r\n                this.workerGrid.refresh()\r\n                this.updateGridStyles()\r\n            })\r\n        }\r\n    }\r\n\r\n    collapseAll = () => {\r\n        this.workerGrid.collapseGroupsToLevel(0)\r\n    }\r\n\r\n    expandAll = () => {\r\n        this.workerGrid.collapseGroupsToLevel(this.workerGrid.rows.maxGroupLevel + 1)\r\n    }\r\n\r\n\r\n    onDraggedRow = (grid, e) => {\r\n        console.log(e)\r\n    }\r\n\r\n    exportExcel = () => {\r\n        const book = FlexGridXlsxConverter.save(this.workerGrid, {\r\n            includeColumnHeaders: true,\r\n            includeRowHeaders: true\r\n        })\r\n\r\n        book.sheets[0].name = 'FlexGrid Data';\r\n        book.saveAsync('FlexGrid-Export.xlsx');\r\n    }\r\n\r\n    render() {\r\n        const { costs, filter, time } = this.state\r\n        const columns = ['days.2015-06-22', 'days.2015-06-27', 'days.2015-07-05', 'days.2015-07-11'].map((key) =>\r\n            <FlexGridColumn\r\n                binding={key}\r\n                header={key.replace('days.', '')}\r\n                key={key}\r\n                allowResizing={false}></FlexGridColumn>)\r\n\r\n\r\n        return (\r\n            <div className=\"cost-view\">\r\n                <h3>Wijmo Grid render performance: <span style={{ color: 'tomato' }}>{time}ms</span></h3>\r\n\r\n                <input type=\"text\" value={filter}\r\n                       placeholder=\"Filter\"\r\n                       className=\"form-control\" style={{ marginBottom: '20px' }}\r\n                       onChange={this.onFilter}/>\r\n                <FlexGrid\r\n                    ref={this.gridRef}\r\n                    itemsSource={costs}\r\n                    selectionMode=\"Row\"\r\n                    autoGenerateColumns={false}\r\n                    childItemsPath=\"__children\"\r\n                    frozenColumns={7}\r\n                    isReadOnly={false}\r\n                    allowSorting={false}\r\n                    allowDragging=\"Rows\"\r\n                    allowAddNew={true}\r\n                    // allowDelete={true}\r\n                    initialized={this.initialWorkerGrid}\r\n                    cellEditEnding={this.onCellEditEnding}\r\n                    draggedRow={this.onDraggedRow}\r\n                >\r\n                    <FlexGridColumn binding=\"name\" header=\"Name\" width=\"2*\" minWidth={200}\r\n                                    isReadOnly={false}></FlexGridColumn>\r\n                    <FlexGridColumn binding=\"code\" header=\"Code\"></FlexGridColumn>\r\n                    <FlexGridColumn binding=\"type\" header=\"Type\"\r\n                                    dataMap={['tangible', 'intangible', 'consumable']}></FlexGridColumn>\r\n                    <FlexGridColumn binding=\"unit\" header=\"Unit\"\r\n                                    dataMap={['day rate', 'lump sum', 'unit cost', 'depth based']}></FlexGridColumn>\r\n                    <FlexGridColumn binding=\"rate\" header=\"Rate\"></FlexGridColumn>\r\n                    <FlexGridColumn binding=\"currency\" header=\"Currency\"\r\n                                    dataMap={[\"AUD\", \"EUR\", \"GBP\", \"NOK\", \"USD\"]}></FlexGridColumn>\r\n                    <FlexGridColumn binding=\"populateDaily\" header=\"Populate Daily\" format=\"n*\"></FlexGridColumn>\r\n                    <FlexGridColumn binding=\"prior\" header=\"Before onhire\"></FlexGridColumn>\r\n                    {columns}\r\n                    <FlexGridColumn binding=\"afterOffhire\" header=\"After offhire\"></FlexGridColumn>\r\n                </FlexGrid>\r\n\r\n                <Menu contextMenuOf={this.gridRef}\r\n                      header=\"Context Menu\"\r\n                      selectedValuePath=\"cmd\"\r\n                      dropDownCssClass=\"ctx-menu\"\r\n                      itemClicked={this.onMenuItemClicked}\r\n                >\r\n                    <MenuItem cmd=\"addRow\">\r\n                        Add row\r\n                    </MenuItem>\r\n                    <MenuItem cmd=\"removeRow\">\r\n                        Remove row\r\n                    </MenuItem>\r\n                    <MenuSeparator></MenuSeparator>\r\n                    <MenuItem cmd=\"collapseAll\">\r\n                        Collapse all\r\n                    </MenuItem>\r\n                    <MenuItem cmd=\"expandAll\">Expand all</MenuItem>\r\n                    <MenuSeparator></MenuSeparator>\r\n                    <MenuItem cmd=\"exportExcel\">Export Excel</MenuItem>\r\n                </Menu>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CostTableView\r\n","export default {\r\n    Cfg: {\r\n        CfgId: 'Costs',\r\n        ShowDeleted: \"0\",\r\n        SuppressCfg: '0',\r\n        AutoSort: \"0\",\r\n        DateStrings: '1',\r\n        ReloadChanged: '3',\r\n        MainCol: 'name',\r\n        NoVScroll: 0,\r\n        Sorting: 0,\r\n        Paging: 2,\r\n        PageLength: 1,\r\n        AutoUpdate: 0,\r\n        StandardFilter: 3,\r\n        SaveExpanded: 1,\r\n        PersistentCfg: 2,\r\n        Filtered: 0\r\n    },\r\n    Actions: {\r\n        OnRightClickCell: 'Grid.Component.showCustomMenu(Row,Col)' // Custom event handler, shows the calling method of the framework component; Shows some custom popup menu on right click to any cell\r\n    },\r\n    Def: {\r\n        R: {\r\n            Expanded: 0\r\n        },\r\n        Cost: {},\r\n        CostGroup: {\r\n            CanEdit: 0,\r\n            Calculated: 1,\r\n            nameCanEdit: 1,\r\n            codeCanEdit: 1,\r\n            populateDailyFormula: 'sum()'\r\n        }\r\n    },\r\n    DefCols: {\r\n        C: {\r\n            CanFilter: 0\r\n        }\r\n    },\r\n    LeftCols: [\r\n        { Name: 'name', RelWidth: 1, MinWidth: 250, Type: 'Text', CanFilter: 1, CaseSensitive: 0 },\r\n        { Name: 'code', CanFilter: 1, CaseSensitive: 0 },\r\n        {\r\n            Name: 'type', Width: '80',\r\n            Type: 'Enum',\r\n            Enum: ['|tangible', 'intangible', 'consumable'].join('|')\r\n        },\r\n        {\r\n            Name: 'unit',\r\n            Width: '90',\r\n            Type: 'Enum',\r\n            Enum: ['|day rate', 'lump sum', 'unit cost', 'depth based'].join('|')\r\n        },\r\n        { Name: 'rate', Width: '90' },\r\n        { Name: 'currency', Width: '90', Type: 'Enum', Enum: [\"|AUD\", \"EUR\", \"GBP\", \"NOK\", \"USD\"].join('|') },\r\n        { Name: 'populateDaily', Width: '90', OnChange: \"Grid.Component.populate(Grid, Row, Value)\" }\r\n    ],\r\n    Cols: [\r\n        { Name: 'prior' },\r\n        {\r\n            Name: 'day-2016-06-13',\r\n            Formula: 'day-2016-06-13 ? day-2016-06-13 : Get(Row, \"populatedDay-2016-06-13\")',\r\n            CanEdit: 1\r\n        },\r\n        {\r\n            Name: 'day-2016-06-13/1'\r\n        },\r\n        { Name: 'day-2016-06-14' },\r\n        { Name: 'day-2016-06-14/1' },\r\n        { Name: 'day-2016-06-15' },\r\n        { Name: 'afterOffhire' }\r\n    ],\r\n    Header: {\r\n        name: \"Name\",\r\n        code: \"Code\",\r\n        type: \"Type\",\r\n        unit: \"Unit\",\r\n        rate: \"Rate\",\r\n        currency: \"Currency\",\r\n        populateDaily: \"Populate Daily\",\r\n        prior: \"Before onhire\",\r\n        'day-2016-06-13': \"2016-06-13\",\r\n        'day-2016-06-13/1': \"2016-06-13/1\",\r\n        'day-2016-06-14': \"2016-06-14\",\r\n        'day-2016-06-14/1': \"2016-06-14/1\",\r\n        'day-2016-06-15': \"2016-06-15\",\r\n        afterOffhire: \"After offhire\"\r\n    },\r\n    // Root: { CDef: 'Node' },\r\n    Head: [\r\n        {\r\n            Kind: 'Filter',\r\n            nameFilter: 11,\r\n            codeFilter: 11\r\n        }\r\n    ],\r\n    Foot: [\r\n        {\r\n            id: 'Fix1',\r\n            CanDelete: '0',\r\n            CanEdit: '0',\r\n            Calculated: '1',\r\n            name: \"Total income\",\r\n            populateDailyFormula: 'sum()'\r\n        }\r\n    ]\r\n}\r\n","import React, { Component, createRef, Fragment } from 'react';\r\nimport layout from './TreeDef'\r\nimport dataService from '../db/dataService'\r\nimport uid from 'uid'\r\n\r\n\r\nconst LS_KEY = `data-2`\r\n\r\nfunction migrateData(arr) {\r\n    arr = arr || dataService.getCosts() || []\r\n\r\n    function flat(item) {\r\n        item.id = uid()\r\n        if (item.__children && item.__children.length) {\r\n            item.Def = 'CostGroup'\r\n            item.Items = item.__children.map(flat)\r\n        }\r\n\r\n        const days = Object.entries(item.days)\r\n        if (days.length) {\r\n            days.forEach(([day, value]) => {\r\n                item[`day-${day}`] = value\r\n            })\r\n        }\r\n\r\n        if (item.populatedDays) {\r\n            const populatedDays = Object.entries(item.populatedDays)\r\n            if (populatedDays.length) {\r\n                populatedDays.forEach(([day, value]) => {\r\n                    item[`populatedDay-${day}`] = value\r\n                })\r\n            }\r\n        }\r\n\r\n        delete item.__children\r\n        delete item.group\r\n        delete item.days\r\n        delete item.populatedDays\r\n\r\n        return item\r\n    }\r\n\r\n    return arr.map(flat)\r\n}\r\n\r\nconst getBody = () => {\r\n    let data = window.localStorage.getItem(LS_KEY)\r\n    if (data) return JSON.parse(data)\r\n\r\n    data = migrateData()\r\n    window.localStorage.setItem(LS_KEY, JSON.stringify(data))\r\n\r\n    return data\r\n}\r\n\r\nclass TreeGrid extends Component {\r\n    Grid = null;\r\n    tagRef = createRef()\r\n    _body = getBody()\r\n    _worker = new Worker(\"/sheets.github.io/worker.js\")\r\n\r\n    componentDidMount() {\r\n        this._worker.addEventListener('message', (e) => {\r\n            const [event, newData] = e.data\r\n\r\n            switch (event) {\r\n                case 'updated':\r\n                    this.saveData(newData)\r\n                    break\r\n                case 'error':\r\n                    console.error('Worker error: ', newData)\r\n                    break\r\n                default:\r\n                    console.debug('Worker: event not found!')\r\n            }\r\n        })\r\n\r\n        new Promise(resolve => {\r\n            this.Grid = window.TreeGrid({\r\n                Debug: '',\r\n                Layout: {\r\n                    Data: layout\r\n                },\r\n                Upload: {\r\n                    Format: 'JSON',\r\n                    Type: ['Changes'],\r\n                    Tag: 'grid'\r\n                },\r\n                Data: {\r\n                    Data: {\r\n                        Body: [\r\n                            this._body\r\n                        ]\r\n                    }\r\n                }\r\n            }, this.tagRef.current, { Component: this });\r\n\r\n            window.Grids.OnAfterValueChanged = this.updateData\r\n            window.Grids.OnSave = (grid, row, b) => {\r\n                console.log(row, b)\r\n            }\r\n        })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.Grid.Dispose()\r\n    }\r\n\r\n    populate = (Grid, Row, Value) => {\r\n        ['2016-06-13', '2016-06-13/1', '2016-06-14'].forEach(key => {\r\n            Grid.SetValue(Row, `populatedDay-${key}`, Value, 1)\r\n        })\r\n    }\r\n\r\n    saveData = (newData) => {\r\n        window.localStorage.setItem(LS_KEY, JSON.stringify(newData))\r\n        this._body = newData\r\n    }\r\n\r\n    updateData = (grid, row, col) => {\r\n        const newRowData = { id: row.id }\r\n        newRowData[col] = row[col]\r\n        this._worker.postMessage(['change', newRowData, this._body])\r\n    }\r\n\r\n    showCustomMenu = (row, col) => {\r\n        var G = this.Grid;\r\n        this.Grid.ShowMenu(row, col, {\r\n            Items: [\r\n                {\r\n                    Name: row.Deleted ? \"Undelete row\" : \"Delete row\",\r\n                    OnClick: function () {\r\n                        G.DeleteRow(row, row.Deleted ? 3 : 1);\r\n                    }\r\n                },\r\n                {\r\n                    Name: row.Selected ? \"Deselect row\" : \"Select row\",\r\n                    OnClick: function () {\r\n                        G.SelectRow(row);\r\n                    }\r\n                },\r\n                {\r\n                    Name: \"Copy row\",\r\n                    OnClick: function () {\r\n                        G.CopyRow(row, null, row, 1, 0);\r\n                    }\r\n                },\r\n                {\r\n                    Name: \"Add new row\",\r\n                    OnClick: function () {\r\n                        G.AddRow(null, row, 1);\r\n                    }\r\n                }\r\n            ]\r\n        });\r\n        return 1;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <div ref={this.tagRef}/>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TreeGrid\r\n","import React, { Component } from 'react';\r\nimport './App.css'\r\nimport NavBar from './components/NavBar'\r\nimport Handsontable from './views/Handsontable'\r\nimport SpreadJS from './views/SpreadJS'\r\nimport ZingGrid from './views/ZingGrid'\r\nimport WijmoGrid from './views/WijmoGrid'\r\nimport TreeGrid from './views/TreeGrid'\r\nimport { HashRouter, Route, Switch } from 'react-router-dom'\r\n\r\n\r\nclass Sample extends Component {\r\n    render() {\r\n        return (\r\n            <HashRouter>\r\n                <NavBar/>\r\n                <div className=\"views-container\">\r\n                    <Switch>\r\n                        <Route exact path=\"/\">\r\n                            <Handsontable/>\r\n                        </Route>\r\n                        <Route path=\"/spread-js\">\r\n                            <SpreadJS/>\r\n                        </Route>\r\n                        <Route path=\"/zing-grid\">\r\n                            <ZingGrid/>\r\n                        </Route>\r\n                        <Route path=\"/wijmo-grid\">\r\n                            <WijmoGrid/>\r\n                        </Route>\r\n\r\n                        <Route path=\"/tree-grid\">\r\n                            <TreeGrid/>\r\n                        </Route>\r\n                    </Switch>\r\n                </div>\r\n            </HashRouter>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Sample\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}