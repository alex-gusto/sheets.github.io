{"version":3,"sources":["components/TreeGridComponent/config lazy /^/.*$/ groupOptions: {} namespace object","components/NavBar.js","helpers/deep-clone.js","components/TreeGridComponent/utils/global-helpers.js","components/TreeGridComponent/TreeGridComponent.js","components/TreeGridComponent/utils/merge-layouts.js","views/TimeTracker/static-layout.js","views/TimeTracker/create-head.js","views/TimeTracker/TimeTrackerGrid/utils/get-prev-event.js","helpers/pick-number.js","components/TreeGridComponent/validator/ChangesHolder.js","components/TreeGridComponent/validator/BaseValidator.js","views/TimeTracker/TimeTrackerGrid/TimeTrackerGrid.js","views/TimeTracker/create-left-columns.js","views/TimeTracker/create-columns.js","components/TreeGridComponent/utils/center-header.js","views/TimeTracker/create-foot.js","views/TimeTracker/create-solid.js","views/TimeTracker/create-rows-def.js","db/dataService.js","views/TimeTracker/TimeTracker.js","views/Companies/static-layout.js","views/Companies/constants.js","views/Companies/create-columns.js","views/Companies/create-head.js","views/Companies/create-foot.js","views/Companies/create-layout.js","views/Companies/create-left-columns.js","views/Companies/Companies.jsx","views/HighchartGant/HighchartGant.jsx","views/TreeGridGantt/static-layout.js","views/TreeGridGantt/create-body.js","views/TreeGridGantt/DataListManager.js","views/TreeGridGantt/TreeGridGantt.jsx","views/TreeGridGantt/create-layout.js","views/TreeGridGantt/create-solid.js","views/TreeGridGantt/create-left-cols.js","views/TreeGridGantt/create-cols.js","App.js","index.js","components/TreeGridComponent/config/default-layout.js"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","all","slice","keys","Object","module","exports","NavBar","className","to","Component","obj","JSON","parse","stringify","isEmpty","v","isNotEmpty","isNumber","isNaN","window","TreeGrid","Grids","OnCustomAjax","G","IO","data","func","Url","res","default","catch","err","OnDataChanged","GetChanges","defaultProps","onDataChanged","noop","nestedKey","body","Def","DefEmpty","DefParent","Validator","TreeGridComponent","$el","createRef","grid","gridBody","prepareBody","props","dataManager","Worker","subscribeGridEvents","Changes","validChanges","errors","validate","hasErrors","length","Result","AcceptChanges","addEventListener","onDataManagerMessage","removeEventListener","postMessage","changes","Array","isArray","event","console","error","debug","this","initGrid","terminate","Dispose","layout","Data","merge","Debug","Layout","Upload","Format","Flags","Type","Body","current","Helpers","helpers","arr","traverse","item","Items","ref","style","height","width","args","mergeWith","defaultLayout","objValue","srcValue","concat","Cfg","ShowDeleted","AutoSort","DateStrings","ReloadChanged","MainCol","NoVScroll","Sorting","AutoUpdate","StandardFilter","SaveExpanded","PersistentCfg","Filtered","RoundNumbers","RoundNumbersDigits","Size","Undo","RowIndex","SearchLap","FilterLap","Validate","Sync","SyncId","ExportType","Toolbar","Cells30Manipulate","R","Expanded","DefCols","C","CanFilter","Root","AcceptDef","CDef","Panel","Copy","Delete","Select","Move","MenuPrint","Attribute","HideUnused","getPrevEvent","row","_row","GetPrev","Name","pickNumber","find","n","ChangesHolder","_changes","key","message","change","getChange","messages","getMessages","push","getErrorKey","addError","values","reduce","acc","entries","forEach","value","m","BaseValidator","invalidChanges","rules","GetRowById","fn","rule","cb","forEachRule","call","getChanges","TimeTrackerGrid","createLayout","getEventStart","get","eventRow","OperationStartDate","getEventEnd","start","duration","getEventDuration","hours","isUndefined","getPlannedDepth","plannedDepth","getActualDepth","actualDepth","hasActual","getBehindHours","delta","actualHours","isAux","DerrickType","dynamicLayout","MinWidth","CaseSensitive","RelWidth","Cols","CanEmpty","EditFormat","Visible","CanHide","CanPrint","CanExport","Formula","CanEdit","OnChange","ClassFormula","createColumns","Head","mainHeader","Pos","name","_start","_end","config","centerHeader","createHead","Foot","Color","CanDelete","Calculated","hoursFormula","_startFormula","_endFormula","Solid","Cells","OperationStartDateRecalc","Space","Tag","OperationStartDateLabel","OperationStartDateWidth","OperationStartDateFormat","OperationStartDateType","OperationStartDateOnChange","createSolid","commonGroupDef","nameCanEdit","codeCanEdit","Well","Class","Phase","Event","CalcOrder","join","createRowsDef","mergeLayouts","staticLayout","getPhases","phases","prevItem","calculate","parent","newItem","k","end","getFromLS","DataService","instance","saveToLS","localStorage","setItem","getItem","Phases","getStartTime","PhasesAux","Companies","Costs","totalDuration","sum","s","days","date","moment","format","TimeTracker","newData","setState","dataService","save","handleOperationStartDateChange","handleDerrickTypeChange","state","prepareState","wells","deepClone","defs","reCalc","addRowDefinitions","level","Recalc","Dragging","HideZero","PrintPageOrientation","PrintPageSize","ColPaging","Alternate","Comment","CanCopy","CanSelect","CanDrag","Cells20Data","Cells60Cfg","MenuExport","COLS","day","col","Width","flat","daysHeader","Kind","Spanned","nameAlign","companiesHeader","commentRow","nameVertAlign","nameRowSpan","colName","assign","replaceAll","toUpperCase","comments","from","rowIndex","random","loremIpsum","toComment","fromComment","getDays","createFoot","LeftCols","useState","getCompanies","setBody","useMemo","require","Highcharts","HighchartGant","today","Date","setUTCHours","setUTCMinutes","setUTCSeconds","setUTCMilliseconds","getTime","prevEvent","events","collectEvents","ac","y","log","title","text","xAxis","currentDateIndicator","yAxis","categories","plotOptions","series","dragDrop","draggableX","dragMinY","dragMaxY","dragPrecisionX","dataLabels","enabled","allowPointSelect","point","drag","options","containerProps","highcharts","constructorType","FastGantt","GanttStyle","Zoom","GanttUnits","GanttWidth","GanttDragUnits","GanttChartRound","GanttHeader1","GanttHeader2","GanttHeader3","Cells05","ZoomType","ZoomWidth","CLASSES","collectItemsOnLevel","deepArr","settings","collector","_level","Text","Id","Start","End","it","DataListManager","dataClone","flatArrById","list","nextParent","i","hasChildren","next","prev","indexWithinParent","set","Map","nextId","prevId","index","_getParentArr","splice","_updateIndexWithinParent","has","isTotally","hasItem","delete","parentId","moveItem","_getFutureIndex","convertedItem","convertItemKeys","_setChildToParent","removeItem","convertedData","test","convertValue","Symbol","TGAddEvent","TreeGridGant","GanttZoom","GanttRunSave","GanttDataUnits","GanttRun","GanttRunAdjust","GanttRunTip","phasesMain","eventsMain","phasesAux","getPhasesAux","eventsAux","createBody","dialog","useEffect","oldData","dir","XY","keyPrefix","X","Y","toString","substr","getElementsByTagName","ShowDialog","Close","ganttRunKey","Function","Duration","updateItem","Sample","path","exact","TreeGridGantt","root","document","getElementById","ReactDOM","render","StrictMode","FocusRect","SelectingCells","SelectingFocus","CopyCols","PasteFocused","Actions","OnCtrlDragRow","OnDragRow","OnDel","Cells70Styles","PanelCopyMenu","Lang","GroupSeparator","GMT"],"mappings":"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","file":"static/js/main.3b59dba2.chunk.js","sourcesContent":["var map = {\n\t\"./Defaults\": [\n\t\t81,\n\t\t0\n\t],\n\t\"./Defaults.js\": [\n\t\t81,\n\t\t0\n\t],\n\t\"./Text\": [\n\t\t82,\n\t\t1\n\t],\n\t\"./Text.js\": [\n\t\t82,\n\t\t1\n\t],\n\t\"./default-layout\": [\n\t\t33\n\t],\n\t\"./default-layout.js\": [\n\t\t33\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 156;\nmodule.exports = webpackAsyncContext;","import React, { Component } from 'react';\r\nimport './NavBar.css'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass NavBar extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"navigationBar\">\r\n        <h3>Navigation</h3>\r\n        <nav className=\"navigationBarList\">\r\n          <Link to=\"/\" className=\"navItem\">Time tracker</Link>\r\n          <Link to=\"/companies\" className=\"navItem\">Companies</Link>\r\n          <Link to=\"/highcharts-gant\" className=\"navItem\">Highcharts Gantt</Link>\r\n          <Link to=\"/tree-grid-gant\" className=\"navItem\">TreeGrid gantt</Link>\r\n          {/*<Link to=\"/wijmo-grid\" className=\"navItem\">Wijmo Grid</Link>*/}\r\n          {/*<Link to=\"/tree-grid\" className=\"navItem\">Tree Grid</Link>*/}\r\n        </nav>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default NavBar\r\n","export default (obj) => JSON.parse(JSON.stringify(obj))\r\n","export default {\r\n    isEmpty: v => v === '',\r\n    isNotEmpty: v => v !== '',\r\n    isNumber: v => typeof v === 'number' && !isNaN(v)\r\n}\r\n","/**\r\n * TreeGrid component\r\n * http://www.treegrid.com/TreeGrid5_6/Doc/TreeGridFAQ.htm\r\n *\r\n */\r\nimport React, { Component, createRef } from 'react'\r\nimport noop from 'lodash/noop'\r\nimport PropTypes from 'prop-types'\r\nimport merge from 'lodash/merge'\r\nimport helpers from './utils/global-helpers'\r\n\r\nconst { TreeGrid, Grids } = window\r\n\r\nGrids.OnCustomAjax = (G, IO, data, func) => {\r\n  if (IO.Url) {\r\n    import(`./config/${IO.Url}`)\r\n      .then(({ default: res }) => func(0, res))\r\n      .catch(err => err)\r\n  } else {\r\n    G.OnDataChanged(G, JSON.parse(G.GetChanges()), func) // TODO: data doesn't match with changes list\r\n  }\r\n  \r\n  return true\r\n}\r\n\r\nconst propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  \r\n  // events\r\n  onDataChanged: PropTypes.func,\r\n  \r\n  // data\r\n  body: PropTypes.arrayOf(PropTypes.object),\r\n  layout: PropTypes.shape({\r\n    Cfg: PropTypes.objectOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number]))\r\n  }).isRequired,\r\n  nestedKey: PropTypes.string,\r\n  \r\n  // rows defaults http://www.treegrid.com/Doc/RowDefaults.htm\r\n  Def: PropTypes.string,\r\n  DefEmpty: PropTypes.string,\r\n  DefParent: PropTypes.string,\r\n  Validator: PropTypes.func\r\n}\r\n\r\nconst defaultProps = {\r\n  onDataChanged: noop,\r\n  nestedKey: 'Items',\r\n  body: [],\r\n  Def: 'R',\r\n  DefEmpty: 'R',\r\n  DefParent: 'R',\r\n  Validator: null\r\n}\r\n\r\nclass TreeGridComponent extends Component {\r\n  static propTypes = propTypes\r\n  \r\n  static defaultProps = defaultProps\r\n  \r\n  $el = createRef()\r\n  \r\n  grid = null\r\n  \r\n  // eslint-disable-next-line react/destructuring-assignment\r\n  gridBody = this.prepareBody(this.props.body)\r\n  \r\n  dataManager = new Worker('/sheets.github.io/ManageData.worker.js')\r\n  \r\n  componentDidMount() {\r\n    this.initGrid()\r\n    this.subscribeGridEvents()\r\n  }\r\n  \r\n  componentWillUnmount() {\r\n    this.dataManager.terminate()\r\n    \r\n    if (!this.grid) return\r\n    this.grid.Dispose()\r\n  }\r\n  \r\n  subscribeGridEvents = () => {\r\n    this.grid.OnDataChanged = (G, { Changes }, func) => {\r\n      const { body, nestedKey, Validator } = this.props\r\n      let validChanges = []\r\n      let errors = []\r\n      \r\n      if (Validator) {\r\n        const validator = new Validator(G)\r\n        ;[validChanges, errors] = validator.validate(Changes)\r\n      }\r\n      \r\n      const hasErrors = errors.length\r\n      func(0, {\r\n        IO: {\r\n          Result: hasErrors ? -1 : 0\r\n        },\r\n        Changes: hasErrors ? errors : validChanges\r\n      })\r\n      \r\n      if (hasErrors) return\r\n      G.AcceptChanges()\r\n      \r\n      const onDataManagerMessage = (...args) => {\r\n        this.onDataManagerMessage(...args)\r\n        \r\n        this.dataManager.removeEventListener('message', onDataManagerMessage)\r\n      }\r\n      \r\n      this.dataManager.addEventListener('message', onDataManagerMessage)\r\n      this.dataManager.postMessage(['update', { changes: Changes, data: body, nestedKey }])\r\n    }\r\n  }\r\n  \r\n  onDataManagerMessage = e => {\r\n    if (!Array.isArray(e.data)) return\r\n    \r\n    const { onDataChanged } = this.props\r\n    const [event, data] = e.data\r\n    \r\n    switch (event) {\r\n      case 'updated':\r\n        onDataChanged(data.data)\r\n        break\r\n      case 'error':\r\n        // eslint-disable-next-line no-console\r\n        console.error('Worker error: ', data.data)\r\n        break\r\n      default:\r\n        // eslint-disable-next-line no-console\r\n        console.debug('Worker: event not found!')\r\n    }\r\n  }\r\n  \r\n  initGrid() {\r\n    const { layout, id } = this.props\r\n    const Data = merge({}, layout)\r\n    \r\n    this.grid = TreeGrid(\r\n      {\r\n        Debug: process.env.NODE_ENV !== 'production' ? 'Problem' : 0,\r\n        id,\r\n        Layout: {\r\n          Data\r\n        },\r\n        Upload: {\r\n          Format: 'JSON',\r\n          Flags: 'Spanned',\r\n          Type: 'Changes,Span,Gantt'\r\n        },\r\n        Data: {\r\n          Data: {\r\n            Body: [this.gridBody]\r\n          }\r\n        }\r\n      },\r\n      \r\n      // root element\r\n      this.$el.current,\r\n      \r\n      // inject to Grid\r\n      {\r\n        Component: this,\r\n        Helpers: helpers\r\n      }\r\n    )\r\n  }\r\n  \r\n  /**\r\n   * Data  format http://www.treegrid.com/Doc/DataFormats.htm#JSONFormat\r\n   * @param arr\r\n   * @returns {{}[]}\r\n   */\r\n  prepareBody(arr) {\r\n    const { nestedKey, Def, DefParent, DefEmpty } = this.props\r\n    \r\n    function traverse(item) {\r\n      if (item[nestedKey] && item[nestedKey].length) {\r\n        item.Def = item.Def || DefParent\r\n        item.Items = item[nestedKey].map(traverse)\r\n      } else {\r\n        item.Def = item.Def || Def\r\n      }\r\n      \r\n      item.DefParent = item.DefParent || DefParent\r\n      item.DefEmpty = item.DefEmpty || DefEmpty\r\n      \r\n      return item\r\n    }\r\n    \r\n    return arr.map(traverse)\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div\r\n        ref={this.$el}\r\n        style={{\r\n          height: '100%',\r\n          width: '100%'\r\n        }}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport default TreeGridComponent\r\n","import mergeWith from 'lodash/mergeWith'\r\nimport defaultLayout from '../config/default-layout'\r\n\r\nexport default function (...args) {\r\n    return mergeWith(\r\n        {},\r\n        defaultLayout,\r\n        ...args,\r\n        function (objValue, srcValue) {\r\n            if (Array.isArray(objValue)) {\r\n                return srcValue.concat(objValue)\r\n            }\r\n        }\r\n    )\r\n}\r\n","export default {\r\n    Cfg: {\r\n        ShowDeleted: \"0\",\r\n        AutoSort: \"0\",\r\n        DateStrings: '1',\r\n        ReloadChanged: '3',\r\n        MainCol: 'name',\r\n        NoVScroll: 0,\r\n        Sorting: 0,\r\n        AutoUpdate: 1,\r\n        StandardFilter: 3,\r\n        SaveExpanded: 1,\r\n        PersistentCfg: 2,\r\n        Filtered: 0,\r\n        RoundNumbers: 1,\r\n        RoundNumbersDigits: 2,\r\n        Size: 'Small',\r\n        Undo: 32,\r\n        RowIndex: \"Pos\",\r\n        SearchLap: 1,\r\n        FilterLap: 1,\r\n        Validate: 'Changed,Messages',\r\n        Sync: 'Horz,Vert',\r\n        SyncId: 'TimeTracker',\r\n        // CfgId: 'Costs',\r\n        ExportType: 'Expanded,Outline,Indent,ForceBorder,TextType,Strings,FixedRows,Size'\r\n    },\r\n    Toolbar: {\r\n        Cells30Manipulate: \"Undo,Redo,Add,AddChild,Calc,Outdent,Indent,ExpandAll,CollapseAll\"\r\n    },\r\n    Def: {\r\n        R: {\r\n            Expanded: 1\r\n        }\r\n    },\r\n    DefCols: {\r\n        C: {\r\n            CanFilter: 0\r\n        }\r\n    },\r\n    Root: {\r\n        AcceptDef: 'Well',\r\n        CDef: 'Well'\r\n    },\r\n    Panel: {\r\n        Copy: 1,\r\n        Delete: 1,\r\n        Select: 1,\r\n        Move: 1\r\n    },\r\n    MenuPrint: {\r\n        Items: 'ColsCaption,Cols,SpaceCaption,RowsCaption,Foot,OptionsCaption,Options,SizeCaption,Size',\r\n        Attribute: 'CanPrint',\r\n        HideUnused: '1'\r\n    }\r\n}\r\n","import centerHeader from '../../components/TreeGridComponent/utils/center-header'\r\n\r\nexport default () => {\r\n    const mainHeader = {\r\n        Pos: 'Pos',\r\n        name: \"Name\",\r\n        code: \"Code\",\r\n        hours: 'Hours',\r\n        _start: 'Start',\r\n        _end: 'End'\r\n    }\r\n\r\n    // set align for header' key\r\n    // http://www.treegrid.com/Doc/ColBasics.htm#HeaderCellvalue\r\n    Object.keys(mainHeader).forEach((key) => centerHeader(key, mainHeader))\r\n\r\n    mainHeader.id = 'Header'\r\n\r\n    return [\r\n        mainHeader\r\n    ]\r\n}\r\n","export default function getPrevEvent(grid, row) {\r\n    const _row = grid.GetPrev(row)\r\n\r\n    if (!_row) return\r\n\r\n    if (_row.Def.Name !== 'Event') {\r\n        return getPrevEvent(grid, _row)\r\n    }\r\n\r\n    return _row\r\n}\r\n","import isNumber from 'lodash/isNumber'\r\nimport isNaN from 'lodash/isNaN'\r\n\r\nexport default function pickNumber(...args) {\r\n    return args.find(n => isNumber(n) && !isNaN(n));\r\n};\r\n","class ChangesHolder {\n  _changes = {}\n\n  static getErrorKey(key) {\n    return `${key}Error`\n  }\n\n  static getMessages(change, key) {\n    return change[ChangesHolder.getErrorKey(key)] || []\n  }\n\n  getChange(id) {\n    const row = this._changes[id]\n    if (!row) {\n      this._changes[id] = { id }\n    }\n\n    return this._changes[id]\n  }\n\n  addError(id, key, message) {\n    const change = this.getChange(id)\n\n    const messages = ChangesHolder.getMessages(change, key)\n    messages.push(message)\n\n    change[ChangesHolder.getErrorKey(key)] = messages\n  }\n\n  removeError(id, key) {\n    this.addError(id, key, '')\n  }\n\n  getChanges() {\n    return Object.values(this._changes).reduce((acc, errors) => {\n      const change = {}\n\n      Object.entries(errors).forEach(([key, value]) => {\n        if (Array.isArray(value)) {\n          change[key] = value.find(m => m) || ''\n        } else {\n          change[key] = value\n        }\n      })\n\n      return [...acc, change]\n    }, [])\n  }\n}\n\nexport default ChangesHolder\n","import ChangesHolder from './ChangesHolder'\n\nclass BaseValidator {\n  validChanges = null\n\n  invalidChanges = null\n\n  rules = {}\n\n  constructor(grid) {\n    if (!grid) {\n      throw new Error('TreeGrid validator: Set related grid!')\n    }\n\n    this.grid = grid\n  }\n\n  _getRow(id) {\n    return this.grid.GetRowById(id)\n  }\n\n  forEachRule(fn) {\n    Object.entries(this.rules).forEach(([rule, cb]) => fn(rule, cb))\n  }\n\n  validate(changes) {\n    this.validChanges = new ChangesHolder()\n    this.invalidChanges = new ChangesHolder()\n\n    changes.forEach(change => {\n      this.forEachRule((key, fn) => {\n        if (key in change) {\n          fn.call(this, change)\n        }\n      })\n    })\n\n    return [this.validChanges.getChanges(), this.invalidChanges.getChanges()]\n  }\n}\n\nexport default BaseValidator\n","import React, { Component } from 'react';\r\nimport TreeGridComponent from '../../../components/TreeGridComponent'\r\n\r\n\r\n// Layout\r\nimport mergeLayouts from '../../../components/TreeGridComponent/utils/merge-layouts'\r\nimport staticLayout from '../static-layout'\r\nimport createColumns from '../create-columns'\r\nimport createLeftColumns from '../create-left-columns'\r\nimport createHead from '../create-head'\r\nimport createFoot from '../create-foot'\r\nimport createSolid from '../create-solid'\r\nimport createRowsDef from '../create-rows-def'\r\n\r\n// Utils\r\nimport getPrevEvent from './utils/get-prev-event'\r\nimport pickNumber from '../../../helpers/pick-number'\r\nimport isUndefined from 'lodash/isUndefined'\r\nimport Validator from '../../../components/TreeGridComponent/validator'\r\n\r\nclass TimeTrackerGrid extends Component {\r\n    layout = this.createLayout()\r\n\r\n    createLayout() {\r\n        const { OperationStartDate, isAux, DerrickType } = this.props\r\n        const dynamicLayout = {}\r\n\r\n        dynamicLayout.LeftCols = createLeftColumns()\r\n\r\n        dynamicLayout.Cols = createColumns({ isAux })\r\n\r\n        dynamicLayout.Head = createHead()\r\n\r\n        dynamicLayout.Foot = createFoot()\r\n\r\n        dynamicLayout.Solid = createSolid({ OperationStartDate, isAux, DerrickType })\r\n\r\n        dynamicLayout.Def = createRowsDef()\r\n\r\n        return mergeLayouts(staticLayout, dynamicLayout)\r\n    }\r\n\r\n    getEventStart = (grid, row, get) => {\r\n        const eventRow = getPrevEvent(grid, row)\r\n\r\n        if (eventRow) {\r\n            return get(eventRow, '_end')\r\n        }\r\n\r\n        return this.props.OperationStartDate\r\n    }\r\n\r\n    getEventEnd = (start, duration) => {\r\n        if (start && typeof duration === 'number') {\r\n            return start + duration\r\n        }\r\n\r\n        return ''\r\n    }\r\n\r\n    getEventDuration = (...args) => {\r\n        const hours = pickNumber(...args)\r\n\r\n        if (isUndefined(hours)) return ''\r\n\r\n        return 60 * 60 * 1000 * hours // to milliseconds\r\n    }\r\n\r\n    getPlannedDepth = (grid, row, get, plannedDepth) => {\r\n        if (grid.Helpers.isNotEmpty(plannedDepth)) return plannedDepth\r\n\r\n        const eventRow = getPrevEvent(grid, row)\r\n        if (eventRow) {\r\n            return get(eventRow, '_plannedDepth')\r\n        }\r\n\r\n        return 0\r\n    }\r\n\r\n    getActualDepth = (grid, row, get, actualDepth) => {\r\n        if (grid.Helpers.isNotEmpty(actualDepth)) return actualDepth\r\n\r\n        if (!this.hasActual(grid, row)) return ''\r\n\r\n        const eventRow = getPrevEvent(grid, row)\r\n        if (eventRow) {\r\n            return get(eventRow, '_actualDepth')\r\n        }\r\n\r\n        return 0\r\n    }\r\n\r\n    getBehindHours = (grid, row, get, delta) => {\r\n        if (!this.hasActual(grid, row)) return ''\r\n\r\n        const eventRow = getPrevEvent(grid, row)\r\n        const prevDelta = eventRow ? get(eventRow, 'behindHours') : 0\r\n\r\n        return prevDelta + delta\r\n    }\r\n\r\n    hasActual = (grid, row) => {\r\n        return grid.Helpers.isNotEmpty(row.actualHours)\r\n    }\r\n\r\n    render() {\r\n        return <TreeGridComponent\r\n            layout={this.layout}\r\n            nestedKey={TimeTrackerGrid.nestedKey}\r\n            getBehindHours={this.getBehindHours}\r\n            getActualDepth={this.getActualDepth}\r\n            getPlannedDepth={this.getPlannedDepth}\r\n            getEventEnd={this.getEventEnd}\r\n            getEventStart={this.getEventStart}\r\n            getEventDuration={this.getEventDuration}\r\n            Validator={Validator}\r\n            {...this.props}\r\n        />\r\n    }\r\n}\r\n\r\nexport default TimeTrackerGrid\r\n","export default () => {\r\n    return [\r\n        {\r\n            Name: 'code',\r\n            CanFilter: 1,\r\n            MinWidth: 60,\r\n            CaseSensitive: 0\r\n        },\r\n        {\r\n            Name: 'name',\r\n            RelWidth: 1,\r\n            MinWidth: 250,\r\n            CanFilter: 1,\r\n            CaseSensitive: 0\r\n        }\r\n    ]\r\n}\r\n","export default ({ isAux }) => {\r\n    const cols = [\r\n        {\r\n            Name: 'hours',\r\n            MinWidth: 80,\r\n            CanEmpty: 1,\r\n            Format: ',0.00',\r\n            EditFormat: '',\r\n            Type: 'Float'\r\n        },\r\n        {\r\n            Name: '_eventDuration',\r\n            Type: 'Float',\r\n            Visible: 0,\r\n            CanHide: 0,\r\n            CanPrint: 0,\r\n            CanExport: 0,\r\n            Formula: 'Grid.Component.props.getEventDuration(hours)'\r\n        },\r\n        {\r\n            Name: 'start',\r\n            Visible: 0,\r\n            CanHide: 0,\r\n            CanPrint: 0,\r\n            CanExport: 0\r\n        },\r\n        {\r\n            Name: '_start',\r\n            Format: 'yyyy-M-d H:mm',\r\n            Type: 'Date',\r\n            CanEdit: 1,\r\n            OnChange: `Grid.SetValue(Row, \"start\", Value, 1)`,\r\n            ClassFormula: 'Grid.Helpers.isEmpty(start) && \"TSClassReadOnly\"',\r\n            Formula: 'start ? start : Grid.Component.props.getEventStart(Grid, Row, Get)',\r\n            MinWidth: 120\r\n        },\r\n        {\r\n            Name: '_end',\r\n            Format: 'yyyy-M-d H:mm',\r\n            Type: 'Date',\r\n            MinWidth: 120,\r\n            Formula: 'Grid.Component.props.getEventEnd(_start, _eventDuration)'\r\n        }\r\n    ]\r\n\r\n    return cols\r\n}\r\n","export default function centerHeader(key, config) {\r\n    config[`${key}Align`] = 'Center'\r\n}\r\n","export default () => {\r\n    const total = {\r\n        id: 'Total',\r\n        Color: '#D0E6F5',\r\n        CanDelete: 0,\r\n        CanEdit: 0,\r\n        Calculated: 1,\r\n        code: \"SUM\",\r\n\r\n        // calculations\r\n        hoursFormula: 'sum()',\r\n        _startFormula: '',\r\n        _endFormula: 'Grid.GetLast() ? Get(Grid.GetLast(), \"_end\") : \"\"'\r\n    }\r\n\r\n    return [total]\r\n}\r\n","export default ({ OperationStartDate, DerrickType, isAux }) => {\r\n    const topBar = {\r\n        id: 'topBar',\r\n        Space: -1,\r\n        Tag: 'timeGridTopBar',\r\n        Cells: 'OperationStartDate',\r\n\r\n        // OperationStartDate cell settings\r\n        OperationStartDate,\r\n        OperationStartDateLabel: 'Start operation: ',\r\n        OperationStartDateWidth: 120,\r\n        OperationStartDateFormat: 'yyyy-M-d H:mm',\r\n        OperationStartDateType: 'Date',\r\n        OperationStartDateRecalc: 256,\r\n        OperationStartDateOnChange: 'Grid.Component.props.handleOperationStartDateChange(Grid,Value)',\r\n\r\n        // DerrickType,\r\n        // DerrickTypeType: 'Bool',\r\n        // DerrickTypeLabel: 'Aux derrick: ',\r\n        // DerrickTypeOnChange: 'Grid.Component.props.handleDerrickTypeChange(Grid,Value)',\r\n    }\r\n\r\n    const topBarAux = {\r\n        id: 'topBarAux',\r\n        Visible: 0,\r\n        Cells: 'OperationStartDate',\r\n        OperationStartDate,\r\n        OperationStartDateRecalc: 256\r\n    }\r\n\r\n    return isAux ? [topBarAux] : [topBar]\r\n}\r\n","export default () => {\r\n    const commonGroupDef = {\r\n        CanEdit: 0,\r\n        Calculated: 1,\r\n\r\n        nameCanEdit: 1,\r\n        codeCanEdit: 1,\r\n\r\n        // calculations\r\n        hoursFormula: 'sum()',\r\n        _startFormula: 'Row.firstChild ? Get(Row.firstChild, \"_start\") : \"\"',\r\n        _endFormula: 'Row.lastChild ? Get(Row.lastChild, \"_end\") : \"\"',\r\n    }\r\n\r\n    const Well = {\r\n        CDef: 'Phase',\r\n        AcceptDef: 'Phase',\r\n\r\n        Class: 'time-grid-well',\r\n        Color: '#d7d7d7',\r\n\r\n        ...commonGroupDef\r\n    }\r\n\r\n    const Phase = {\r\n        CDef: 'Event',\r\n        AcceptDef: 'Event',\r\n\r\n        Class: 'time-grid-phase',\r\n        Color: '#f0f0f0',\r\n\r\n        ...commonGroupDef\r\n    }\r\n\r\n    const eventCalcOrder = [\r\n        'nameClass',\r\n        '_tftHours',\r\n        '_plannedDepth',\r\n        '_plannedDepthClass',\r\n        '_actualDepth',\r\n        '_actualDepthClass',\r\n        '_eventDuration',\r\n        '_start',\r\n        '_startClass',\r\n        '_end'\r\n    ]\r\n\r\n    const Event = {\r\n        AcceptDef: '',\r\n\r\n        CalcOrder: eventCalcOrder.join()\r\n    }\r\n\r\n    return { Well, Phase, Event }\r\n}\r\n","import data from './data.json';\r\nimport moment from 'moment'\r\n\r\nconst STORAGE_KEY = 'data'\r\n\r\nfunction getPhases(phases, start) {\r\n  let prevItem = null\r\n  \r\n  const calculate = (item, parent) => {\r\n    const newItem = {\r\n      name: item.name,\r\n      id: item.id\r\n    }\r\n    \r\n    if (item.Items) {\r\n      newItem.Items = item.Items.map(k => calculate(k, newItem))\r\n    } else {\r\n      newItem.start = item.start ? item.start : prevItem ? prevItem.end : start\r\n      newItem.end = newItem.start + (item.hours * 60 * 60 * 1000)\r\n      prevItem = newItem\r\n    }\r\n    \r\n    if (!parent) return newItem\r\n    \r\n    if (!parent.start) {\r\n      parent.start = newItem.start\r\n    }\r\n    parent.end = newItem.end || parent.end\r\n    \r\n    return newItem\r\n  }\r\n  \r\n  return phases.map(item => calculate(item))\r\n}\r\n\r\nclass DataService {\r\n  data = this.getFromLS() || data\r\n  \r\n  constructor() {\r\n    if (DataService.instance) {\r\n      return DataService.instance\r\n    }\r\n    \r\n    window.DataService = this\r\n    \r\n    DataService.instance = this\r\n  }\r\n  \r\n  save(key, data) {\r\n    if (!key) {\r\n      throw new Error('No key at save method')\r\n    }\r\n    \r\n    this.data[key] = data\r\n    \r\n    this.saveToLS()\r\n  }\r\n  \r\n  saveToLS() {\r\n    localStorage.setItem(STORAGE_KEY, JSON.stringify(this.data))\r\n  }\r\n  \r\n  getFromLS() {\r\n    try {\r\n      return JSON.parse(localStorage.getItem(STORAGE_KEY))\r\n    } catch (e) {\r\n      return null\r\n    }\r\n  }\r\n  \r\n  getStartTime() {\r\n    return this.data.OperationStartDate\r\n  }\r\n  \r\n  getPhases() {\r\n    return getPhases(this.data.Phases, this.getStartTime())\r\n  }\r\n  \r\n  getPhasesAux() {\r\n    return getPhases(this.data.PhasesAux, this.getStartTime())\r\n  }\r\n  \r\n  getCompanies() {\r\n    return this.data.Companies\r\n  }\r\n  \r\n  getCosts() {\r\n    return this.data.Costs\r\n  }\r\n  \r\n  getDays() {\r\n    const sum = (arr) => arr.reduce((s, item) => {\r\n      if (item.Items) {\r\n        return s + sum(item.Items)\r\n      }\r\n      \r\n      return s + (item.hours || 0)\r\n    }, 0)\r\n    \r\n    let totalDuration = sum(this.data.Phases)\r\n    const start = this.getStartTime()\r\n    const days = []\r\n    \r\n    while (totalDuration > 0) {\r\n      const date = moment(start + totalDuration * 60 * 60 * 1000)\r\n      days.push(date.format('YYYY_MM_DD'))\r\n      totalDuration -= 24\r\n    }\r\n    \r\n    return days\r\n  }\r\n}\r\n\r\nexport default new DataService()\r\n","import React, { Component } from 'react'\r\nimport deepClone from '../../helpers/deep-clone'\r\nimport TimeTrackerGrid from './TimeTrackerGrid'\r\nimport dataService from '../../db/dataService'\r\n\r\nclass TimeTracker extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    \r\n    this.state = {\r\n      DerrickType: 1,\r\n      Phases: this.prepareState(dataService.data.Phases),\r\n      PhasesAux: this.prepareState(dataService.data.PhasesAux),\r\n      OperationStartDate: dataService.getStartTime()\r\n    }\r\n  }\r\n  \r\n  prepareState(data) {\r\n    const wells = deepClone(data)\r\n    const defs = ['Well', 'Phase', 'Event']\r\n    const reCalc = [3, 3, 256]\r\n    \r\n    function addRowDefinitions(row, level = 0) {\r\n      row.Def = defs[level]\r\n      row.Recalc = reCalc[level]\r\n      \r\n      if (row.Items) {\r\n        row.Items.forEach(row => addRowDefinitions(row, level + 1))\r\n      }\r\n    }\r\n    \r\n    wells.forEach(row => addRowDefinitions(row, 0))\r\n    return wells\r\n  }\r\n  \r\n  onDataChanged = (newData, key) => {\r\n    this.setState(\r\n      { [key]: newData },\r\n      () => {\r\n        dataService.save(key, newData)\r\n      }\r\n    )\r\n  }\r\n  \r\n  handleOperationStartDateChange = (grid, value) => {\r\n    this.setState({ OperationStartDate: value })\r\n  }\r\n  \r\n  handleDerrickTypeChange = (grid, value) => {\r\n    this.setState({ DerrickType: value })\r\n  }\r\n  \r\n  render() {\r\n    const { DerrickType, Phases, PhasesAux, OperationStartDate } = this.state\r\n    \r\n    return (\r\n      <div className=\"time-grid-view\">\r\n        <div id=\"timeGridTopBar\" className=\"time-grid-view__top-bar\"/>\r\n        \r\n        <div className=\"time-grid-view__grids\">\r\n          <TimeTrackerGrid\r\n            id=\"TimeTrackerMain\"\r\n            body={Phases}\r\n            DerrickType={DerrickType}\r\n            OperationStartDate={OperationStartDate}\r\n            handleDerrickTypeChange={this.handleDerrickTypeChange}\r\n            handleOperationStartDateChange={this.handleOperationStartDateChange}\r\n            onDataChanged={(data) => this.onDataChanged(data, 'Phases')}\r\n          />\r\n          \r\n          {DerrickType ? <TimeTrackerGrid\r\n            id=\"TimeTrackerAux\"\r\n            isAux={true}\r\n            body={PhasesAux}\r\n            DerrickType={DerrickType}\r\n            OperationStartDate={OperationStartDate}\r\n            onDataChanged={(data) => this.onDataChanged(data, 'PhasesAux')}\r\n          /> : ''}\r\n        </div>\r\n      \r\n      \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TimeTracker\r\n","export default {\n  Cfg: {\n    Dragging: 1,\n    HideZero: 1,\n    Size: 'Small',\n    ShowDeleted: 0,\n    AutoSort: 0,\n    RowIndex: 'Pos',\n    Filtered: 0,\n    RoundNumbers: 1,\n    RoundNumbersDigits: 2,\n    ExportType: 'Expanded,Outline,Indent,ForceBorder,TextType,Strings,FixedRows,Size',\n    PrintPageOrientation: 1,\n    PrintPageSize: 7,\n    Undo: 32,\n    ColPaging: 2,\n    NoVScroll: 1,\n    Alternate: 2,\n    AutoUpdate: 1\n  },\n  Def: {\n    Comment: {\n      CanEdit: 0,\n      CanCopy: 0,\n      CanDelete: 0,\n      CanSelect: 0,\n      CanDrag: 0\n    }\n  },\n  Toolbar: {\n    Cells30Manipulate: 'Undo,Redo',\n    Cells20Data: 'Print,ExportPDF,Export,Columns',\n    Cells60Cfg: 'Help'\n  },\n  Panel: {\n    Select: 1,\n    Copy: 1,\n    Delete: 1,\n    Move: 1\n  },\n  MenuExport: {\n    Items: 'ColsCaption,Cols,RowsCaption,OptionsCaption,Options',\n    Attribute: 'CanExport',\n    HideUnused: 1\n  },\n  MenuPrint: {\n    Items: 'ColsCaption,Cols,SpaceCaption,RowsCaption,OptionsCaption,Options,SizeCaption,Size',\n    Attribute: 'CanPrint',\n    HideUnused: '1'\n  }\n}\n","export const COLS = ['in', 'out', 'onboard']\n","import { COLS } from './constants'\n\nexport default (days) => {\n  \n  return [\n    {\n      Name: 'prior'\n    },\n    ...days.map(day => COLS.map(col => ({ Name: `${day}_${col}`, Width: 60 }))).flat()\n  ]\n}\n","import random from 'lodash/random';\nimport { loremIpsum } from 'lorem-ipsum'\nimport { COLS } from './constants'\n\nexport default (days) => {\n  const daysHeader = {\n    Kind: 'Header',\n    Spanned: 1,\n    \n    name: 'Name',\n    nameAlign: 'Center'\n  }\n  \n  const companiesHeader = {\n    Kind: 'Header'\n  }\n  \n  const commentRow = {\n    Def: 'Comment',\n    Spanned: 1,\n    name: 'Comments',\n    nameAlign: 'Center',\n    nameVertAlign: 'middle',\n    nameRowSpan: 10\n  }\n  \n  days.forEach(day => {\n    const colName = `${day}_in`\n    \n    Object.assign(daysHeader, {\n      [colName]: day.replaceAll('_', '-'),\n      [`${colName}Span`]: 3,\n      [`${colName}Align`]: 'Center'\n    })\n    \n    COLS.forEach(col => Object.assign(companiesHeader, {\n      [`${day}_${col}`]: col.toUpperCase(),\n      [`${day}_${col}Align`]: 'Center'\n    }))\n    \n    Object.assign(commentRow, {\n      [`${colName}Span`]: 3\n    })\n  })\n  \n  const comments = Array.from({ length: 10 }).map(() => ({ ...commentRow }))\n  \n  days.forEach(day => {\n    const rowIndex = random(0, 9)\n    const row = comments[rowIndex]\n    \n    row[`${day}_in`] = loremIpsum()\n  })\n  \n  return [daysHeader, ...comments, daysHeader, { ...companiesHeader, id: 'Header' }]\n}\n","export default days => {\n  const toComment = { Pos: 'To', Spanned: 1 }\n  const fromComment = { Pos: 'From', Spanned: 1 }\n  \n  days.forEach(day => {\n    const colName = `${day}_in`\n    \n    Object.assign(toComment, {\n      [`${colName}Span`]: 3\n    })\n  \n    Object.assign(fromComment, {\n      [`${colName}Span`]: 3\n    })\n  })\n  \n  return [toComment, fromComment]\n}\n","import mergeLayouts from '../../components/TreeGridComponent/utils/merge-layouts'\nimport staticLayout from './static-layout'\nimport createColumns from './create-columns'\nimport createHead from './create-head'\nimport createFoot from './create-foot'\nimport dataService from '../../db/dataService'\nimport createLeftColumns from './create-left-columns'\n\nexport default () => {\n  const days = dataService.getDays()\n  \n  const dynamicLayout = {\n    Foot: createFoot(days),\n    Head: createHead(days),\n    LeftCols: createLeftColumns(),\n    Cols: createColumns(days)\n  }\n  \n  return mergeLayouts(staticLayout, dynamicLayout)\n}\n","export default () => {\n  return [\n    {\n      Name: 'name',\n      Spanned: 1\n    }\n  ]\n}\n","import React, { useMemo, useState } from 'react'\nimport createLayout from './create-layout'\nimport TreeGridComponent from '../../components/TreeGridComponent'\nimport dataService from '../../db/dataService'\n\nconst GRID_ID = 'Companies'\n\nconst Companies = () => {\n  const [body, setBody] = useState(dataService.getCompanies())\n  const layout = useMemo(createLayout, [])\n  \n  const onDataChanged = (newData) => {\n    setBody(newData)\n    dataService.save('Companies', newData)\n  }\n  \n  return <TreeGridComponent id={GRID_ID} layout={layout} onDataChanged={onDataChanged}\n                            body={body}/>\n}\n\nexport default Companies\n","import React, { useState } from 'react'\nimport Highcharts from 'highcharts'\nimport HighchartsReact from 'highcharts-react-official'\nimport dataService from '../../db/dataService'\n\nrequire('highcharts/modules/gantt')(Highcharts)\nrequire('highcharts/modules/draggable-points')(Highcharts)\n\nconst HighchartGant = () => {\n  var today = new Date(),\n    day = 1000 * 60 * 60 * 24;\n\n// Set to 00:00:00:000 today\n  today.setUTCHours(0);\n  today.setUTCMinutes(0);\n  today.setUTCSeconds(0);\n  today.setUTCMilliseconds(0);\n  today = today.getTime();\n  \n  let prevEvent = null\n  const start = dataService.getStartTime()\n  const collectEvents = (acc, item) => {\n    if (item.Items) {\n      item.Items.reduce((ac, item) => collectEvents(ac, item), acc)\n    } else {\n      item.end = (item.start || start) + (item.hours * 60 * 60 * 1000)\n      item.start = prevEvent ? prevEvent.end : start\n      item.y = 0\n      prevEvent = item\n      acc.push(item)\n    }\n    \n    return acc\n  }\n  \n  const events = dataService.getPhases().reduce((acc, item) => collectEvents(acc, item), [])\n  console.log(events)\n  \n  const [options] = useState({\n    title: {\n      text: 'Intraday jobs Scheduling'\n    },\n    xAxis: {\n      currentDateIndicator: true\n    },\n    \n    yAxis: {\n      categories: ['Main', 'Aux']\n    },\n    \n    plotOptions: {\n      series: {\n        dragDrop: {\n          draggableX: true,\n          dragMinY: 0,\n          dragMaxY: 2,\n          dragPrecisionX: 1000 * 60\n        },\n        dataLabels: {\n          enabled: true,\n          format: '{point.name}'\n        },\n        allowPointSelect: true,\n        point: {\n          events: {\n            drag(e) {\n              console.log(e)\n            }\n          }\n        }\n      }\n    },\n    \n    series: [{\n      name: 'Init M1, Import FIRT market data',\n      data: events\n    }]\n  })\n  \n  return (\n    <HighchartsReact\n      containerProps={{ style: { height: '100%' } }}\n      highcharts={Highcharts}\n      constructorType='ganttChart'\n      options={options}\n    />\n  )\n}\n\nexport default HighchartGant\n","export default {\n  Cfg: {\n    AutoUpdate: 1,\n    FastGantt: 1,\n    GanttStyle: 'Standard'\n  },\n  Zoom: [\n    {\n      Name: \"months\",\n      GanttUnits: \"d\",\n      GanttWidth: \"50\", // 1 day equal 50px\n      GanttDragUnits: 'h',\n      GanttChartRound: \"d\",\n      GanttHeader1: \"M#MMMM yyyy\"\n    },\n    {\n      Name: \"days\",\n      GanttUnits: \"h\",\n      GanttWidth: \"8\", // 1 hour equal 8px\n      GanttDragUnits: 'm',\n      GanttChartRound: \"d\",\n      GanttHeader1: \"d#dddd dddddd MMMM yyyy\",\n      GanttHeader2: \"h6#HH\"\n    },\n    {\n      Name: \"hours\",\n      GanttUnits: \"h\",\n      GanttWidth: \"25\", // 1 hour equal 25px\n      GanttDragUnits: 'm',\n      GanttChartRound: \"h\",\n      GanttHeader1: \"d#dddd dddddd MMMM yyyy\",\n      GanttHeader2: \"h#HH\"\n    },\n    {\n      Name: \"minutes\",\n      GanttUnits: \"m\",\n      GanttWidth: \"2\", // 1 minute equal 2px\n      GanttDragUnits: 's',\n      GanttChartRound: \"h\",\n      GanttHeader1: \"d#dddd dddddd MMMM yyyy\",\n      GanttHeader2: \"h#HH\",\n      GanttHeader3: \"m15#mm\"\n    }\n  ],\n  Toolbar: {\n    Cells05: \"Zoom\",\n    ZoomType: \"SelectGanttZoom\",\n    ZoomWidth: \"90\"\n  }\n}\n","import dataService from '../../db/dataService'\nimport moment from 'moment'\n\nconst CLASSES = ['Aqua', 'Blue', 'Fuchsia', 'Gray', 'Green', 'Lime', 'Maroon', 'Navy', 'Olive', 'Orange', 'Purple', 'Red', 'Silver', 'Teal', 'White', 'Yellow']\n\nconst WELL_LEVEL = 0\nconst PHASE_LEVEL = 1\nconst EVENT_LEVEL = 2\n\nconst collectItemsOnLevel = (deepArr, level = WELL_LEVEL, settings = {}) => {\n  const collector = (acc, item, _level) => {\n    const event = {\n      Text: item.name,\n      Id: item.id,\n      Class: CLASSES[acc.length],\n      Start: moment(item.start).format('MM/DD/YYYY HH:mm:ss'),\n      End: moment(item.end).format('MM/DD/YYYY HH:mm:ss'),\n      ...settings\n    }\n    \n    if (level === _level) {\n      acc.push(event)\n      \n      return acc\n    }\n    \n    if (_level < level && item.Items) {\n      item.Items.forEach(it => collector(acc, it, _level + 1))\n    }\n    \n    return acc\n  }\n  \n  \n  return deepArr.reduce((acc, item) => collector(acc, item, 0), [])\n}\n\nexport default () => {\n  const phasesMain = collectItemsOnLevel(dataService.getPhases(), PHASE_LEVEL, { Type: 'Fixed' })\n  const eventsMain = collectItemsOnLevel(dataService.getPhases(), EVENT_LEVEL, { Type: 'Fixed' })\n  const phasesAux = collectItemsOnLevel(dataService.getPhasesAux(), PHASE_LEVEL)\n  const eventsAux = collectItemsOnLevel(dataService.getPhasesAux(), EVENT_LEVEL)\n  console.log(phasesMain)\n  return [\n    {\n      id: '64029a29010',\n      name: 'Main phases',\n      CanEdit: 0,\n      events: phasesMain\n    },\n    {\n      id: '24029a29010',\n      name: 'Main events',\n      CanEdit: 0,\n      events: eventsMain\n    },\n    {\n      id: '61029a29010',\n      name: 'Aux phases',\n      CanEdit: 0,\n      events: phasesAux\n    },\n    {\n      id: '63029a29010',\n      name: 'Aux events',\n      events: eventsAux\n    }\n  ]\n}\n","import merge from 'lodash/merge'\r\nimport set from 'lodash/set'\r\nimport deepClone from '../../helpers/deep-clone'\r\n\r\nconst convertValue = value => {\r\n  if (value === '') return value\r\n  \r\n  if (value === '0') return 0\r\n  \r\n  return +value || value\r\n}\r\n\r\nclass DataListManager {\r\n  // symbol vars for ignoring JSON.stringify\r\n  static parent = Symbol('parent')\r\n  \r\n  static next = Symbol('next')\r\n  \r\n  static prev = Symbol('prev')\r\n  \r\n  static indexWithinParent = Symbol('indexWithinParent')\r\n  \r\n  #list\r\n  \r\n  #data\r\n  \r\n  nestedKey = ''\r\n  \r\n  constructor(data, nestedKey) {\r\n    const dataClone = deepClone(data)\r\n    this.nestedKey = nestedKey\r\n    \r\n    // TODO: fix flatting for more than one well. Now it works just for two levels\r\n    // nextParent is defined wrong.\r\n    function flatArrById(arr, list, parent = null, nextParent = null) {\r\n      let i = 0\r\n      while (i < arr.length) {\r\n        const item = arr[i++]\r\n        const hasChildren = nestedKey && item[nestedKey] && item[nestedKey].length > 0\r\n        \r\n        if (hasChildren) {\r\n          // eslint-disable-next-line prefer-destructuring\r\n          item[DataListManager.next] = item[nestedKey][0] // get first child\r\n        } else {\r\n          item[DataListManager.next] = arr[i] ? arr[i] : nextParent // get sibling item or next parent\r\n        }\r\n        \r\n        item[DataListManager.parent] = parent\r\n        item[DataListManager.prev] = arr[i - 2] ? arr[i - 2] : parent\r\n        item[DataListManager.indexWithinParent] = i - 1\r\n        list.set(item.id, item)\r\n        \r\n        if (hasChildren) {\r\n          flatArrById(item[nestedKey], list, item, arr[i])\r\n        }\r\n      }\r\n      \r\n      return list\r\n    }\r\n    \r\n    this.#data = dataClone\r\n    this.#list = flatArrById(dataClone, new Map())\r\n  }\r\n  \r\n  get data() {\r\n    return deepClone(this.#data)\r\n  }\r\n  \r\n  /**\r\n   * Get future index for inserting item. choose between nextIndex or prevIndex\r\n   * @param nextId - uid\r\n   * @param prevId - uid\r\n   * @returns {number}\r\n   * @private\r\n   */\r\n  _getFutureIndex(nextId, prevId) {\r\n    const next = this.getItem(nextId)\r\n    const prev = this.getItem(prevId)\r\n    \r\n    if (next) {\r\n      return next[DataListManager.indexWithinParent]\r\n    }\r\n    \r\n    if (prev) {\r\n      return prev[DataListManager.indexWithinParent] + 1\r\n    }\r\n    \r\n    return 0\r\n  }\r\n  \r\n  /**\r\n   * Returns parent's array for child item\r\n   * @param parent\r\n   * @returns {Array}\r\n   * @private\r\n   */\r\n  _getParentArr(parent) {\r\n    if (parent) {\r\n      parent[this.nestedKey] = parent[this.nestedKey] || []\r\n      return parent[this.nestedKey]\r\n    }\r\n    \r\n    return this.#data\r\n  }\r\n  \r\n  /**\r\n   * Add child to array and update their index\r\n   * @param parent\r\n   * @param index\r\n   * @param item\r\n   * @private\r\n   */\r\n  _setChildToParent(parent, index, item) {\r\n    const arr = this._getParentArr(parent)\r\n    \r\n    arr.splice(index, 0, item)\r\n    this._updateIndexWithinParent(arr)\r\n  }\r\n  \r\n  _updateIndexWithinParent(arr) {\r\n    let i = 0\r\n    while (i < arr.length) {\r\n      const item = this.#list.get(arr[i++].id)\r\n      item[DataListManager.indexWithinParent] = i - 1\r\n    }\r\n  }\r\n  \r\n  getItem(id) {\r\n    return this.#list.get(id)\r\n  }\r\n  \r\n  hasItem(id) {\r\n    return this.#list.has(id)\r\n  }\r\n  \r\n  /**\r\n   * Remove item from parent or from parent & list\r\n   * @param id\r\n   * @param isTotally{Boolean}\r\n   */\r\n  removeItem(id, isTotally = true) {\r\n    if (!this.hasItem(id)) {\r\n      return\r\n    }\r\n    \r\n    const item = this.getItem(id)\r\n    const parent = item[DataListManager.parent]\r\n    const index = item[DataListManager.indexWithinParent]\r\n    \r\n    // remove item from list\r\n    if (isTotally) this.#list.delete(id)\r\n    \r\n    const arr = this._getParentArr(parent)\r\n    \r\n    arr.splice(index, 1)\r\n    this._updateIndexWithinParent(arr)\r\n  }\r\n  \r\n  addItem(id, parentId, nextId, prevId, item) {\r\n    if (this.hasItem(id)) {\r\n      this.moveItem(id, parentId, nextId, prevId)\r\n      return\r\n    }\r\n    \r\n    const parent = this.getItem(parentId)\r\n    const index = this._getFutureIndex(nextId, prevId)\r\n    const convertedItem = DataListManager.convertItemKeys(item)\r\n    // update list\r\n    this.#list.set(id, convertedItem)\r\n    \r\n    // set parent\r\n    convertedItem[DataListManager.parent] = parent\r\n    \r\n    this._setChildToParent(parent, index, convertedItem)\r\n  }\r\n  \r\n  moveItem(id, parentId, nextId, prevId) {\r\n    const item = this.getItem(id)\r\n    const parent = this.getItem(parentId)\r\n    const index = this._getFutureIndex(nextId, prevId)\r\n    \r\n    // remove item from old parent\r\n    this.removeItem(id, false)\r\n    \r\n    // change parent\r\n    item[DataListManager.parent] = parent\r\n    \r\n    this._setChildToParent(parent, index, item)\r\n  }\r\n  \r\n  updateItem(id, data) {\r\n    if (!this.hasItem(id)) {\r\n      return\r\n    }\r\n    \r\n    const item = this.getItem(id)\r\n    const convertedData = DataListManager.convertItemKeys(data)\r\n    merge(item, convertedData)\r\n  }\r\n  \r\n  static convertItemKeys(item) {\r\n    // TODO: change after model structure concern\r\n    return Object.entries(item).reduce((acc, [key, value]) => {\r\n      if (/^_|^f_|^[A-Z]_|Click|Error/.test(key) && !/Span$/.test(key)) return acc // ignore temp keys\r\n      \r\n      value = convertValue(value) // TODO: replace to TReeGrid config. convert to number.\r\n      \r\n      set(acc, key, value)\r\n      return acc\r\n    }, {})\r\n  }\r\n}\r\n\r\nexport { DataListManager, DataListManager as default }\r\n","import React, { useEffect } from 'react'\nimport TreeGridComponent from '../../components/TreeGridComponent'\nimport createLayout from './create-layout'\nimport createBody from './create-body'\nimport dataService from '../../db/dataService'\nimport DataListManager from './DataListManager'\nimport last from 'lodash/last'\n\nconst GRID_ID = 'GANTT'\n\nconst { TGAddEvent } = window\n\nconst TreeGridGant = () => {\n  const layout = createLayout()\n  const body = createBody()\n  let dialog = null\n  \n  useEffect(() => {\n    TGAddEvent('OnDragGanttRun', GRID_ID, (grid, row, col, index, start, newData, oldData, change, dir, XY, keyPrefix, X, Y) => {\n      const date = new Date(newData).toString().substr(0, 21)\n      if (dialog) {\n        const inputEl = dialog.Tag.getElementsByTagName(\"input\")[0]\n        inputEl.value = date\n        return\n      }\n      \n      dialog = window.ShowDialog(\n        {\n          Body: `<input type=\"text\" style=\"width: 140px\" value=\"${date}\">`\n        },\n        {\n          X, Y: Y + 12\n        }\n      )\n    })\n    \n    TGAddEvent('OnEndDragGanttRun', GRID_ID, (grid, row, col, index, start, newData) => {\n      dialog.Close()\n      dialog = null\n    })\n  }, [])\n  \n  const onDataChanged = (newData) => {\n    const dataManager = new DataListManager(dataService.getPhasesAux(), 'Items')\n    \n    newData.forEach(row => {\n      let { events, CanEdit } = row\n      \n      if (!CanEdit) return\n      \n      if (typeof events === 'string') {\n        events = Function(`return ${events}`)()\n      }\n      \n      events.forEach(({ Id, Start, Duration, Text }) => {\n        dataManager.updateItem(Id, {\n          start: +new Date(Start),\n          hours: Duration,\n          name: Text\n        })\n      })\n    })\n    \n    dataService.save('PhasesAux', dataManager.data)\n  }\n  \n  return <TreeGridComponent id={GRID_ID} ganttRunKey={'events'} layout={layout} body={body}\n                            onDataChanged={onDataChanged}/>\n}\n\nexport default TreeGridGant\n","import createLeftCols from './create-left-cols'\nimport createCols from './create-cols'\nimport mergeLayouts from '../../components/TreeGridComponent/utils/merge-layouts'\nimport staticLayout from './static-layout'\nimport createSolid from './create-solid'\nimport dataService from '../../db/dataService'\n\nexport default () => {\n  const dynamicLayout = {\n    LeftCols: createLeftCols(),\n    Cols: createCols(dataService.getStartTime()),\n    Solid: createSolid(dataService.getStartTime())\n  }\n  \n  return mergeLayouts(staticLayout, dynamicLayout)\n}\n","export default (OperationStartDate) => {\r\n  const topBar = {\r\n    id: 'topBar',\r\n    Space: -1,\r\n    Cells: 'OperationStartDate',\r\n    \r\n    // OperationStartDate cell settings\r\n    OperationStartDate,\r\n    OperationStartDateLabel: 'Start operation: ',\r\n    OperationStartDateWidth: 120,\r\n    OperationStartDateFormat: 'yyyy-M-d H:mm',\r\n    OperationStartDateType: 'Date',\r\n    OperationStartDateRecalc: 256,\r\n    OperationStartDateOnChange: 'Grid.Component.props.handleOperationStartDateChange(Grid,Value)'\r\n  }\r\n  \r\n  return [topBar]\r\n}\r\n","export default () => {\n  return [\n    {\n      Name: 'name'\n    },\n    {\n      Name: 'events',\n      Width: 100,\n      Visible: 0\n    },\n    {\n      Name: 'projectEnd',\n      Type: 'Date'\n    }\n  ]\n}\n","export default (start) => {\n  return [\n    {\n      Name: 'GANTT',\n      Type: 'Gantt',\n      GanttZoom: 'days',\n      GanttRunSave: 2,\n      GanttDataUnits: 'h',\n      GanttRun: \"events\",\n      GanttRunAdjust: 'Shrink',\n      GanttRunTip: \"*Text*\"\n    }\n  ]\n}\n","import React, { Component } from 'react';\r\nimport './App.css'\r\nimport NavBar from './components/NavBar'\r\n\r\nimport TimeTracker from './views/TimeTracker'\r\nimport Companies from './views/Companies'\r\nimport HighchartsGant from './views/HighchartGant'\r\nimport TreeGridGantt from './views/TreeGridGantt'\r\nimport { HashRouter, Route, Switch } from 'react-router-dom'\r\n\r\n\r\nclass Sample extends Component {\r\n    render() {\r\n        return (\r\n            <HashRouter>\r\n                <NavBar/>\r\n                <div className=\"views-container\">\r\n                    <Switch>\r\n                        <Route path=\"/\" exact>\r\n                            <TimeTracker/>\r\n                        </Route>\r\n    \r\n                        <Route path=\"/companies\">\r\n                            <Companies/>\r\n                        </Route>\r\n    \r\n                        <Route path=\"/highcharts-gant\">\r\n                            <HighchartsGant/>\r\n                        </Route>\r\n    \r\n                        <Route path=\"/tree-grid-gant\">\r\n                            <TreeGridGantt/>\r\n                        </Route>\r\n                    </Switch>\r\n                </div>\r\n            </HashRouter>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Sample\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nconst root = document.getElementById('root')\r\nif (root) {\r\n  ReactDOM.render(\r\n    <React.StrictMode>\r\n      <App/>\r\n    </React.StrictMode>,\r\n    root\r\n  );\r\n}\r\n","export default {\n  Cfg: {\n    FocusRect: 1,\n    SelectingCells: 2,\n    SelectingFocus: 1,\n  \n    CopyCols: 0,\n    PasteFocused: 4,\n    \n    ShowDeleted: 0,\n    NoVScroll: 0\n  },\n  Actions: {\n    OnCtrlDragRow: 'DragSelected',\n    OnDragRow: 'FocusCells',\n    OnDel: '!StartEditEmpty' // prevent delete rows on del button pressing\n  },\n  Toolbar: {\n    Cells60Cfg: 'Columns,Help',\n    Cells70Styles: 'Sizes'\n  },\n  Panel: {\n    PanelCopyMenu:\n        'CopyRowBelow,CopyRowsBelow@F,CopyTree,CopyRowsTreeBelow@F,CopySelected@S,CopySelectedTree@S,CopySelectedChildEnd,CopySelectedTreeChildEnd,-,AddRowBelow,AddRowsBelow@2,CopyEmptyBelow,CopyRowsEmptyBelow@2,CopySelectedEmpty,-,AddChildEnd,CopySelectedEmptyChildEnd'\n  },\n  Lang: {\n    Format: {\n      GroupSeparator: ' ',\n      GMT: 0\n    }\n  }\n}\n"],"sourceRoot":""}